{
  "SaveName": "Markers",
  "EpochTime": 1745818294,
  "Date": "4/28/2025 1:31:34 AM",
  "VersionNumber": "v13.3",
  "GameMode": "Cards",
  "GameType": "Game",
  "GameComplexity": "Low Complexity",
  "PlayingTime": [
    0,
    0
  ],
  "PlayerCounts": [
    2,
    2
  ],
  "Tags": [
    "Role-playing Games",
    "Strategy Games",
    "Miniature Games",
    "Card Games",
    "Wargames",
    "Cards",
    "Components",
    "Figurines",
    "Rules",
    "Scripting",
    "English"
  ],
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Table": "Table_RPG",
  "Sky": "Sky_Forest",
  "SkyURL": "https://steamusercontent-a.akamaihd.net/ugc/1014943256936089848/FBFD82B237D4301A3C4701A0D50DF6D23D61D2E5/",
  "Note": "----------------   CREW RETRIEVER   --------------\nPASTE the text created by the crew app on the WHITE CARD \"description\" \nconextMenu - > click last text box option\nCTRL+A -> CTRL+V  -> close\nCLICK the button.\n\n------------------  CONDITIONS   -----------------\nCLICK AROUND the health bar\n (mostly invisible when off) \nCLICK and RIGHT CLICK to change Value\nHEALTH / AURA  behave the same\n\n----------------   MOVE MODEL   -----------------\nHOVER model and use 1-9 to start a 1-9Â¨ Move  use '0' for a Limitless Move\nCLICK to set waypoints\nDOUBLE CLICK to confirm\nRIGHT CLICK to remove waypoint or abort\n\n----------------   EXTRA MODELS   ---------------\nIf you need some extra reference card get it from the side boxes grouped by faction\nheavy image download expected",
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "MusicPlayer": {
    "RepeatSong": true,
    "PlaylistEntry": 1,
    "CurrentAudioTitle": "Beware the Forest Mushrooms - Yoko Shimomura",
    "CurrentAudioURL": "https://steamusercontent-a.akamaihd.net/ugc/779618751110679052/8BDB62372022408D9E5B5DD5B69E86BB43D46F49/",
    "AudioLibrary": []
  },
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0
  },
  "ComponentTags": {
    "labels": [
      {
        "displayed": "blue_discard",
        "normalized": "blue_discard"
      },
      {
        "displayed": "red_discard",
        "normalized": "red_discard"
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "DecalPallet": [],
  "LuaScript": "--[[ Lua code. See documentation: https://api.tabletopsimulator.com/ --]]\n\n--[[ The onLoad event is called after the game save finishes loading. --]]\nfunction onLoad()\n    --[[ print('onLoad!') --]]\nend\n\n--[[ The onUpdate event is called once per frame. --]]\nfunction onUpdate()\n    --[[ print('onUpdate loop!') --]]\nend",
  "LuaScriptState": "",
  "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->",
  "ObjectStates": [
    {
      "GUID": "33c3b0",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -15.1107731,
        "posY": 4.81034231,
        "posZ": -20.1076221,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7719851,
        "scaleY": 9.174497,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d6b8b4",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.2150211,
        "posY": 4.81034231,
        "posZ": 10.17524,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 11.6554289,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "911341",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 30.2511711,
        "posY": 4.81034231,
        "posZ": 9.59069252,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 11.6554213,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Purple",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2a2001",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 15.4749184,
        "posY": 4.81034231,
        "posZ": 19.8365288,
        "rotX": 0.0,
        "rotY": 179.8,
        "rotZ": 0.0,
        "scaleX": 11.7719746,
        "scaleY": 9.174497,
        "scaleZ": 4.87124
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ab497d",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 15.1961212,
        "posY": 4.81034231,
        "posZ": -20.1400986,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7719707,
        "scaleY": 9.174499,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "White",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "367320",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -15.1927719,
        "posY": 4.81034231,
        "posZ": 19.787817,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 11.7719707,
        "scaleY": 9.174497,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "65ef1c",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 30.1035728,
        "posY": 4.81034231,
        "posZ": -8.449126,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 11.6554184,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.96,
        "g": 0.438999981,
        "b": 0.807,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Pink",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "0ac07f",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.247818,
        "posY": 4.81034231,
        "posZ": -8.822588,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 11.6554317,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Orange",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d84712",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.1864033,
        "posY": 1.0322063,
        "posZ": -11.4048147,
        "rotX": -2.49169744E-07,
        "rotY": 180.019287,
        "rotZ": -9.25998762E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "BaseMarkerBag",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "9d730a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00542924134,
            "posY": -7.30157357E-09,
            "posZ": 0.00434298953,
            "rotX": 4.52627341E-26,
            "rotY": 2.60551043E-11,
            "rotZ": -1.9906761E-13,
            "scaleX": 0.279260635,
            "scaleY": 10.00001,
            "scaleZ": 0.28807953
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424705526/42BDDA9DA6783B30F0A81D1A68149038A714DBC6/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Hasted\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554369193/9FC768C81E9EF00BB41E7FBAB40F58CE474A71A4/\", color=\"#FFffff\", stacks=false\r\n}\r\n\r\nfunction onCollisionEnter(col)\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\n",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "54e536",
      "Name": "Custom_Token",
      "Transform": {
        "posX": -20.562458,
        "posY": 3.67151546,
        "posZ": -19.869133,
        "rotX": 1.35593918E-08,
        "rotY": 179.995331,
        "rotZ": 1.352411E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Gen Tokens",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.454703748,
        "g": 0.438066185,
        "b": 0.438066185
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55835947070619352/6DCE9AE31487CDFE09BFEC3D14E57D0A385645CD/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "f_color = {0,0,0,95}\r\nlocal firstTokenPosition={ x=-16.905245,y= 1.01,z=5.013737}\r\nlocal firstBagPosition= { x=4.954772, y=1.01, z=-16.97987 }\r\nlocal objectLib={\r\n    libeary=\"d41eb9\";\r\n    baseToken=\"030e0e\";\r\n    baseBag=\"d84712\";\r\n    specialTokenBag=\"3ea749\";\r\n}\r\nlocal tokenLib={}\r\nlocal bagLib={}\r\nlocal waitBase=1\r\nfunction onLoad(save_state)\r\n    self.createButton({\r\n        label=\"\",\r\n        click_function=\"genTokens\",\r\n        tooltip=\"Gen Tokens\",\r\n        function_owner=self,\r\n        position={0,0.11,0},\r\n        height=600,\r\n        width=1000,\r\n        alignment = 3,\r\n        scale={x=1.5, y=1.5, z=1.5},\r\n        font_size=300,\r\n        font_color=f_color,\r\n        color={0,0,0,0}\r\n        })\r\nend\r\n\r\nfunction genTokens(_obj, _color, alt_click)\r\n    --print(getObjectFromGUID(objectLib.baseToken).getPosition())\r\n    --return true\r\n    \r\n    local libeary=getObjectFromGUID(objectLib.libeary)\r\n    local generalTokens=libeary.call(\"getGenearyLibeary\")\r\n    local wait=waitBase\r\n    local slot=1\r\n    --for key,token in pairs(generalTokens) do\r\n\r\n\r\n        --Wait.frames(function() createToken(token,slot) end,wait)\r\n        --wait=wait+waitBase\r\n        --Wait.frames(function() createBag(token,slot) slot=slot+1 end,wait)\r\n        --wait=wait+waitBase\r\n        --Wait.frames(function() joinBag(token) end,wait)\r\n        --wait=wait+waitBase\r\n        --return false\r\n\r\n    --end\r\n    local specialTokesn=libeary.call(\"getSpecialLibeary\")\r\n    for key,token in pairs(specialTokesn) do\r\n\r\n       \r\n        Wait.frames(function() createToken(token,slot) end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() createBag(token,slot) slot=slot+1 end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() joinBag(token) end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() moveSpecialTokensToBag(token) end,wait+180)\r\n        wait=wait+waitBase\r\n        --return false\r\n\r\n    end\r\nend\r\n\r\nfunction createToken(token,slot)\r\n    local pos=getTokenSlotPosition(slot)\r\n    local newToken=getObjectFromGUID(objectLib.baseToken).clone({position=pos})\r\n    Wait.frames(function() newToken.call(\"setConfig\",token) end,1)\r\n    tokenLib[token.name]=newToken.getGUID()\r\nend\r\n\r\nfunction createBag(token,slot)\r\n    local pos=getTokenSlotPosition(slot)\r\n    local newBag=getObjectFromGUID(objectLib.baseBag).clone({position=pos})\r\n    newBag.setName(token.name)\r\n    --Wait.frames(function() newBag.call(\"setConfig\",token) end,1)\r\n    bagLib[token.name]=newBag.getGUID()\r\nend\r\n\r\nfunction getTokenSlotPosition(slot)\r\n    local row = 0\r\n    local targetPos = slot\r\n    while targetPos >= 7.5 do\r\n        row = row + 1\r\n        targetPos = targetPos - 7\r\n    end\r\n    \r\n    return Vector( firstTokenPosition.x+ row * 2,firstTokenPosition.y  ,firstTokenPosition.z - ((targetPos) * ( 2.5)))\r\nend\r\n\r\n\r\nfunction getBagSlotPosition(slot)\r\n    local row = 0\r\n    local targetPos = slot\r\n    while targetPos >= 7.5 do\r\n        row = row + 1\r\n        targetPos = targetPos - 7\r\n    end\r\n    \r\n    return Vector( firstBagPosition.x+ row * 2,firstBagPosition.y  ,firstBagPosition.z - ((targetPos) * ( 2)))\r\nend\r\n\r\nfunction moveTokenToBag(token,bag)\r\n    token.setPosition(bag.getPosition())\r\nend\r\n\r\nfunction joinBag(token)\r\n    local bag=getObjectFromGUID(bagLib[token.name])\r\n    local newToken=getObjectFromGUID(tokenLib[token.name])\r\n    bag.setPosition(newToken.getPosition())\r\n    bag.destroyAttachments()\r\n    bag.addAttachment(newToken)\r\n    newToken.clone({position=bag.getPosition()})\r\n    --bag.setPosition(getObjectFromGUID(objectLib.specialTokenBag).getPosition():add(Vector(0,10,0)))\r\nend\r\n\r\nfunction moveSpecialTokensToBag(token)\r\n    local bag=getObjectFromGUID(bagLib[token.name])\r\n    getObjectFromGUID(objectLib.specialTokenBag).putObject(bag)\r\nend",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3ea749",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "posX": -0.966236949,
        "posY": 1.00753069,
        "posZ": 10.9325275,
        "rotX": 8.2413635E-06,
        "rotY": 0.149961829,
        "rotZ": -2.47697926E-07,
        "scaleX": 7.897566,
        "scaleY": 7.21041,
        "scaleZ": 7.72229671
      },
      "Nickname": "Special Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.9921611,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 0,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/938308817305239501/02DEE4008F9EDDB7690EF61C2A12676BCB7CB71A/",
        "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/938308817305239628/22B84A6BF1CECB13E70D1C931F12B6EDC6E8F875/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 0.8745098,
            "g": 0.8117647,
            "b": 0.745098054
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "Bag": {
        "Order": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "dbaf07",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 3.66310215,
        "posY": 1.11,
        "posZ": 16.2034512,
        "rotX": 1.39296574E-08,
        "rotY": 0.000534437946,
        "rotZ": -5.029257E-07,
        "scaleX": 2.20942688,
        "scaleY": 0.3000002,
        "scaleZ": 2.225975
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "e7d308",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -6.0,
            "posY": 1.31490433,
            "posZ": -16.0,
            "rotX": -3.74155115E-06,
            "rotY": 0.00591083476,
            "rotZ": 2.27800479E-06,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Blast Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651098116521151247/BCE746234FCFAD9CEDFDD37E1E83F79FF28D9377/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "e7d308",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 7.048107E-09,
            "posY": -5.21025045E-09,
            "posZ": 0.0119034974,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": -1.78973955E-13,
            "scaleX": 0.2739717,
            "scaleY": 3.333331,
            "scaleZ": 0.271935
          },
          "Nickname": "Blast Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651098116521151247/BCE746234FCFAD9CEDFDD37E1E83F79FF28D9377/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.3,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "4ee7e2",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 6.573398,
        "posY": 1.02277231,
        "posZ": 16.078455,
        "rotX": 2.27256631E-08,
        "rotY": 0.000130921544,
        "rotZ": -6.386812E-07,
        "scaleX": 2.14454985,
        "scaleY": 0.125544712,
        "scaleZ": 2.153162
      },
      "Nickname": "Shockwave Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "227794",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -4.79885054,
            "posY": 1.18097508,
            "posZ": -35.52503,
            "rotX": -3.13985834E-06,
            "rotY": 0.0245499685,
            "rotZ": 1.28551767E-06,
            "scaleX": 0.32087487,
            "scaleY": 1.0,
            "scaleZ": 0.32087487
          },
          "Nickname": "Shockwave Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1664609930696292236/D98BE70BD79F4AB3527F8E6E4D68A240FC3BEDB5/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "--ThatRobHuman MiniHUD\nTRH_Class = 'mini'\nTRH_Version = '5.0'\nTRH_Save = 'eyJBUkNTIjp7IkJSQUNLRVRTIjpbXSwiQ09MT1IiOiIjMDA5RTlFIiwiTUFYIjo4LCJNRVNIIjoiIiwiTU9ERSI6MSwiU0NBTEUiOjEsIlNIQVBFIjoxLCJaRVJPIjowLjU5OTk5OTk5OTk5OTk5OTk3Nzc5NTUzOTUwNzQ5Njg2OTE5MTUyNzM2NjYzODE4MzU5Mzc1fSwiQkFSUyI6W1siSFAiLCIjMDA5RTlFIiw2LDYsdHJ1ZSx0cnVlXV0sIkJBU0VfTEVOR1RIIjoxLCJCQVNFX1dJRFRIIjoxLCJGTEFHIjp7IkNPTE9SIjoiI2ZmZmZmZiIsIkhFSUdIVCI6MC41LCJJTUFHRSI6Imh0dHBzOlwvXC9pbWFnZXMuc3F1YXJlc3BhY2UtY2RuLmNvbVwvY29udGVudFwvdjFcLzU0ZmU0MTJjZTRiMGM0NDlmNzM2OTg1N1wvMTU2MjEwMzYwOTY5NC1YSzVJNFlXV0FZR1k1Mk1CVldXUlwva2UxN1p3ZEdCVG9kZEk4cERtNDhrSXdZV2o2RkJSMG5ORmlBazdOOTN4aFp3LXpQUGdkbjRqVXdWY0pFMVp2V0V0VDV1QlNSV3Q0dlFaQWdUSnVjb1RxcVhqUzNDZk5EU3V1ZjMxZTB0VkhGTkhaWnJNSDJ3ZDdYeHZkYmF4REJOemxLN0JGWkwzVm95b2s3SmRFYWtDYjhCb2RhclRWcnpJV0NwNzJpb1d3XC9EZWFkTWFuc0hhbmQucG5nP2Zvcm1hdD0zMDB3IiwiV0lEVEgiOjAuNX0sIkdFT01FVFJZIjp7IkNPTE9SIjoiaW5oZXJpdCIsIk1BVEVSSUFMIjowLCJNRVNIIjoiIiwiTk9STUFMIjoiIiwiVEVYVFVSRSI6IiJ9LCJMT0NLX0ZMQUciOmZhbHNlLCJMT0NLX0dFT01FVFJZIjpmYWxzZSwiTUVUQSI6eyJBVVRPVVBEQVRFIjpmYWxzZSwiVVBEQVRFQ0hFQ0siOnRydWV9LCJNT0RVTEVfQVJDIjp0cnVlLCJNT0RVTEVfQkFSUyI6ZmFsc2UsIk1PRFVMRV9GTEFHIjpmYWxzZSwiTU9EVUxFX0dFT01FVFJZIjpmYWxzZSwiTU9EVUxFX01BUktFUlMiOmZhbHNlLCJNT0RVTEVfTU9WRU1FTlQiOmZhbHNlLCJNT0RVTEVfU0hJRUxEUyI6ZmFsc2UsIk1PVkVNRU5UIjp7IkNPTE9SIjoiaW5oZXJpdCIsIkRFRklOSVRJT05TIjpbWyJTdGFuZHN0aWxsIiwiaHR0cHM6XC9cL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb21cL1JvYk1heWVyXC9UVFNMaWJyYXJ5XC9tYXN0ZXJcL3VpXC9tb3ZlXC9zdGFuZHN0aWxsLnBuZyIsMCwwLDAsMiwwLCIjMDA4OGZmIl1dLCJMQU5EU0hPVyI6dHJ1ZSwiTEFORFRFU1QiOnRydWUsIk1PREUiOjEsIk9SSUdJTiI6IkVER0UiLCJTRUdNRU5UUyI6W1swLFtdXV0sIlNQRUVERElTVEFOQ0UiOjEuNSwiU1BFRURNQVgiOjgsIlNQRUVETUlOIjowLCJUVVJOTUFYIjozLCJUVVJOTk9UQ0giOjIyLjUsIlVJSEVJR0hUIjowLjI1LCJVSU9GRlNFVCI6MC4yNX0sIk9WRVJIRUFEX0hFSUdIVCI6MC4yOTk5OTk5OTk5OTk5OTk5ODg4OTc3Njk3NTM3NDg0MzQ1OTU3NjM2ODMzMTkwOTE3OTY4NzUsIk9WRVJIRUFEX09GRlNFVCI6MCwiT1ZFUkhFQURfT1JJRU5UIjoiSE9SSVpPTlRBTCIsIk9WRVJIRUFEX1dJRFRIIjoxLCJQRVJNRURJVCI6IjUyNDI4NyIsIlBFUk1WSUVXIjoiNTI0Mjg3IiwiUkVGUkVTSCI6MSwiU0hJRUxEUyI6eyJBVVRPTU9ERSI6dHJ1ZSwiQ09MT1IiOiIjMWY4N2ZmIiwiQ1JJVENPTE9SIjoiI2RhMTkxOCIsIkNSSVRJQ0FMIjpbMSwxLDEsMSwxLDFdLCJDVVJSRU5UIjpbNiw2LDYsNiw2LDZdLCJMSU1JVE1PREUiOjEsIk1BWElNVU0iOls2LDYsNiw2LDYsNl0sIk1JTklNVU0iOlswLDAsMCwwLDAsMF0sIlNIQVBFIjoxLCJVSUhFSUdIVCI6MC4yNX0sIlVJX1NDQUxFIjo0fQ=='\nlocal state = {};local PERMEDIT = 'Grey|Host|Admin|Black|White|Brown|Red|Orange|Yellow|Green|Teal|Blue|Purple|Pink|Clubs|Diamonds|Hearts|Spades|Jokers';local PERMVIEW = 'Grey|Host|Admin|Black|White|Brown|Red|Orange|Yellow|Green|Teal|Blue|Purple|Pink|Clubs|Diamonds|Hearts|Spades|Jokers';local ui_mode = '0';local controller_obj;local assetBuffer = {};local arc_len = 1;local arc_obj;local rotateVector = function(a,b)\n            \tlocal c=math.rad(b)local d=math.cos(c)*a[1]+math.sin(c)*a[2]local e=math.sin(c)*a[1]*-1+math.cos(c)*a[2]return{d,e,a[3]}\n            end\nlocal indexOf = function(e, t)\n            \tfor k,v in pairs(t) do\n            \t\tif (e == v) then return k end\n            \tend\n            \treturn nil\n            end\nfunction onDestroy()\nif (arc_obj ~= nil) then arc_obj.destruct() end\nend\nfunction onSave()local data={}\nreturn JSON.encode(data)\nend\nfunction onLoad(save)\n            \tsave = JSON.decode(save) or {}\n            rebuildAssets()\n            \tWait.frames(rebuildUI, 1)\n            end\nfunction ui_setmode(player,mode)\n            \tif mode==ui_mode then\n            \t\tmode='0'\n            \tend\n            \tui_mode=mode\n            \tif mode=='0' then\n            \t\trebuildAssets()\n            \t\tWait.frames(rebuildUI,1)\n else\n            \t\trebuildUI()\n            \tend\n            end\nfunction initiateLink(data)\n            \tif (setController(data)) then\n            \t\treturn controller_obj.call('setMini', {guid=self.guid})\n            \tend\n            \treturn false\n            end\nfunction initiateUnlink()\n            \tlocal theObj = unsetController()\n            \tif (theObj ~= nil) then\n            \t\ttheObj.call('untrackMini', {guid = self.guid})\n            \tend\n            end\nfunction setController(data)\n            \tlocal obj = data.object or getObjectFromGUID(data.guid or error('object or guid is required', 2)) or error('invalid object',2)\n            \tif ((obj.getVar('TRH_Class') or '') ~= 'mini.controller') then\n            \t\terror('object is not a mini controller',2)\n            \telse\n            \t\tcontroller_obj = obj\n            \t\treturn true\n            \tend\n            \treturn false\n            end\nfunction unsetController()\n            \tif (controller_obj ~= nil) then\n            \t\tlocal theObj = controller_obj\n            \t\tcontroller_obj = nil\n            \t\treturn theObj\n            \tend\n            \treturn nil\n            end\nfunction moveCommit() end;\nfunction moveCancel() end;\nfunction moveStart() end;\nfunction spawnGeometry() end;\nfunction editGeometry(a) end;\nfunction clearGeometry() end;\nfunction showArc()\n            \t\tself.UI.hide('btn_show_arc')\n            \t\tself.UI.show('btn_hide_arc')\n            \t\tself.UI.show('disp_arc_len')\n            \t\tself.UI.show('btn_arc_sub')\n            \t\tself.UI.show('btn_arc_add')\n            \t\tlocal a=1*(arc_len+(0.6))\n\t\t\t\t\tlocal me = self\nlocal tmp = string.sub('#009E9E', 2, 7) or 'ffffff'\n            \t\tif (string.len(tmp) ~= 6) then tmp = 'ffffff' end\n            \t\tlocal clr = {\n            \t\t\t(tonumber(string.sub(tmp, 1, 2),16) or 255) / 255,\n            \t\t\t(tonumber(string.sub(tmp, 3, 4),16) or 255) / 255,\n            \t\t\t(tonumber(string.sub(tmp, 5, 6),16) or 255) / 255,\n            \t\t}\n arc_obj=spawnObject({\n            \t\t\ttype='custom_model',\n            \t\t\tposition=self.getPosition(),\n            \t\t\trotation=self.getRotation(),\n            \t\t\tscale={a,1,a},\n            \t\t\tmass=0,\n\t\t\t\t\t\tuse_gravity=false,\n            \t\t\tsound=false,\n            \t\t\tsnap_to_grid=false,\n            \t\t\tcallback_function=function(b)\n\t\t\t\t\t\t\tb.jointTo(me, {\n\t\t\t\t\t\t\t\ttype='Fixed',\n\t\t\t\t\t\t\t\tcollision=false\n\t\t\t\t\t\t\t})\n            \t\t\t\tb.setColorTint(clr)\n            \t\t\t\tb.setVar('parent',self)\n            \t\t\t\tb.setLuaScript([[\n\t\t\t\t\t\t\t\tfunction onLoad() \n\t\t\t\t\t\t\t\t\t(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\n\t\t\t\t\t\t\t\t\tWait.condition(\n\t\t\t\t\t\t\t\t\t\tfunction() \n\t\t\t\t\t\t\t\t\t\t\t(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \n\t\t\t\t\t\t\t\t\t\tend, \n\t\t\t\t\t\t\t\t\t\tfunction() \n\t\t\t\t\t\t\t\t\t\t\treturn not(self.loading_custom) \n\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t\tend \n\t\t\t\t\t\t\t\tfunction onUpdate() \n\t\t\t\t\t\t\t\t\tif (parent ~= nil) then \n\t\t\t\t\t\t\t\t\t\tif (not parent.resting) then \n\t\t\t\t\t\t\t\t\t\t\tself.setPosition(parent.getPosition())\n\t\t\t\t\t\t\t\t\t\t\tself.setRotation(parent.getRotation()) \n\t\t\t\t\t\t\t\t\t\tend \n\t\t\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t\t\t\tself.destruct() \n\t\t\t\t\t\t\t\t\tend \n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t]])\n            \t\t\t\tb.getComponent('MeshRenderer').set('receiveShadows',false)\n            \t\t\t\tb.mass=0\n            \t\t\t\tb.bounciness=0\n            \t\t\t\tb.drag=0\n            \t\t\t\tb.use_snap_points=false\n            \t\t\t\tb.use_grid=false\n            \t\t\t\tb.use_gravity=false\n            \t\t\t\tb.auto_raise=false\n            \t\t\t\tb.auto_raise=false\n            \t\t\t\tb.sticky=false\n            \t\t\t\tb.interactable=false\n            \t\t\tend\n            \t\t})\n            \t\tarc_obj.setCustomObject({\n            \t\t\tmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\n            \t\t\tcollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\n            \t\t\tmaterial=3,\n            \t\t\tspecularIntensity=0,\n            \t\t\tcast_shadows=false\n            \t\t})\n            \tend\nfunction setArcValue(a)\n            \t\t\tif arc_obj~=nil then\n            \t\t\t\tarc_len=tonumber(a.value) or arc_len;\n            \t\t\t\tarc_obj.setScale({1*(arc_len+(0.6)),1,1*(arc_len+(0.6))})\n            \t\t\t\tself.UI.setAttribute('disp_arc_len','text',arc_len)\n            \t\t\tend\n            \t\tend\nfunction arcSub()\n            \t\t\tif arc_obj~=nil then\n            \t\t\t\tarc_len=math.max(1,arc_len-1)\n            \t\t\t\tarc_obj.setScale({1*(arc_len+(0.6)),1,1*(arc_len+(0.6))})\n            \t\t\t\tself.UI.setAttribute('disp_arc_len','text',arc_len)\n            \t\t\tend\n            \t\tend\nfunction arcAdd()\n            \t\t\tif arc_obj~=nil then\n            \t\t\t\tarc_len=math.min(8,arc_len+1)\n            \t\t\t\tarc_obj.setScale({1*(arc_len+(0.6)),1,1*(arc_len+(0.6))})\n            \t\t\t\tself.UI.setAttribute('disp_arc_len','text',arc_len)\n            \t\t\tend\n            \t\tend\nfunction ui_arcadd(player) arcAdd() end;\nfunction ui_arcsub(player) arcSub() end;\nfunction hideArc()\n            \t\tif arc_obj ~=nil then\n            \t\t\tarc_obj.destruct()\n            \t\tend\n            \t\tself.UI.show('btn_show_arc')\n            \t\tself.UI.hide('btn_hide_arc')\n            \t\tself.UI.hide('disp_arc_len')\n            \t\tself.UI.hide('btn_arc_sub')\n            \t\tself.UI.hide('btn_arc_add')\n            \tend\nfunction ui_showarc(player) showArc() end;\nfunction ui_hidearc(player) hideArc() end;\nfunction toggleFlag() end;\nfunction editFlag() end;\nfunction clearFlag() end;\nfunction addMarker(a) end;\nfunction getMarkers()return {} end;\nfunction popMarker(a)end;\nfunction removeMarker(a)end;\nfunction clearMarkers(a)end;\nfunction addBar(data) end\nfunction getBars(data) return {} end\nfunction editBar(data) end\nfunction adjustBar(data) end\nfunction removeBar(data) end\nfunction clearBars(data) end\nfunction setShield(data) end\nfunction adjustShield(data) end\nfunction getShieldShape() return 0 end\nfunction toggleShields() end\nfunction rebuildAssets()\n            \tlocal root = 'https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/';\n                local assets = {\n                    {name='ui_gear', url=root..'gear.png'},\n                    {name='ui_close', url=root..'close.png'},\n                    {name='ui_plus', url=root..'plus.png'},\n                    {name='ui_minus', url=root..'minus.png'},\n                    {name='ui_hide', url=root..'hide.png'},\n                    {name='ui_bars', url=root..'bars.png'},\n                    {name='ui_stack', url=root..'stack.png'},\n                    {name='ui_effects', url=root..'effects.png'},\n                    {name='ui_reload', url=root..'reload.png'},\n                    {name='ui_arcs', url=root..'arcs.png'},\n                    {name='ui_flag', url=root..'flag.png'},\n                    {name='ui_arrow_l', url=root..'arrow_l.png'},\n                    {name='ui_arrow_r', url=root..'arrow_r.png'},\n                    {name='ui_arrow_u', url=root..'arrow_u.png'},\n                    {name='ui_arrow_d', url=root..'arrow_d.png'},\n                    {name='ui_check', url=root..'check.png'},\n                    {name='ui_block', url=root..'block.png'},\n                    {name='ui_splitpath', url=root..'splitpath.png'},\n                    {name='ui_cube', url=root..'cube.png'},\n                    {name='movenode', url=root..'movenode.png'},\n                    {name='moveland', url=root..'moveland.png'},\n                    {name='ui_shield', url=root..'shield.png'},\n                }\n            \tassetBuffer = {}\n            \tlocal bufLen = 0\n            \tself.UI.setCustomAssets(assets)\n            end\nfunction rebuildUI()\nlocal w = 100; local orient = 'HORIZONTAL';\nlocal mainButtons = {};\nlocal mainButtonX = 20;\nlocal arcActive = arc_obj ~= nil;\ntable.insert(mainButtons, {tag='button', attributes={id='btn_show_arc', active=(not arcActive), height='30', width='30', rectAlignment='MiddleLeft', image='ui_arcs', offsetXY=mainButtonX..' 0', colors='#ccccccff|#ffffffff|#404040ff|#808080ff', onClick='ui_showarc', visibility=PERMEDIT}});\ntable.insert(mainButtons, {tag='button', attributes={id='btn_hide_arc', active=(arcActive), height='30', width='30', rectAlignment='LowerLeft', image='ui_arcs', offsetXY=mainButtonX..' 0', colors='#ccccccff|#ffffffff|#404040ff|#808080ff', onClick='ui_hidearc', visibility=PERMEDIT}});\ntable.insert(mainButtons, {tag='button', attributes={id='btn_arc_sub', active=(arcActive and arc_len > 0), height='30', width='30', rectAlignment='LowerLeft', image='ui_minus', offsetXY='-70 0', colors='#ccccccff|#ffffffff|#404040ff|#808080ff', onClick='ui_arcsub', visibility=PERMEDIT}});\ntable.insert(mainButtons, {tag='text', attributes={id='disp_arc_len', active=(arcActive), height='30', width='30', rectAlignment='LowerLeft', text=arc_len, offsetXY='-40 0', color='#ffffff', fontSize='20', outline='#000000', visibility=PERMEDIT}});\ntable.insert(mainButtons, {tag='button', attributes={id='btn_arc_add', active=(arcActive and arc_len < 8), height='30', width='30', rectAlignment='LowerLeft', image='ui_plus', offsetXY='-10 0', colors='#ccccccff|#ffffffff|#404040ff|#808080ff', onClick='ui_arcadd', visibility=PERMEDIT}});\nmainButtonX = mainButtonX + 30;\nlocal ui_overhead = { tag='Panel', attributes={childForceExpandHeight='false',visibility=PERMVIEW,position='0 0 -30',rotation=orient=='HORIZONTAL'and'0 0 0'or'-90 0 0',active=ui_mode=='0',scale='4 4 4',height=0,color='red',width=w},\n        \t\t\tchildren={\n        \t\t\t\t{tag='VerticalLayout',attributes={rectAlignment='LowerCenter',childAlignment='LowerCenter',childForceExpandHeight=false,childForceExpandWidth=true,height='5000',spacing='5'},\n        \t\t\t\t\tchildren={{tag='Panel',attributes={minHeight='30',flexibleHeight='0'}, children=mainButtons }}\n        \t\t\t\t}\n        \t\t\t}\n        \t\t}\nlocal ui_settings = {};\nlocal ui_movement = {};\nlocal ui_shields = {}\nself.UI.setXmlTable({ui_shields, ui_movement, ui_overhead, ui_settings});\nend\n",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "ui_gear",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/gear.png"
            },
            {
              "Type": 0,
              "Name": "ui_close",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/close.png"
            },
            {
              "Type": 0,
              "Name": "ui_plus",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/plus.png"
            },
            {
              "Type": 0,
              "Name": "ui_minus",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/minus.png"
            },
            {
              "Type": 0,
              "Name": "ui_hide",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/hide.png"
            },
            {
              "Type": 0,
              "Name": "ui_bars",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/bars.png"
            },
            {
              "Type": 0,
              "Name": "ui_stack",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/stack.png"
            },
            {
              "Type": 0,
              "Name": "ui_effects",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/effects.png"
            },
            {
              "Type": 0,
              "Name": "ui_reload",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/reload.png"
            },
            {
              "Type": 0,
              "Name": "ui_arcs",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/arcs.png"
            },
            {
              "Type": 0,
              "Name": "ui_flag",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/flag.png"
            },
            {
              "Type": 0,
              "Name": "ui_arrow_l",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/arrow_l.png"
            },
            {
              "Type": 0,
              "Name": "ui_arrow_r",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/arrow_r.png"
            },
            {
              "Type": 0,
              "Name": "ui_arrow_u",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/arrow_u.png"
            },
            {
              "Type": 0,
              "Name": "ui_arrow_d",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/arrow_d.png"
            },
            {
              "Type": 0,
              "Name": "ui_check",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/check.png"
            },
            {
              "Type": 0,
              "Name": "ui_block",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/block.png"
            },
            {
              "Type": 0,
              "Name": "ui_splitpath",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/splitpath.png"
            },
            {
              "Type": 0,
              "Name": "ui_cube",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/cube.png"
            },
            {
              "Type": 0,
              "Name": "movenode",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            },
            {
              "Type": 0,
              "Name": "moveland",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/moveland.png"
            },
            {
              "Type": 0,
              "Name": "ui_shield",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/shield.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c936cf",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 3.0533326E-13,
            "rotY": 4.496069E-06,
            "rotZ": 4.10707879E-14,
            "scaleX": 0.272048,
            "scaleY": 9.999986,
            "scaleZ": 0.270959884
          },
          "Nickname": "Shockwave Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1664609930696292236/D98BE70BD79F4AB3527F8E6E4D68A240FC3BEDB5/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "0011f1",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 10.2674208,
        "posY": 0.942999959,
        "posZ": 16.3298,
        "rotX": -2.26915276E-07,
        "rotY": -0.001546404,
        "rotZ": 9.99980543E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Hungry Land Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "968fe5",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 1.91348457,
            "posY": 3.31021714,
            "posZ": -22.5559654,
            "rotX": 0.8842887,
            "rotY": 194.994156,
            "rotZ": 359.186218,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Hungry Land Marker",
          "Description": "Size: 50 mm\nSevere: P37\n> non-place movement reduced by half\nHazardous: P37\n> 1 DMG when moving through or after any Action",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397771905/E4F1AB7127F3733775211AD7FFE776B78458DDA1/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "742d05",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 13.5281582,
        "posY": 0.943,
        "posZ": 16.2126942,
        "rotX": 6.562585E-07,
        "rotY": 179.999863,
        "rotZ": 4.903836E-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Coffin Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "06f6ef",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 5.48167658,
            "posY": 3.30925775,
            "posZ": -21.2984066,
            "rotX": 359.365143,
            "rotY": 59.95439,
            "rotZ": 1.04887211,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Coffin Marker",
          "Description": "Size: 50 mm\nHeight: P37 2\"\n> height + blocking = Shadow\nBlocking: P37\n> Blocks LOS\nDestructible: P37\n> Models within 1\" take Action to remove\nImpassable: P37\n> Cannot move through",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397771383/ABBB04CB36C1134D54922FD47322E807BF29FDED/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "729088",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 17.3553619,
        "posY": 0.94299984,
        "posZ": 16.5211143,
        "rotX": 5.203248E-08,
        "rotY": 180.000015,
        "rotZ": 1.03030132E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Lair Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "c5d778",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 5.473202,
            "posY": 3.30626965,
            "posZ": -21.5610638,
            "rotX": 358.832947,
            "rotY": 165.003952,
            "rotZ": 359.750275,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Lair Marker",
          "Description": "Size: 50 mm\nConcealing: P37 \n > Concealment: non-melee Duel -1F (flip)\nSevere:  P37 \n > non-place movement reduced by half\nDestructible: P37\n> Models within 1\" take Action to remove",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772108/40ECBDFBE769CD169B655A371AB7226814E865D6/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "9a6f40",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 20.59967,
        "posY": 0.9430001,
        "posZ": 16.6296024,
        "rotX": 2.61569016E-06,
        "rotY": 0.00117843284,
        "rotZ": -6.123591E-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Pit Trap Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "7bdcc0",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 5.795621,
            "posY": 3.30838943,
            "posZ": -22.0098,
            "rotX": 1.07888508,
            "rotY": 344.995819,
            "rotZ": 359.4365,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Pit Trap Marker",
          "Description": "Size: 50 mm\nSevere: P37\n> non-place movement reduced by half\nHazardous: P37 (Damage 1 & Injured +1)\n> 1 DMG and Injured +1 when moving through or after any Action\nDestructible: P37\n> Models within 1\" take Action to remove",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772408/351CCD58581E547F16D03BDFD55E8E1D4AB6C3F8/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "1bf519",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 24.44912,
        "posY": 0.942999959,
        "posZ": 16.1303082,
        "rotX": -6.39752E-08,
        "rotY": 179.9943,
        "rotZ": 1.22319008E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Blow Apart Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "4fb315",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 6.271357,
            "posY": 3.35210514,
            "posZ": -22.5780334,
            "rotX": 359.722443,
            "rotY": 194.903244,
            "rotZ": 178.122086,
            "scaleX": 0.32087487,
            "scaleY": 1.0,
            "scaleZ": 0.32087487
          },
          "Nickname": "Blow Apart Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.876306653,
            "g": 0.788100243,
            "b": 0.251899749
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651098116521358007/1AEFC83ADE4B9E1F24E18580BB2E6C44D0299838/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "f22057",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 10.7851057,
        "posY": 0.943,
        "posZ": 12.9801874,
        "rotX": -1.50892149E-07,
        "rotY": 180.000153,
        "rotZ": 2.87792083E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Mine Field Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "4a97e4",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 6.35704947,
            "posY": 3.309706,
            "posZ": -20.53501,
            "rotX": 0.4167298,
            "rotY": 345.012451,
            "rotZ": 358.864075,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Mine Field Marker",
          "Description": "Size: 50 mm\n?",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772205/D407FBA0135E5F977D00CDB74C72957EDE94BB7A/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "ce53cc",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 14.3469343,
        "posY": 0.942999959,
        "posZ": 13.385767,
        "rotX": 1.680781E-08,
        "rotY": 179.994812,
        "rotZ": 1.29339782E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Underbrush Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "a57533",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 5.60666466,
            "posY": 3.30146646,
            "posZ": -21.2484055,
            "rotX": 0.924699962,
            "rotY": 90.03119,
            "rotZ": 0.492894053,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Underbrush Marker",
          "Description": "Size: 50 mm\nConcealing: P37 \n > Concealment: non-melee Duel -1F (flip)\nSevere:  P37 \n > non-place movement reduced by half",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772921/82ABDE9BE956AC621AE086A64ECA228CC9CCC885/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "500db4",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 18.0004616,
        "posY": 0.9429999,
        "posZ": 13.9889946,
        "rotX": 1.6890165E-07,
        "rotY": 179.998886,
        "rotZ": -3.9395502E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Piano Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "db9ac0",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 4.139356,
            "posY": 3.28616285,
            "posZ": -24.6448154,
            "rotX": 3.0253408,
            "rotY": 15.0144739,
            "rotZ": 0.494685262,
            "scaleX": 0.4060096,
            "scaleY": 1.0,
            "scaleZ": 0.4060096
          },
          "Nickname": "Piano Marker",
          "Description": "Size: 40 mm\nHeight: P37 3\"\n> height + blocking = Shadow\nBlocking: P37\n> Blocks LOS\nDestructible: P37\n> Models within 1\" take Action to remove\nImpassable: P37\n> Cannot move through",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772304/2D13ECB24A06CC08F3CB6002E075B142D8F38707/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "a02ffc",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 21.3940887,
        "posY": 0.942999959,
        "posZ": 13.8167324,
        "rotX": -5.968677E-08,
        "rotY": 179.998978,
        "rotZ": 8.94265852E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Shadow Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "596ef3",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 7.355768,
            "posY": 3.29068184,
            "posZ": -24.6789169,
            "rotX": 359.906433,
            "rotY": 164.981644,
            "rotZ": 359.9357,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Shadow Marker",
          "Description": "Size: 30 mm\nConcealing: P37 \n > Concealment: non-melee Duel -1F (flip)\nDestructible: P37\n> Models within 1\" take Action to remove",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772728/536083B68DC7633C36DB047C1C72A34000AE3949/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "f65032",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 24.74398,
        "posY": 0.9429999,
        "posZ": 13.8530111,
        "rotX": -1.96531431E-08,
        "rotY": 179.999,
        "rotZ": 6.18762044E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Web Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "2364c7",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 7.05920744,
            "posY": 3.305495,
            "posZ": -21.6822319,
            "rotX": 359.929657,
            "rotY": 149.938,
            "rotZ": 1.306889,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Web Marker",
          "Description": "Size: 50 mm\nSevere: P37\n> non-place movement reduced by half\nDestructible: P37\n> Models within 1\" take Action to remove",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397773015/2ED48F34EAAFFBFA25D922E754AC58329EE2CF70/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "945f3b",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 11.0277939,
        "posY": 0.942999959,
        "posZ": 10.1452894,
        "rotX": 2.726362E-07,
        "rotY": 180.0,
        "rotZ": -7.434297E-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Pyre Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "ae94e0",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 6.687071,
            "posY": 3.31400466,
            "posZ": -22.76046,
            "rotX": 0.6925413,
            "rotY": 74.99681,
            "rotZ": 359.3238,
            "scaleX": 0.51,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Pyre Marker",
          "Description": "Size: 50 mm\nHazardous: P37 (Burning +1)\n> +1 Burning when moving through or after any Action\n",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 0.546468437,
            "b": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772513/254B093A6E52855ACD09CC0165272042E600335E/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "9cb697",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 14.9981384,
        "posY": 0.942999959,
        "posZ": 10.251689,
        "rotX": 4.83468447E-08,
        "rotY": 179.999359,
        "rotZ": -7.068494E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Egg Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "ce1665",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 5.212525,
            "posY": 3.30401278,
            "posZ": -24.3557014,
            "rotX": 358.575439,
            "rotY": 180.002609,
            "rotZ": 359.866882,
            "scaleX": 0.4060096,
            "scaleY": 1.0,
            "scaleZ": 0.4060096
          },
          "Nickname": "Egg Marker",
          "Description": "Size: 40 mm\nDestructible: P37\n> Models within 1\" take Action to remove",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397771693/C2C66FA36044F9450277E38A2E1C13836292C8E0/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "abe603",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 18.42988,
        "posY": 0.9429999,
        "posZ": 10.5122662,
        "rotX": -5.115895E-08,
        "rotY": 179.999969,
        "rotZ": -1.31981636E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Glass Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "c78149",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 6.664352,
            "posY": 3.30210471,
            "posZ": -23.400856,
            "rotX": 1.67498326,
            "rotY": 0.02493992,
            "rotZ": 0.314886063,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Glass Marker",
          "Description": "Size: 30 mm\n?",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397771801/5AA448A1F0DC6862152EDDC643DBCC08BE7927CF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "0a7313",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 21.8801556,
        "posY": 0.942999959,
        "posZ": 11.411335,
        "rotX": -8.784652E-08,
        "rotY": 180.000061,
        "rotZ": 3.38692168E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Ice Piller",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "53fc9e",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 6.96139145,
            "posY": 3.30264235,
            "posZ": -21.559391,
            "rotX": 358.422638,
            "rotY": 150.021133,
            "rotZ": 359.354645,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Ice Pillar Marker",
          "Description": "Size: 30 mm\nHeight: P37 4\"\n> height + blocking = Shadow\nBlocking: P37\n> Blocks LOS\nDestructible: P37\n> Models within 1\" take Action to remove\nImpassable: P37\n> Cannot move through",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772004/2EB1B0F61B0989BF5EC4A1E12108E21F29725DF2/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "bb8f43",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 24.4528942,
        "posY": 0.943,
        "posZ": 10.00583,
        "rotX": 1.53348893E-07,
        "rotY": 180.0,
        "rotZ": 4.296912E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Dust Cloud Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "56cde2",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 7.81779432,
            "posY": 3.30523586,
            "posZ": -22.57923,
            "rotX": 0.79165417,
            "rotY": 60.008213,
            "rotZ": 0.8368126,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Dust Cloud Marker",
          "Description": "Size: 50 mm\nConcealing: P37 \n > Concealment: non-melee Duel -1F (flip)\nSevere:  P37 \n > non-place movement reduced by half",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397771494/96DD4D4618EBF25A5E73633B42877572EBA776D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "05d209",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 11.72963,
        "posY": 0.942999959,
        "posZ": 7.5962944,
        "rotX": 1.44297516E-07,
        "rotY": 180.000061,
        "rotZ": 7.160075E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Dust Devil Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "b73524",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 12.2506046,
            "posY": 2.84954619,
            "posZ": -16.14249,
            "rotX": 0.51726073,
            "rotY": 210.006622,
            "rotZ": 181.062027,
            "scaleX": 0.4060096,
            "scaleY": 1.0,
            "scaleZ": 0.4060096
          },
          "Nickname": "Dust Devil Marker",
          "Description": "Size: 40 mm\nSevere: P37\n> non-place movement reduced by half\nHazardous: P37\n> 1 DMG when moving through or after any Action\nDestructible: P37\n> Models within 1\" take Action to remove",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397771588/E3339BF5D868F860848239555BAA1D8D57C00C70/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "7b28b9",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 15.313776,
        "posY": 0.942999959,
        "posZ": 7.91221237,
        "rotX": -1.08014376E-07,
        "rotY": 180.000824,
        "rotZ": -7.398597E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Swampscreen Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "92655b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 10.3394833,
            "posY": 3.30746555,
            "posZ": -21.5753689,
            "rotX": 358.923,
            "rotY": 150.029236,
            "rotZ": 359.453339,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Swampscreen Marker",
          "Description": "Size: 50 mm\nConcealing: P37 \n > Concealment: non-melee Duel -1F (flip)",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772825/C0AD4317E93BEAFF3725373547BE0FACCF7A3EEF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "80fdd5",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 19.3652325,
        "posY": 0.9430001,
        "posZ": 7.86535072,
        "rotX": 2.76476815E-08,
        "rotY": 179.997513,
        "rotZ": 3.26832037E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Riptide Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "5075cc",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 10.1967707,
            "posY": 3.304691,
            "posZ": -22.9074821,
            "rotX": 358.965546,
            "rotY": 134.989075,
            "rotZ": 180.5831,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Riptide Marker",
          "Description": "Size: 50 mm\nHazardous: P37 (Damage 1 & Staggered)\n> 1 DMG and Staggered when moving through or after any Action",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772626/6E0EF2D951E44CF5D6E67452B01A411650EF2DE9/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "9549e8",
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 23.3100281,
        "posY": 0.942999959,
        "posZ": 6.53922844,
        "rotX": -2.31307169E-07,
        "rotY": 179.999664,
        "rotZ": -4.240384E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Widwall Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "ce8a27",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 7.29608059,
            "posY": 3.30666685,
            "posZ": -21.155838,
            "rotX": 1.10539031,
            "rotY": 45.01155,
            "rotZ": 0.4479466,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Wind Wall Marker",
          "Description": "Size: 50 mm\nConcealing: P37 \n > Concealment: non-melee Duel -1F (flip)",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1644342164397772825/C0AD4317E93BEAFF3725373547BE0FACCF7A3EEF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\naura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\nif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\nend\r\nfunction onLoad(save)\r\nrebuildAssets()\r\nself.UI.setXml(ui())\r\nshowAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\nlocal bound = self.getBoundsNormalized();\r\nstate.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\nlocal newScale = 0;\r\nif state.conditions.Aura > 0 then\r\nnewScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\nend\r\nChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\nSyncCondition(\"Aura\")\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',params.obj);\r\nend\r\nend\r\nfunction AuraResetFollow()\r\nif ChildObjs.aura_obj ~= nil then\r\nChildObjs.aura_obj.setVar('parent',self);\r\nend\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\nself.UI.setXml(ui())\r\n--propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nlocal color = 'All';\r\nself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\ncolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\nimage= imageName,\r\n});\r\nself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\nactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\ntext= state.conditions[name] \r\n});\r\nif name == \"Activated\" then\r\nRefreshBaseColor()\r\nend\r\nend\r\nfunction ui() \r\nreturn [[\r\n<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\nPlayerHUDPivot('All')..\r\n[[</Panel>\r\n]];\r\nend\r\nfunction rebuildAssets()\r\nlocal assets = {};\r\nfor conditionName, value in pairs(Conditions) do\r\nassets[#assets+1]={name=conditionName , url = value.url};\r\nend\r\nself.UI.setCustomAssets(assets)\r\nend\r\nfunction PlayerHUDPivot(color)\r\nreturn [[\r\n<Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n]]..HUDConditions(color) ..[[\r\n</Panel>\r\n]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\nreturn [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\nHUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n[[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\nfunction HUDSingleCondition(color,name,x,y)\r\nlocal id = \"ConditionFrame_\" .. name ;\r\nreturn [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\nHUDSingleConditionBody(color,name)..\r\n[[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\nlocal secondary = Conditions[name].secondary;\r\nlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\nreturn [[\r\n<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n]]\r\nend\r\nConditions = {\r\nAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\nlocal bound = self.getBoundsNormalized();\r\nlocal a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\nlocal me = self\r\nlocal clr = self.getColorTint()\r\nChildObjs.aura_obj=spawnObject({\r\ntype='custom_model',\r\nposition=self.getPosition(),\r\nrotation=self.getRotation(),\r\nscale={a,1,a},\r\nmass=0,\r\nuse_gravity=false,\r\nsound=false,\r\nsnap_to_grid=false,\r\ncallback_function=function(b)\r\nb.setColorTint(clr)\r\nb.setVar('parent',self)\r\nb.setLuaScript([[\r\nlocal lastParent = nil\r\nfunction onLoad() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\nWait.condition(\r\nfunction() \r\n(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\nend, \r\nfunction() \r\nreturn not(self.loading_custom) \r\nend\r\n) \r\nend \r\nfunction onUpdate() \r\nif (parent ~= nil) then \r\nif (not parent.resting or lastParent ~= parent) then \r\nlastParent = parent\r\nself.setPosition(parent.getPosition())\r\nself.setRotation(parent.getRotation()) \r\nend \r\nelse \r\nself.destruct() \r\nend \r\nend\r\n]])\r\nb.getComponent('MeshRenderer').set('receiveShadows',false)\r\nb.mass=0\r\nb.bounciness=0\r\nb.drag=0\r\nb.use_snap_points=false\r\nb.use_grid=false\r\nb.use_gravity=false\r\nb.auto_raise=false\r\nb.auto_raise=false\r\nb.sticky=false\r\nb.interactable=false\r\nend\r\n})\r\nChildObjs.aura_obj.setCustomObject({\r\nmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\ncollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\nmaterial=3,\r\nspecularIntensity=0,\r\ncast_shadows=false\r\n})\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "030e0e",
      "Name": "Custom_Token",
      "Transform": {
        "posX": -26.133976,
        "posY": 0.9649999,
        "posZ": -14.3878651,
        "rotX": 6.90098E-07,
        "rotY": 179.999329,
        "rotZ": -4.56699256E-09,
        "scaleX": 0.3045071,
        "scaleY": 0.1,
        "scaleZ": 0.3045071
      },
      "Nickname": "Base Marker",
      "Description": "Size: 30 mm",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": true,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381427830720/188A8598AAE03EA4CBBDBB8C2706343AED181B6A/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=0.2\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    log(\"y\"..y)\r\n    self.setScale({x,7,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
      "LuaScriptState": "[]",
      "XmlUI": "",
      "CustomUIAssets": [
        {
          "Type": 0,
          "Name": "Aura",
          "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
        }
      ]
    },
    {
      "GUID": "d41eb9",
      "Name": "Checker_white",
      "Transform": {
        "posX": 5.35839844,
        "posY": 1.21048343,
        "posZ": 12.8566017,
        "rotX": -2.272984E-07,
        "rotY": 4.97618066E-06,
        "rotZ": 180.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "The Libeary",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "local generalLibeary={}\r\n\r\n\r\n\r\n\r\nlocal specialLibeary={\r\n    Echo={\r\n        name=\"Echo\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='When a friendly Obliteration model is killed within 1\\\" of this marker, it may drain a soulstone. If it does, it does not infuse a soulstone for being killed and, after the model is removed, this crew may summon a model of the same name within 1\\\" of this marker with a Flicker token and 2 health. Then remove this marker.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Echo.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Decoy={\r\n        name=\"Decoy\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='During the end phase, choose a Decoy marker. Make a Scheme marker in base contact with the chosen marker, then remove the chosen marker.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Decoy.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Gloom={\r\n        name=\"Gloom\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='Allies that start a move within 2\\\" of this marker may ignore models and terrain while moving. Allies may treat this marker as blocking terrain for actions and abilities.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Gloom.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Inferno={\r\n        name=\"Inferno\";\r\n        size=\"50\";\r\n        ht=\"0\";\r\n        rules='Hazardous(Burning)';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Inferno.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Underbrush={\r\n        name=\"Underbrush\";\r\n        size=\"50\";\r\n        ht=\"0\";\r\n        rules='concealing, dense, severe.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Underbrush.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    ShadowLair={\r\n        name=\"Shadow Lair\";\r\n        size=\"50\";\r\n        ht=\"0\";\r\n        rules='Enemy models that end their activation in base contact with this marker gain a Fright token.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Shadow%20Lair.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Piano={\r\n        name=\"Piano\";\r\n        size=\"40\";\r\n        ht=\"3\";\r\n        rules='Blocking, impassable. During the end phase, choose a Piano marker. An enemy model within 1\\\" of the chosen marker gains an Entranced token. Then remove the chosen marker.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Piano.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Scrap={\r\n        name=\"Scrap\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='Hazardous (Perforated).';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Scrap.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Shadow={\r\n        name=\"Shadow\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='Concealing.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Shadow.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Rift={\r\n        name=\"Rift\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='A friendly Oni within 1\\\" of this marker may remove this marker after succeeding on an attack to make that attack deal +1 damage.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Rift.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Web={\r\n        name=\"Web\";\r\n        size=\"50\";\r\n        ht=\"0\";\r\n        rules='Severe. Models in base contact with a Web marker may not be placed by models friendly to them.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Web.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Pyrotechnic={\r\n        name=\"Pyrotechnic\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='At the end of the turn apply the following to all friendly Pyrotechnic markers depending on the suit of the top card of your discard pile: BOOM!: All models 2\\\" of one or more Pyrotchnic marker must pass a TN 14Sp duel or be dealt 2 damage. Surprise!: All models within 2\\\" gain a Glowy token. Whoa...: All models within 2\\\" gain an Insight token. Toxic Smoke: All models within 2\\\" gain a Poison token.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Pyrotechnic.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    TideMarker={\r\n        name=\"Tide Marker\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='Once per activation.  Friendly Angler models within 1\\\" of this marker may reveive a + to Df Duels.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Tide.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getGenearyLibeary()\r\n    return generalMarkers\r\nend\r\n\r\nfunction getSpecialLibeary()\r\n    return specialLibeary\r\nend",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1e09a6",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.130703,
        "posY": 1.03220642,
        "posZ": 15.1834545,
        "rotX": 1.504165E-07,
        "rotY": 180.0193,
        "rotZ": -1.095441E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Echo",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "83c147",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.16316891,
            "posZ": 2.513737,
            "rotX": 0.00019636401,
            "rotY": 359.980042,
            "rotZ": -0.000238242457,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Echo",
          "Description": "When a friendly Obliteration model is killed within 1\" of this marker, it may drain a soulstone. If it does, it does not infuse a soulstone for being killed and, after the model is removed, this crew may summon a model of the same name within 1\" of this marker with a Flicker token and 2 health. Then remove this marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Echo.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "83c147",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.198187456,
            "scaleY": 6.92458773,
            "scaleZ": 0.204446033
          },
          "Nickname": "Echo",
          "Description": "When a friendly Obliteration model is killed within 1\" of this marker, it may drain a soulstone. If it does, it does not infuse a soulstone for being killed and, after the model is removed, this crew may summon a model of the same name within 1\" of this marker with a Flicker token and 2 health. Then remove this marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Echo.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "04e7ea",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.130703,
        "posY": 1.0322063,
        "posZ": 12.6834564,
        "rotX": -5.942232E-07,
        "rotY": 180.019287,
        "rotZ": -2.06083286E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Decoy",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "048da2",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.16315,
            "posZ": 0.013737,
            "rotX": 0.0005278825,
            "rotY": 359.98,
            "rotZ": -0.00126265828,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Decoy",
          "Description": "During the end phase, choose a Decoy marker. Make a Scheme marker in base contact with the chosen marker, then remove the chosen marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Decoy.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "048da2",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.198187456,
            "scaleY": 6.92458773,
            "scaleZ": 0.204446033
          },
          "Nickname": "Decoy",
          "Description": "During the end phase, choose a Decoy marker. Make a Scheme marker in base contact with the chosen marker, then remove the chosen marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Decoy.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "c3a887",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.1307125,
        "posY": 1.03220642,
        "posZ": 10.1834526,
        "rotX": -6.53525E-08,
        "rotY": 180.019272,
        "rotZ": -4.058468E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Gloom",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "1d5957",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.1631726,
            "posZ": -2.486263,
            "rotX": -0.000323715532,
            "rotY": 359.980042,
            "rotZ": -0.00174634217,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Gloom",
          "Description": "Allies that start a move within 2\" of this marker may ignore models and terrain while moving. Allies may treat this marker as blocking terrain for actions and abilities.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Gloom.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "1d5957",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.198187456,
            "scaleY": 6.92458773,
            "scaleZ": 0.204446033
          },
          "Nickname": "Gloom",
          "Description": "Allies that start a move within 2\" of this marker may ignore models and terrain while moving. Allies may treat this marker as blocking terrain for actions and abilities.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Gloom.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "3130d2",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.1307316,
        "posY": 1.03220642,
        "posZ": 7.68345261,
        "rotX": 2.36061382E-07,
        "rotY": 180.019287,
        "rotZ": 1.09731539E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Inferno",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "ac65c0",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.16316164,
            "posZ": -4.986263,
            "rotX": 0.000366633234,
            "rotY": 359.980042,
            "rotZ": -0.00257637817,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Inferno",
          "Description": "Hazardous(Burning)",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Inferno.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "ac65c0",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.3303125,
            "scaleY": 6.92458773,
            "scaleZ": 0.340743482
          },
          "Nickname": "Inferno",
          "Description": "Hazardous(Burning)",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Inferno.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "97acb8",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.1307468,
        "posY": 1.03220642,
        "posZ": 5.18344927,
        "rotX": 1.34234227E-07,
        "rotY": 180.019272,
        "rotZ": -2.058652E-09,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Underbrush",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "e02724",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.16314685,
            "posZ": -7.486263,
            "rotX": 0.00172004441,
            "rotY": 359.980042,
            "rotZ": -0.005176017,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Underbrush",
          "Description": "concealing, dense, severe.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Underbrush.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "e02724",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.3303125,
            "scaleY": 6.92458773,
            "scaleZ": 0.340743482
          },
          "Nickname": "Underbrush",
          "Description": "concealing, dense, severe.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Underbrush.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "3d0f2d",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.1307335,
        "posY": 1.03220642,
        "posZ": 2.68345118,
        "rotX": 5.805769E-07,
        "rotY": 180.0193,
        "rotZ": 1.5373503E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Shadow Lair",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "604f0a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.16307759,
            "posZ": -9.986263,
            "rotX": -0.00158842665,
            "rotY": 359.98,
            "rotZ": 0.00139289792,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Shadow Lair",
          "Description": "Enemy models that end their activation in base contact with this marker gain a Fright token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Shadow%20Lair.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "604f0a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.3303125,
            "scaleY": 6.92458773,
            "scaleZ": 0.340743482
          },
          "Nickname": "Shadow Lair",
          "Description": "Enemy models that end their activation in base contact with this marker gain a Fright token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Shadow%20Lair.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "0880dc",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.13073,
        "posY": 1.0322063,
        "posZ": 0.1834514,
        "rotX": -1.75157581E-07,
        "rotY": 180.019287,
        "rotZ": -9.557254E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Piano",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "14f757",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.16314757,
            "posZ": -12.4862633,
            "rotX": 0.0002992654,
            "rotY": 359.98,
            "rotZ": -0.00264593284,
            "scaleX": 0.4060096,
            "scaleY": 1.0,
            "scaleZ": 0.4060096
          },
          "Nickname": "Piano",
          "Description": "Blocking, impassable. During the end phase, choose a Piano marker. An enemy model within 1\" of the chosen marker gains an Entranced token. Then remove the chosen marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Piano.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "14f757",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.26425004,
            "scaleY": 6.92458773,
            "scaleZ": 0.2725948
          },
          "Nickname": "Piano",
          "Description": "Blocking, impassable. During the end phase, choose a Piano marker. An enemy model within 1\" of the chosen marker gains an Entranced token. Then remove the chosen marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Piano.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "6b1a28",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.1307487,
        "posY": 1.03220642,
        "posZ": 15.183445,
        "rotX": -9.065314E-07,
        "rotY": 180.0193,
        "rotZ": -4.323461E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Scrap",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "d34c85",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -14.9052448,
            "posY": 1.16316569,
            "posZ": 2.513737,
            "rotX": -0.0009493764,
            "rotY": 359.980042,
            "rotZ": -0.0009216599,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Scrap",
          "Description": "Hazardous (Perforated).",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Scrap.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "d34c85",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.198187456,
            "scaleY": 6.92458773,
            "scaleZ": 0.204446033
          },
          "Nickname": "Scrap",
          "Description": "Hazardous (Perforated).",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Scrap.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "10d79c",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.1306763,
        "posY": 1.03220618,
        "posZ": 12.6834583,
        "rotX": -7.988414E-07,
        "rotY": 180.019241,
        "rotZ": 3.4288305E-06,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Shadow",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "21f363",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -14.9052448,
            "posY": 1.163139,
            "posZ": 0.0137369987,
            "rotX": 0.00123027619,
            "rotY": 359.98,
            "rotZ": -0.0007038361,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Shadow",
          "Description": "Concealing.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Shadow.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "21f363",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.198187456,
            "scaleY": 6.92458773,
            "scaleZ": 0.204446033
          },
          "Nickname": "Shadow",
          "Description": "Concealing.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Shadow.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "5aa588",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.13074,
        "posY": 1.03220642,
        "posZ": 10.1834478,
        "rotX": 9.830551E-07,
        "rotY": 180.019257,
        "rotZ": -3.24979851E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Rift",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "d3907b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -14.9052448,
            "posY": 1.163171,
            "posZ": -2.486263,
            "rotX": -0.000183380311,
            "rotY": 359.980042,
            "rotZ": -0.000135474125,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Rift",
          "Description": "A friendly Oni within 1\" of this marker may remove this marker after succeeding on an attack to make that attack deal +1 damage.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Rift.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "d3907b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.198187456,
            "scaleY": 6.92458773,
            "scaleZ": 0.204446033
          },
          "Nickname": "Rift",
          "Description": "A friendly Oni within 1\" of this marker may remove this marker after succeeding on an attack to make that attack deal +1 damage.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Rift.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "022722",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.1307316,
        "posY": 1.03220642,
        "posZ": 7.68345261,
        "rotX": -2.3867932E-07,
        "rotY": 180.019272,
        "rotZ": -1.01211079E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Web",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "578d84",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -14.9052448,
            "posY": 1.16309726,
            "posZ": -4.986263,
            "rotX": -0.00421920838,
            "rotY": 359.98,
            "rotZ": -0.005538512,
            "scaleX": 0.507512,
            "scaleY": 1.0,
            "scaleZ": 0.507512
          },
          "Nickname": "Web",
          "Description": "Severe. Models in base contact with a Web marker may not be placed by models friendly to them.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Web.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "578d84",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.3303125,
            "scaleY": 6.92458773,
            "scaleZ": 0.340743482
          },
          "Nickname": "Web",
          "Description": "Severe. Models in base contact with a Web marker may not be placed by models friendly to them.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Web.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "41920e",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.1306782,
        "posY": 1.03220642,
        "posZ": 5.18345928,
        "rotX": -5.15742158E-07,
        "rotY": 180.0193,
        "rotZ": 1.26664673E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Pyrotechnic",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "28558c",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -14.9052448,
            "posY": 1.16316271,
            "posZ": -7.486263,
            "rotX": 0.000107691325,
            "rotY": 359.980042,
            "rotZ": -0.0022153547,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Pyrotechnic",
          "Description": "At the end of the turn apply the following to all friendly Pyrotechnic markers depending on the suit of the top card of your discard pile: BOOM!: All models 2\" of one or more Pyrotchnic marker must pass a TN 14Sp duel or be dealt 2 damage. Surprise!: All models within 2\" gain a Glowy token. Whoa...: All models within 2\" gain an Insight token. Toxic Smoke: All models within 2\" gain a Poison token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Pyrotechnic.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "28558c",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.198187456,
            "scaleY": 6.92458773,
            "scaleZ": 0.204446033
          },
          "Nickname": "Pyrotechnic",
          "Description": "At the end of the turn apply the following to all friendly Pyrotechnic markers depending on the suit of the top card of your discard pile: BOOM!: All models 2\" of one or more Pyrotchnic marker must pass a TN 14Sp duel or be dealt 2 damage. Surprise!: All models within 2\" gain a Glowy token. Whoa...: All models within 2\" gain an Insight token. Toxic Smoke: All models within 2\" gain a Poison token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Pyrotechnic.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "89d710",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.130722,
        "posY": 1.03220642,
        "posZ": 2.68345284,
        "rotX": -1.98347223E-07,
        "rotY": 180.019287,
        "rotZ": -2.31232864E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Tide Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    log(\"basermarkerbag\")\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "a81ad1",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -14.9052448,
            "posY": 1.16315091,
            "posZ": -9.986263,
            "rotX": 0.000251136778,
            "rotY": 359.98,
            "rotZ": -0.0009495542,
            "scaleX": 0.3045071,
            "scaleY": 1.0,
            "scaleZ": 0.3045071
          },
          "Nickname": "Tide Marker",
          "Description": "Once per activation.  Friendly Angler models within 1\" of this marker may reveive a + to Df Duels.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Tide.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "a81ad1",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": 9.12351766E-07,
            "rotY": 359.980042,
            "rotZ": 6.869327E-07,
            "scaleX": 0.198187456,
            "scaleY": 6.92458773,
            "scaleZ": 0.204446033
          },
          "Nickname": "Tide Marker",
          "Description": "Once per activation.  Friendly Angler models within 1\" of this marker may reveive a + to Df Duels.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/Markers/Tide.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "RSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.3045071\r\n    local y=.1\r\n    local z=0.3045071\r\n    if newConfig.size==\"40\" then\r\n        x=0.4060096\r\n        z=0.4060096\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.507512\r\n        z=0.507512\r\n    end\r\n    if newConfig.ht~=\"0\" then\r\n        y=newConfig.ht\r\n    end\r\n    self.setScale({x,y,z})\r\n    self.reload()\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "5bf467",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -26.133976,
        "posY": 0.9649999,
        "posZ": -14.3878651,
        "rotX": 6.90098E-07,
        "rotY": 179.999329,
        "rotZ": -4.56699256E-09,
        "scaleX": 0.0,
        "scaleY": 1.0,
        "scaleZ": 0.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": false,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": false
      },
      "LuaScript": "            local lastParent = nil\n            function onLoad() \n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\n            Wait.condition(\n            function() \n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \n            end, \n            function() \n            return not(self.loading_custom) \n            end\n            ) \n            end \n            function onUpdate() \n            if (parent ~= nil) then \n            if (not parent.resting or lastParent ~= parent) then \n            lastParent = parent\n            self.setPosition(parent.getPosition())\n            self.setRotation(parent.getRotation()) \n            end \n            else \n            self.destruct() \n            end \n            end\n            ",
      "LuaScriptState": "",
      "XmlUI": "",
      "PhysicsMaterial": {
        "StaticFriction": 1.0,
        "DynamicFriction": 0.7,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 0.0,
        "Drag": 0.0,
        "AngularDrag": 0.1,
        "UseGravity": false
      }
    }
  ]
}