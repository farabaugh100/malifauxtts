{
  "SaveName": "Markers",
  "EpochTime": 1745966203,
  "Date": "4/29/2025 6:36:43 PM",
  "VersionNumber": "v13.3",
  "GameMode": "Cards",
  "GameType": "Game",
  "GameComplexity": "Low Complexity",
  "PlayingTime": [
    0,
    0
  ],
  "PlayerCounts": [
    2,
    2
  ],
  "Tags": [
    "Role-playing Games",
    "Strategy Games",
    "Miniature Games",
    "Card Games",
    "Wargames",
    "Cards",
    "Components",
    "Figurines",
    "Rules",
    "Scripting",
    "English"
  ],
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Table": "Table_RPG",
  "Sky": "Sky_Forest",
  "SkyURL": "https://steamusercontent-a.akamaihd.net/ugc/1014943256936089848/FBFD82B237D4301A3C4701A0D50DF6D23D61D2E5/",
  "Note": "----------------   CREW RETRIEVER   --------------\nPASTE the text created by the crew app on the WHITE CARD \"description\" \nconextMenu - > click last text box option\nCTRL+A -> CTRL+V  -> close\nCLICK the button.\n\n------------------  CONDITIONS   -----------------\nCLICK AROUND the health bar\n (mostly invisible when off) \nCLICK and RIGHT CLICK to change Value\nHEALTH / AURA  behave the same\n\n----------------   MOVE MODEL   -----------------\nHOVER model and use 1-9 to start a 1-9Â¨ Move  use '0' for a Limitless Move\nCLICK to set waypoints\nDOUBLE CLICK to confirm\nRIGHT CLICK to remove waypoint or abort\n\n----------------   EXTRA MODELS   ---------------\nIf you need some extra reference card get it from the side boxes grouped by faction\nheavy image download expected",
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "MusicPlayer": {
    "RepeatSong": true,
    "PlaylistEntry": 1,
    "CurrentAudioTitle": "Beware the Forest Mushrooms - Yoko Shimomura",
    "CurrentAudioURL": "https://steamusercontent-a.akamaihd.net/ugc/779618751110679052/8BDB62372022408D9E5B5DD5B69E86BB43D46F49/",
    "AudioLibrary": []
  },
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0
  },
  "ComponentTags": {
    "labels": [
      {
        "displayed": "blue_discard",
        "normalized": "blue_discard"
      },
      {
        "displayed": "red_discard",
        "normalized": "red_discard"
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "DecalPallet": [],
  "LuaScript": "--[[ Lua code. See documentation: https://api.tabletopsimulator.com/ --]]\n\n--[[ The onLoad event is called after the game save finishes loading. --]]\nfunction onLoad()\n    --[[ print('onLoad!') --]]\nend\n\n--[[ The onUpdate event is called once per frame. --]]\nfunction onUpdate()\n    --[[ print('onUpdate loop!') --]]\nend",
  "LuaScriptState": "",
  "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->",
  "ObjectStates": [
    {
      "GUID": "33c3b0",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -15.1107731,
        "posY": 4.81034231,
        "posZ": -20.1076221,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7719851,
        "scaleY": 9.174497,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d6b8b4",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.2150211,
        "posY": 4.81034231,
        "posZ": 10.17524,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 11.6554289,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "911341",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 30.2511711,
        "posY": 4.81034231,
        "posZ": 9.59069252,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 11.6554213,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Purple",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2a2001",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 15.4749184,
        "posY": 4.81034231,
        "posZ": 19.8365288,
        "rotX": 0.0,
        "rotY": 179.8,
        "rotZ": 0.0,
        "scaleX": 11.7719746,
        "scaleY": 9.174497,
        "scaleZ": 4.87124
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ab497d",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 15.1961212,
        "posY": 4.81034231,
        "posZ": -20.1400986,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7719707,
        "scaleY": 9.174499,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "White",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "367320",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -15.1927719,
        "posY": 4.81034231,
        "posZ": 19.787817,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 11.7719707,
        "scaleY": 9.174497,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "65ef1c",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 30.1035728,
        "posY": 4.81034231,
        "posZ": -8.449126,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 11.6554184,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.96,
        "g": 0.438999981,
        "b": 0.807,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Pink",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "0ac07f",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.247818,
        "posY": 4.81034231,
        "posZ": -8.822588,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 11.6554317,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Orange",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d84712",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.1864033,
        "posY": 1.03220642,
        "posZ": -11.4048147,
        "rotX": -2.23726829E-07,
        "rotY": 180.019287,
        "rotZ": -2.741571E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "BaseMarkerBag",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "9d730a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00542924134,
            "posY": -7.30157357E-09,
            "posZ": 0.00434298953,
            "rotX": 4.52627341E-26,
            "rotY": 2.60551043E-11,
            "rotZ": -1.9906761E-13,
            "scaleX": 0.279260635,
            "scaleY": 10.00001,
            "scaleZ": 0.28807953
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424705526/42BDDA9DA6783B30F0A81D1A68149038A714DBC6/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Hasted\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554369193/9FC768C81E9EF00BB41E7FBAB40F58CE474A71A4/\", color=\"#FFffff\", stacks=false\r\n}\r\n\r\nfunction onCollisionEnter(col)\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\n",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "54e536",
      "Name": "Custom_Token",
      "Transform": {
        "posX": -20.562458,
        "posY": 3.67151546,
        "posZ": -19.869133,
        "rotX": 1.35593918E-08,
        "rotY": 179.995331,
        "rotZ": 1.352411E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Gen Tokens",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.454703748,
        "g": 0.438065976,
        "b": 0.438065976
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55835947070619352/6DCE9AE31487CDFE09BFEC3D14E57D0A385645CD/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "f_color = {0,0,0,95}\r\nlocal firstTokenPosition={ x=-16.905245,y= 1.01,z=5.013737}\r\nlocal firstBagPosition= { x=4.954772, y=1.01, z=-16.97987 }\r\nlocal objectLib={\r\n    libeary=\"d41eb9\";\r\n    baseToken=\"030e0e\";\r\n    baseBag=\"d84712\";\r\n    specialTokenBag=\"3ea749\";\r\n}\r\nlocal scoringTokenBag={\r\n    Strategy=\"b469ee\";\r\n    Guild=\"7c0835\";\r\n    Arcanists=\"edf269\";\r\n    Resurrectionist=\"68a770\";\r\n    Neverborn=\"31f5d9\";\r\n    Outcasts=\"44e232\";\r\n    Bayou=\"fe97e9\";\r\n    ExplorersSociety=\"898648\";\r\n    TenThunders=\"10de55\";\r\n}\r\nlocal tokenLib={}\r\nlocal bagLib={}\r\nlocal waitBase=1\r\nfunction onLoad(save_state)\r\n    self.createButton({\r\n        label=\"\",\r\n        click_function=\"genTokens\",\r\n        tooltip=\"Gen Tokens\",\r\n        function_owner=self,\r\n        position={0,0.11,0},\r\n        height=600,\r\n        width=1000,\r\n        alignment = 3,\r\n        scale={x=1.5, y=1.5, z=1.5},\r\n        font_size=300,\r\n        font_color=f_color,\r\n        color={0,0,0,0}\r\n        })\r\nend\r\n\r\nfunction genTokens(_obj, _color, alt_click)\r\n    --print(getObjectFromGUID(objectLib.baseToken).getPosition())\r\n    --return true\r\n    \r\n    local libeary=getObjectFromGUID(objectLib.libeary)\r\n    local generalTokens=libeary.call(\"getGenearyLibeary\")\r\n    local wait=waitBase\r\n    local slot=1\r\n    local specialTokesn=libeary.call(\"getSpecialLibeary\")\r\n    for key,token in pairs(specialTokesn) do\r\n\r\n       \r\n        Wait.frames(function() createToken(token,slot) end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() createBag(token,slot) slot=slot+1 end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() joinBag(token) end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() moveSpecialTokensToBag(token) end,wait+500)\r\n        wait=wait+waitBase\r\n        --return false\r\n\r\n    end\r\n    slot=slot+8\r\n    local scoringTokesn=libeary.call(\"getScoringLibeary\")\r\n    for key,token in pairs(scoringTokesn) do\r\n\r\n        log(token.name)\r\n        Wait.frames(function() createToken(token,slot) slot=slot+1 end,wait)\r\n        wait=wait+waitBase\r\n        --Wait.frames(function() createBag(token,slot) slot=slot+1 end,wait)\r\n        --wait=wait+waitBasew\r\n        --Wait.frames(function() joinBag(token) end,wait)\r\n        --wait=wait+waitBase\r\n        Wait.frames(function() moveToScoringBag(token) end,wait+500)\r\n        wait=wait+waitBase\r\n        --return false\r\n\r\n    end\r\nend\r\n\r\nfunction createToken(token,slot)\r\n    local pos=getTokenSlotPosition(slot)\r\n    local newToken=getObjectFromGUID(objectLib.baseToken).clone({position=pos})\r\n    Wait.frames(function() newToken.call(\"setConfig\",token) end,1)\r\n    tokenLib[token.name]=newToken.getGUID()\r\nend\r\n\r\nfunction createBag(token,slot)\r\n    local pos=getTokenSlotPosition(slot)\r\n    local newBag=getObjectFromGUID(objectLib.baseBag).clone({position=pos})\r\n    newBag.setName(token.name)\r\n    --Wait.frames(function() newBag.call(\"setConfig\",token) end,1)\r\n    bagLib[token.name]=newBag.getGUID()\r\nend\r\n\r\nfunction getTokenSlotPosition(slot)\r\n    local row = 0\r\n    local targetPos = slot\r\n    while targetPos >= 7.5 do\r\n        row = row + 1\r\n        targetPos = targetPos - 7\r\n    end\r\n    \r\n    return Vector( firstTokenPosition.x+ row * 3,firstTokenPosition.y  ,firstTokenPosition.z - ((targetPos) * ( 2.5)))\r\nend\r\n\r\n\r\nfunction getBagSlotPosition(slot)\r\n    local row = 0\r\n    local targetPos = slot\r\n    while targetPos >= 7.5 do\r\n        row = row + 1\r\n        targetPos = targetPos - 7\r\n    end\r\n    \r\n    return Vector( firstBagPosition.x+ row * 3,firstBagPosition.y  ,firstBagPosition.z - ((targetPos) * ( 8)))\r\nend\r\n\r\nfunction moveTokenToBag(token,bag)\r\n    token.setPosition(bag.getPosition())\r\nend\r\n\r\nfunction joinBag(token)\r\n    local bag=getObjectFromGUID(bagLib[token.name])\r\n    local newToken=getObjectFromGUID(tokenLib[token.name])\r\n    bag.setPosition(newToken.getPosition())\r\n    bag.destroyAttachments()\r\n    bag.addAttachment(newToken)\r\n    local nextToken=newToken.clone({position=bag.getPosition()})\r\n    local thickness=0.01\r\n    if token.ht~=\"0\" then\r\n        thickness=token.ht\r\n    end\r\n    Wait.frames(function() nextToken.call(\"setThickness\",thickness)end, 1)\r\n    --bag.setPosition(getObjectFromGUID(objectLib.specialTokenBag).getPosition():add(Vector(0,10,0)))\r\nend\r\n\r\nfunction moveSpecialTokensToBag(token)\r\n    local bag=getObjectFromGUID(bagLib[token.name])\r\n    getObjectFromGUID(objectLib.specialTokenBag).putObject(bag)\r\nend\r\n\r\nfunction moveToScoringBag(token)\r\n    local newToken=getObjectFromGUID(tokenLib[token.name])\r\n    getObjectFromGUID(scoringTokenBag[token.name]).putObject(newToken)\r\nend",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3ea749",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "posX": -0.966235757,
        "posY": 1.00753045,
        "posZ": 10.9325285,
        "rotX": -8.52778555E-07,
        "rotY": 0.149936229,
        "rotZ": 8.238782E-07,
        "scaleX": 7.897566,
        "scaleY": 7.21041,
        "scaleZ": 7.72229671
      },
      "Nickname": "Special Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.9921611,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 0,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/938308817305239501/02DEE4008F9EDDB7690EF61C2A12676BCB7CB71A/",
        "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/938308817305239628/22B84A6BF1CECB13E70D1C931F12B6EDC6E8F875/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 0.8745098,
            "g": 0.8117647,
            "b": 0.745098054
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "Bag": {
        "Order": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "030e0e",
      "Name": "Custom_Token",
      "Transform": {
        "posX": -26.133976,
        "posY": 0.9649999,
        "posZ": -14.3878651,
        "rotX": -9.414341E-06,
        "rotY": 179.999329,
        "rotZ": -5.061747E-06,
        "scaleX": 0.3045071,
        "scaleY": 0.1,
        "scaleZ": 0.3045071
      },
      "Nickname": "Base Marker",
      "Description": "Size: 30 mm",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": true,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381427830720/188A8598AAE03EA4CBBDBB8C2706343AED181B6A/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        --thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
      "LuaScriptState": "[]",
      "XmlUI": "",
      "CustomUIAssets": [
        {
          "Type": 0,
          "Name": "Aura",
          "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
        }
      ]
    },
    {
      "GUID": "d41eb9",
      "Name": "Checker_white",
      "Transform": {
        "posX": 5.35841036,
        "posY": 1.21048343,
        "posZ": 12.8566236,
        "rotX": 1.76836991E-07,
        "rotY": 0.0008618948,
        "rotZ": 180.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "The Libeary",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "local generalLibeary={}\r\n\r\n\r\n\r\n\r\nlocal specialLibeary={\r\n    Echo={\r\n        name=\"Echo\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='When a friendly Obliteration model is killed within 1\\\" of this marker, it may drain a soulstone. If it does, it does not infuse a soulstone for being killed and, after the model is removed, this crew may summon a model of the same name within 1\\\" of this marker with a Flicker token and 2 health. Then remove this marker.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Echo.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Decoy={\r\n        name=\"Decoy\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='During the end phase, choose a Decoy marker. Make a Scheme marker in base contact with the chosen marker, then remove the chosen marker.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Decoy.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Gloom={\r\n        name=\"Gloom\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='Allies that start a move within 2\\\" of this marker may ignore models and terrain while moving. Allies may treat this marker as blocking terrain for actions and abilities.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Gloom.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Scrap={\r\n        name=\"Scrap\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='Hazardous (Perforated).';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Scrap.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Shadow={\r\n        name=\"Shadow\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='Concealing.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Shadow.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Rift={\r\n        name=\"Rift\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='A friendly Oni within 1\\\" of this marker may remove this marker after succeeding on an attack to make that attack deal +1 damage.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Rift.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Pyrotechnic={\r\n        name=\"Pyrotechnic\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='At the end of the turn apply the following to all friendly Pyrotechnic markers depending on the suit of the top card of your discard pile: BOOM!: All models 2\\\" of one or more Pyrotchnic marker must pass a TN 14Sp duel or be dealt 2 damage. Surprise!: All models within 2\\\" gain a Glowy token. Whoa...: All models within 2\\\" gain an Insight token. Toxic Smoke: All models within 2\\\" gain a Poison token.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Pyrotechnic.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    TideMarker={\r\n        name=\"Tide Marker\";\r\n        size=\"30\";\r\n        ht=\"0\";\r\n        rules='Once per activation.  Friendly Angler models within 1\\\" of this marker may reveive a + to Df Duels.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Tide.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Piano={\r\n        name=\"Piano\";\r\n        size=\"40\";\r\n        ht=\"3\";\r\n        rules='Ht 3, blocking, impassable. During the end phase, choose a Piano marker. An enemy model within 1\\\" of the chosen marker gains an Entranced token. Then remove the chosen marker.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Piano.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Inferno={\r\n        name=\"Inferno\";\r\n        size=\"50\";\r\n        ht=\"0\";\r\n        rules='Hazardous(Burning)';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Inferno.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Underbrush={\r\n        name=\"Underbrush\";\r\n        size=\"50\";\r\n        ht=\"0\";\r\n        rules='concealing, dense, severe.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Underbrush.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    ShadowLair={\r\n        name=\"Shadow Lair\";\r\n        size=\"50\";\r\n        ht=\"0\";\r\n        rules='Enemy models that end their activation in base contact with this marker gain a Fright token.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Shadow%20Lair.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Web={\r\n        name=\"Web\";\r\n        size=\"50\";\r\n        ht=\"0\";\r\n        rules='Severe. Models in base contact with a Web marker may not be placed by models friendly to them.';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Web.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n}\r\n\r\n\r\nlocal scoringLibeary={\r\n    Strategy={\r\n        name=\"Strategy\";\r\n        size=\"30\";\r\n        ht=\"0.1\";\r\n        rules='';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/marker_size_fix/assets/img/ScoringMarkers/Strategy.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Guild={\r\n        name=\"Guild\";\r\n        size=\"30\";\r\n        ht=\"0.1\";\r\n        rules='';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/marker_size_fix/assets/img/ScoringMarkers/Guild.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Arcanists={\r\n        name=\"Arcanists\";\r\n        size=\"30\";\r\n        ht=\"0.1\";\r\n        rules='';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/marker_size_fix/assets/img/ScoringMarkers/Arcanists.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Resurrectionist={\r\n        name=\"Resurrectionist\";\r\n        size=\"30\";\r\n        ht=\"0.1\";\r\n        rules='';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/marker_size_fix/assets/img/ScoringMarkers/Resurrectionists.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Neverborn={\r\n        name=\"Neverborn\";\r\n        size=\"30\";\r\n        ht=\"0.1\";\r\n        rules='';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/marker_size_fix/assets/img/ScoringMarkers/Neverborn.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Outcasts={\r\n        name=\"Outcasts\";\r\n        size=\"30\";\r\n        ht=\"0.1\";\r\n        rules='';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/marker_size_fix/assets/img/ScoringMarkers/Outcasts.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    TenThunders={\r\n        name=\"TenThunders\";\r\n        size=\"30\";\r\n        ht=\"0.1\";\r\n        rules='';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/marker_size_fix/assets/img/ScoringMarkers/TenThunders.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Bayou={\r\n        name=\"Bayou\";\r\n        size=\"30\";\r\n        ht=\"0.1\";\r\n        rules='';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/marker_size_fix/assets/img/ScoringMarkers/Bayou.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    ExplorersSociety={\r\n        name=\"ExplorersSociety\";\r\n        size=\"30\";\r\n        ht=\"0.1\";\r\n        rules='';\r\n        image=\"https://github.com/farabaugh100/malifauxtts/blob/marker_size_fix/assets/img/ScoringMarkers/ExplorersSociety.png?raw=true\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getGenearyLibeary()\r\n    return generalMarkers\r\nend\r\n\r\nfunction getSpecialLibeary()\r\n    return specialLibeary\r\nend\r\n\r\nfunction getScoringLibeary()\r\n    return scoringLibeary\r\nend",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c36820",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -25.8625755,
        "posY": 1.0322063,
        "posZ": 16.8502541,
        "rotX": -1.36264E-07,
        "rotY": 180.019272,
        "rotZ": -1.120905E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Echo",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "07128b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.12717664,
            "posZ": 2.513737,
            "rotX": -7.370367E-05,
            "rotY": 359.980042,
            "rotZ": -0.00106442836,
            "scaleX": 0.365,
            "scaleY": 1.0,
            "scaleZ": 0.365
          },
          "Nickname": "Echo",
          "Description": "When a friendly Obliteration model is killed within 1\" of this marker, it may drain a soulstone. If it does, it does not infuse a soulstone for being killed and, after the model is removed, this crew may summon a model of the same name within 1\" of this marker with a Flicker token and 2 health. Then remove this marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Echo.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "07128b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.237559065,
            "scaleY": 6.92458773,
            "scaleZ": 0.245060965
          },
          "Nickname": "Echo",
          "Description": "When a friendly Obliteration model is killed within 1\" of this marker, it may drain a soulstone. If it does, it does not infuse a soulstone for being killed and, after the model is removed, this crew may summon a model of the same name within 1\" of this marker with a Flicker token and 2 health. Then remove this marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Echo.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "e4d82e",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -25.8625546,
        "posY": 1.0322063,
        "posZ": 14.3502579,
        "rotX": 4.784826E-08,
        "rotY": 180.019287,
        "rotZ": -4.30387956E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Decoy",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "611249",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.127181,
            "posZ": 0.0137370024,
            "rotX": -0.000451930624,
            "rotY": 359.980042,
            "rotZ": -0.0004756512,
            "scaleX": 0.365,
            "scaleY": 1.0,
            "scaleZ": 0.365
          },
          "Nickname": "Decoy",
          "Description": "During the end phase, choose a Decoy marker. Make a Scheme marker in base contact with the chosen marker, then remove the chosen marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Decoy.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "611249",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.237559065,
            "scaleY": 6.92458773,
            "scaleZ": 0.245060965
          },
          "Nickname": "Decoy",
          "Description": "During the end phase, choose a Decoy marker. Make a Scheme marker in base contact with the chosen marker, then remove the chosen marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Decoy.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "08c36e",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -25.8625927,
        "posY": 1.0322063,
        "posZ": 11.8502512,
        "rotX": 7.540649E-08,
        "rotY": 180.019272,
        "rotZ": 3.37224435E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Gloom",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "257a80",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.12716,
            "posZ": -2.486263,
            "rotX": 0.00025203015,
            "rotY": 359.980042,
            "rotZ": -0.001309704,
            "scaleX": 0.365,
            "scaleY": 1.0,
            "scaleZ": 0.365
          },
          "Nickname": "Gloom",
          "Description": "Allies that start a move within 2\" of this marker may ignore models and terrain while moving. Allies may treat this marker as blocking terrain for actions and abilities.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Gloom.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "257a80",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.237559065,
            "scaleY": 6.92458773,
            "scaleZ": 0.245060965
          },
          "Nickname": "Gloom",
          "Description": "Allies that start a move within 2\" of this marker may ignore models and terrain while moving. Allies may treat this marker as blocking terrain for actions and abilities.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Gloom.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "032e64",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -25.8625927,
        "posY": 1.03220642,
        "posZ": 9.350252,
        "rotX": -7.60372458E-08,
        "rotY": 180.019287,
        "rotZ": -5.88290334E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Scrap",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "a52444",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.12717044,
            "posZ": -4.986263,
            "rotX": 0.000191029962,
            "rotY": 359.980042,
            "rotZ": -0.0006015766,
            "scaleX": 0.365,
            "scaleY": 1.0,
            "scaleZ": 0.365
          },
          "Nickname": "Scrap",
          "Description": "Hazardous (Perforated).",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Scrap.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "a52444",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.237559065,
            "scaleY": 6.92458773,
            "scaleZ": 0.245060965
          },
          "Nickname": "Scrap",
          "Description": "Hazardous (Perforated).",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Scrap.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "a074a7",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -25.8625927,
        "posY": 1.03220642,
        "posZ": 6.85025072,
        "rotX": -3.64185638E-07,
        "rotY": 180.019272,
        "rotZ": -4.983014E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Shadow",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "0f3fcf",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.127177,
            "posZ": -7.486263,
            "rotX": -0.000331852119,
            "rotY": 359.980042,
            "rotZ": -0.00060591253,
            "scaleX": 0.365,
            "scaleY": 1.0,
            "scaleZ": 0.365
          },
          "Nickname": "Shadow",
          "Description": "Concealing.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Shadow.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "0f3fcf",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.237559065,
            "scaleY": 6.92458773,
            "scaleZ": 0.245060965
          },
          "Nickname": "Shadow",
          "Description": "Concealing.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Shadow.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "6e6127",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -25.8625927,
        "posY": 1.03220642,
        "posZ": 4.35025024,
        "rotX": 1.506229E-07,
        "rotY": 180.019287,
        "rotZ": -7.175646E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Rift",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "78e32a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.12716687,
            "posZ": -9.986263,
            "rotX": -0.0005680431,
            "rotY": 359.980042,
            "rotZ": -0.00138659845,
            "scaleX": 0.365,
            "scaleY": 1.0,
            "scaleZ": 0.365
          },
          "Nickname": "Rift",
          "Description": "A friendly Oni within 1\" of this marker may remove this marker after succeeding on an attack to make that attack deal +1 damage.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Rift.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "78e32a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.237559065,
            "scaleY": 6.92458773,
            "scaleZ": 0.245060965
          },
          "Nickname": "Rift",
          "Description": "A friendly Oni within 1\" of this marker may remove this marker after succeeding on an attack to make that attack deal +1 damage.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Rift.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "3361e8",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -25.8625546,
        "posY": 1.03220642,
        "posZ": 1.850257,
        "rotX": 6.931698E-08,
        "rotY": 180.019287,
        "rotZ": 1.11839773E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Pyrotechnic",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "f735a1",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -16.9052448,
            "posY": 1.12717092,
            "posZ": -12.4862633,
            "rotX": 0.000308161922,
            "rotY": 359.980042,
            "rotZ": -0.000693430367,
            "scaleX": 0.365,
            "scaleY": 1.0,
            "scaleZ": 0.365
          },
          "Nickname": "Pyrotechnic",
          "Description": "At the end of the turn apply the following to all friendly Pyrotechnic markers depending on the suit of the top card of your discard pile: BOOM!: All models 2\" of one or more Pyrotchnic marker must pass a TN 14Sp duel or be dealt 2 damage. Surprise!: All models within 2\" gain a Glowy token. Whoa...: All models within 2\" gain an Insight token. Toxic Smoke: All models within 2\" gain a Poison token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Pyrotechnic.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "f735a1",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.237559065,
            "scaleY": 6.92458773,
            "scaleZ": 0.245060965
          },
          "Nickname": "Pyrotechnic",
          "Description": "At the end of the turn apply the following to all friendly Pyrotechnic markers depending on the suit of the top card of your discard pile: BOOM!: All models 2\" of one or more Pyrotchnic marker must pass a TN 14Sp duel or be dealt 2 damage. Surprise!: All models within 2\" gain a Glowy token. Whoa...: All models within 2\" gain an Insight token. Toxic Smoke: All models within 2\" gain a Poison token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Pyrotechnic.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "e75db9",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.8625546,
        "posY": 1.03220642,
        "posZ": 16.8502579,
        "rotX": 4.774378E-07,
        "rotY": 180.019287,
        "rotZ": -2.497638E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Tide Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "39acbb",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.127156,
            "posZ": 2.513737,
            "rotX": 0.000316009216,
            "rotY": 359.980042,
            "rotZ": -0.0008420733,
            "scaleX": 0.365,
            "scaleY": 1.0,
            "scaleZ": 0.365
          },
          "Nickname": "Tide Marker",
          "Description": "Once per activation.  Friendly Angler models within 1\" of this marker may reveive a + to Df Duels.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Tide.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "39acbb",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.237559065,
            "scaleY": 6.92458773,
            "scaleZ": 0.245060965
          },
          "Nickname": "Tide Marker",
          "Description": "Once per activation.  Friendly Angler models within 1\" of this marker may reveive a + to Df Duels.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Tide.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "11c6c1",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.8625813,
        "posY": 1.03220642,
        "posZ": 14.3502541,
        "rotX": -2.58307068E-07,
        "rotY": 180.019272,
        "rotZ": 9.253106E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Piano",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "b5e58b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 2.61403465,
            "posZ": 0.0137369987,
            "rotX": 0.01377041,
            "rotY": 359.9801,
            "rotZ": 359.9458,
            "scaleX": 0.48666,
            "scaleY": 1.0,
            "scaleZ": 0.48666
          },
          "Nickname": "Piano",
          "Description": "Ht 3, blocking, impassable. During the end phase, choose a Piano marker. An enemy model within 1\" of the chosen marker gains an Entranced token. Then remove the chosen marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Piano.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 3.0,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "b5e58b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.316741079,
            "scaleY": 6.92458773,
            "scaleZ": 0.326743484
          },
          "Nickname": "Piano",
          "Description": "Ht 3, blocking, impassable. During the end phase, choose a Piano marker. An enemy model within 1\" of the chosen marker gains an Entranced token. Then remove the chosen marker.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Piano.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "f3c958",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.8625946,
        "posY": 1.03220642,
        "posZ": 11.8501911,
        "rotX": -4.95317067E-08,
        "rotY": 180.019089,
        "rotZ": 2.5202138E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Inferno",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "9faa11",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.12716007,
            "posZ": -2.486263,
            "rotX": 0.00134214759,
            "rotY": 359.980042,
            "rotZ": -0.005135889,
            "scaleX": 0.608,
            "scaleY": 1.0,
            "scaleZ": 0.608
          },
          "Nickname": "Inferno",
          "Description": "Hazardous(Burning)",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Inferno.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "9faa11",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.3957148,
            "scaleY": 6.92458773,
            "scaleZ": 0.4082111
          },
          "Nickname": "Inferno",
          "Description": "Hazardous(Burning)",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Inferno.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "26c5b8",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.8625946,
        "posY": 1.03220642,
        "posZ": 9.35020351,
        "rotX": 4.462075E-08,
        "rotY": 180.019211,
        "rotZ": -1.02068505E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Underbrush",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "fa73cd",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.12718236,
            "posZ": -4.986263,
            "rotX": 0.00106839172,
            "rotY": 359.980042,
            "rotZ": -0.00397806847,
            "scaleX": 0.608,
            "scaleY": 1.0,
            "scaleZ": 0.608
          },
          "Nickname": "Underbrush",
          "Description": "concealing, dense, severe.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Underbrush.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "fa73cd",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.3957148,
            "scaleY": 6.92458773,
            "scaleZ": 0.4082111
          },
          "Nickname": "Underbrush",
          "Description": "concealing, dense, severe.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Underbrush.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "ed65b3",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.8625488,
        "posY": 1.03220642,
        "posZ": 6.85026026,
        "rotX": -1.66663668E-07,
        "rotY": 180.019089,
        "rotZ": -2.32942355E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Shadow Lair",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "af4f6e",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.12715912,
            "posZ": -7.486263,
            "rotX": 0.00141234579,
            "rotY": 359.980042,
            "rotZ": -0.00514908973,
            "scaleX": 0.608,
            "scaleY": 1.0,
            "scaleZ": 0.608
          },
          "Nickname": "Shadow Lair",
          "Description": "Enemy models that end their activation in base contact with this marker gain a Fright token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Shadow%20Lair.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "af4f6e",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.3957148,
            "scaleY": 6.92458773,
            "scaleZ": 0.4082111
          },
          "Nickname": "Shadow Lair",
          "Description": "Enemy models that end their activation in base contact with this marker gain a Fright token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Shadow%20Lair.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "90e43a",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.8625946,
        "posY": 1.03220642,
        "posZ": 4.35021448,
        "rotX": -6.70450845E-07,
        "rotY": 180.019165,
        "rotZ": 3.205418E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Web",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "90b471",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.12722075,
            "posZ": -9.986263,
            "rotX": 0.00218198565,
            "rotY": 359.980042,
            "rotZ": -0.00186392525,
            "scaleX": 0.608,
            "scaleY": 1.0,
            "scaleZ": 0.608
          },
          "Nickname": "Web",
          "Description": "Severe. Models in base contact with a Web marker may not be placed by models friendly to them.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Web.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ],
      "ChildObjects": [
        {
          "GUID": "90b471",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -1.6382096E-06,
            "rotY": 359.980042,
            "rotZ": 2.31030072E-06,
            "scaleX": 0.3957148,
            "scaleY": 6.92458773,
            "scaleZ": 0.4082111
          },
          "Nickname": "Web",
          "Description": "Severe. Models in base contact with a Web marker may not be placed by models friendly to them.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": true,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomImage": {
            "ImageURL": "https://github.com/farabaugh100/malifauxtts/blob/main/assets/img/Markers/Web.png?raw=true",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.01,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Base Marker.030e0e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Base Marker.030e0e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"components/BaseMarker\")\nend)\n__bundle_register(\"components/BaseMarker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nRSS_Class = 'Marker';\r\n------ CLASS VARIABLES ----------------------\r\nlocal ChildObjs = {\r\n    aura_obj = nil\r\n};\r\nlocal Conditions = {}\r\nlocal state = {conditions={ Aura=0,Activated =0}};\r\nlocal config={}\r\n------ LIFE CICLE EVENTS --------------------\r\nfunction onDestroy()\r\n    if (ChildObjs.aura_obj ~= nil) then \r\n        ChildObjs.aura_obj.destruct() \r\n    end\r\nend\r\nfunction onLoad(save)\r\n    rebuildAssets()\r\n    self.UI.setXml(ui())\r\n    showAura()\r\nend\r\nfunction onSave()\r\nend\r\nfunction onUpdate()\r\nend\r\n------ STATE ACTIONS ------------------------\r\nfunction SetInitialState(newState) --Tobe called from the reference card\r\nend\r\nfunction ModifyAura(params)\r\n    local bound = self.getBoundsNormalized();\r\n    state.conditions.Aura = math.max(0,state.conditions.Aura + params.amount);\r\n    local newScale = 0;\r\n    if state.conditions.Aura > 0 then\r\n        newScale = state.conditions.Aura+(bound.size.x/2+0.02);\r\n    end\r\n    ChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n    SyncCondition(\"Aura\")\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    local thickness=0.01\r\n    --\r\n\r\n    --    thickness=newConfig.ht\r\n    --end\r\n    self.setCustomObject({\r\n        image = newConfig.image;\r\n        thickness=thickness\r\n    });\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    local x=0.365\r\n    local y=0.2\r\n    local z=0.365\r\n    if newConfig.size==\"40\" then\r\n        x=0.48666\r\n        z=0.48666\r\n    elseif newConfig.size==\"50\" then\r\n        x=0.608\r\n        z=0.608\r\n    end\r\n\r\n    self.setScale({x,1,z})\r\n    log(self.getScale())\r\n    self.reload()\r\nend\r\nfunction setThickness(thickness)\r\n    self.setCustomObject({\r\n        thickness=thickness\r\n    });\r\nend\r\n------ MODEL MANIPULATION -------------------\r\nfunction AuraFollowObject(params)\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',params.obj);\r\n    end\r\nend\r\nfunction AuraResetFollow()\r\n    if ChildObjs.aura_obj ~= nil then\r\n        ChildObjs.aura_obj.setVar('parent',self);\r\n    end\r\nend\r\n------ UI GENERATION ------------------------\r\nfunction Sync()\r\n    self.UI.setXml(ui())\r\n    --propagateToReferenceCard()\r\nend\r\nfunction SyncCondition(name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    local color = 'All';\r\n    self.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n        color= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff'),\r\n        image= imageName,\r\n    });\r\n        self.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n        active= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n        text= state.conditions[name] \r\n    });\r\n    if name == \"Activated\" then\r\n        RefreshBaseColor()\r\n    end\r\nend\r\nfunction ui() \r\n    return [[\r\n        <Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n        PlayerHUDPivot('All')..\r\n        [[</Panel>\r\n    ]];\r\nend\r\nfunction rebuildAssets()\r\n    local assets = {};\r\n    for conditionName, value in pairs(Conditions) do\r\n        assets[#assets+1]={name=conditionName , url = value.url};\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\n    end\r\nfunction PlayerHUDPivot(color)\r\n    return [[\r\n        <Panel id=']]..color..[[_PlayerHUDPivot'  height=\"160\" width=\"128\" position='0 0 -10' rotation='0 0 0' rectAlignment=\"MiddleCenter\"  childForceExpandWidth=\"false\">\r\n        ]]..HUDConditions(color) ..[[\r\n        </Panel>\r\n    ]]\r\nend\r\n-- function PlayerHUDContainer(color)\r\n-- return [[\r\n-- <Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"100%\" rectAlignment=\"MiddleCenter\"  rotation='0 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n-- HUDConditions(color) ..\r\n-- [[</Panel>\r\n-- ]]\r\n-- end\r\nfunction HUDConditions(color)\r\n    return [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' rotation='0 0 180' scale='4 4 4' > ]]..\r\n        HUDSingleCondition(color,\"Aura\", 0 ,0) ..\r\n    [[</Panel>]]\r\nend\r\nfunction UI_ModifyAura(p,alt) \r\n    if alt ~= '-3' then \r\n        ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) \r\n    end \r\nend\r\nfunction HUDSingleCondition(color,name,x,y)\r\n    local id = \"ConditionFrame_\" .. name ;\r\n    return [[<Panel id=\"]] .. id ..[[\" width=\"30\" height=\"30\" alignment='LowerLeft' position=']] ..(x* 32 ).. [[ ]] .. y*(32) .. [[ 0' ]] .. \r\n        [[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n        HUDSingleConditionBody(color,name)..\r\n    [[</Panel>]];\r\nend\r\nfunction HUDSingleConditionBody(color,name)\r\n    local secondary = Conditions[name].secondary;\r\n    local imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n    return [[\r\n        <Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or 'ff') .. [[\" rectAlignment='LowerLeft' width='30' height='30'/>\r\n        <Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize='22' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n    ]]\r\nend\r\nConditions = {\r\n    Aura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true }\r\n}\r\nfunction showAura()\r\n    local bound = self.getBoundsNormalized();\r\n    local a=(state.conditions.Aura > 0) and (state.conditions.Aura+(bound.size.x/2)+0.02) or 0; --based on model base size\r\n    local me = self\r\n    local clr = self.getColorTint()\r\n    ChildObjs.aura_obj=spawnObject({\r\n        type='custom_model',\r\n        position=self.getPosition(),\r\n        rotation=self.getRotation(),\r\n        scale={a,1,a},\r\n        mass=0,\r\n        use_gravity=false,\r\n        sound=false,\r\n        snap_to_grid=false,\r\n        callback_function=function(b)\r\n            b.setColorTint(clr)\r\n            b.setVar('parent',self)\r\n            b.setLuaScript([[\r\n            local lastParent = nil\r\n            function onLoad() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n            Wait.condition(\r\n            function() \r\n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n            end, \r\n            function() \r\n            return not(self.loading_custom) \r\n            end\r\n            ) \r\n            end \r\n            function onUpdate() \r\n            if (parent ~= nil) then \r\n            if (not parent.resting or lastParent ~= parent) then \r\n            lastParent = parent\r\n            self.setPosition(parent.getPosition())\r\n            self.setRotation(parent.getRotation()) \r\n            end \r\n            else \r\n            self.destruct() \r\n            end \r\n            end\r\n            ]])\r\n            b.getComponent('MeshRenderer').set('receiveShadows',false)\r\n            b.mass=0\r\n            b.bounciness=0\r\n            b.drag=0\r\n            b.use_snap_points=false\r\n            b.use_grid=false\r\n            b.use_gravity=false\r\n            b.auto_raise=false\r\n            b.auto_raise=false\r\n            b.sticky=false\r\n            b.interactable=false\r\n        end\r\n        })\r\n        ChildObjs.aura_obj.setCustomObject({\r\n        mesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n        collider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n        material=3,\r\n        specularIntensity=0,\r\n        cast_shadows=false\r\n    })\r\nend\nend)\nreturn __bundle_require(\"Base Marker.030e0e.lua\")",
          "LuaScriptState": "[]",
          "XmlUI": "",
          "CustomUIAssets": [
            {
              "Type": 0,
              "Name": "Aura",
              "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
            }
          ]
        }
      ]
    },
    {
      "GUID": "10de55",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 23.7683029,
        "posY": 1.05142236,
        "posZ": 15.9252014,
        "rotX": -3.69147131E-08,
        "rotY": 255.002213,
        "rotZ": -5.50110641E-08,
        "scaleX": 3.07970858,
        "scaleY": 0.182844967,
        "scaleZ": 3.13255978
      },
      "Nickname": "Ten Thunders Scheme Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "f583fe",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0158668682,
            "posY": -1.36270257E-08,
            "posZ": 0.03368161,
            "rotX": -1.36348194E-06,
            "rotY": 285.0,
            "rotZ": -6.185832E-07,
            "scaleX": 0.2921818,
            "scaleY": 5.000005,
            "scaleZ": 0.29651916
          },
          "Nickname": "Ten Thunders Scheme Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1009312139319052263/50004B10AFB8B31CEEDD3563F2B1FCA231B1F635/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.199999839,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "68a770",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 18.6983089,
        "posY": 1.0510788,
        "posZ": 15.9252167,
        "rotX": -6.13934859E-08,
        "rotY": 254.997925,
        "rotZ": -2.4527958E-07,
        "scaleX": 2.94086933,
        "scaleY": 0.182157531,
        "scaleZ": 3.00238347
      },
      "Nickname": "Resurrectionist Scheme Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "73553d",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0137526914,
            "posY": -5.567892E-08,
            "posZ": 0.0266332477,
            "rotX": -6.558287E-06,
            "rotY": 285.0,
            "rotZ": -4.581252E-06,
            "scaleX": 0.292255521,
            "scaleY": 4.999993,
            "scaleZ": 0.297542185
          },
          "Nickname": "Resurrectionist Scheme Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1009312139319066086/FDA12DF587BBFEF2D467F14D7E1C1D2C3D6C6B29/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.200000152,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "44e232",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 13.6283007,
        "posY": 1.05109262,
        "posZ": 15.925209,
        "rotX": -2.7016366E-08,
        "rotY": 255.000412,
        "rotZ": 2.32006734E-08,
        "scaleX": 2.95153427,
        "scaleY": 0.1821853,
        "scaleZ": 3.00217867
      },
      "Nickname": "Outcast Scheme Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "81fd79",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0152728586,
            "posY": 3.322935E-09,
            "posZ": 0.0323958881,
            "rotX": 1.63977109E-06,
            "rotY": 285.0,
            "rotZ": -2.28282624E-06,
            "scaleX": 0.292181849,
            "scaleY": 4.999993,
            "scaleZ": 0.296518654
          },
          "Nickname": "Outcast Scheme Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1009312139319051359/203E7808F75A19657756D97D14CE64896E873F87/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "31f5d9",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 8.558252,
        "posY": 1.05142272,
        "posZ": 15.9251518,
        "rotX": 9.608021E-08,
        "rotY": 255.0059,
        "rotZ": 5.148206E-08,
        "scaleX": 3.079713,
        "scaleY": 0.182845473,
        "scaleZ": 3.132563
      },
      "Nickname": "Neverborn Scheme Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "02194e",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0126800761,
            "posY": -4.21123536E-09,
            "posZ": 0.0218988787,
            "rotX": -5.431001E-07,
            "rotY": 285.0,
            "rotZ": -4.63558678E-07,
            "scaleX": 0.2921817,
            "scaleY": 4.999993,
            "scaleZ": 0.296518922
          },
          "Nickname": "Neverborn Scheme Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1009312139319050497/E06BC43807CD7F9DB214C0F2B6220351E3DE04B2/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.2,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "b469ee",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 3.49530983,
        "posY": 1.05117059,
        "posZ": 15.925602,
        "rotX": -3.4553036E-08,
        "rotY": 255.050323,
        "rotZ": 1.19014237E-06,
        "scaleX": 2.98400569,
        "scaleY": 0.182341352,
        "scaleZ": 3.0292182
      },
      "Nickname": "Strategy Marker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "81713b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.008441381,
            "posY": 8.039506E-10,
            "posZ": 0.00535793044,
            "rotX": 1.49741538E-07,
            "rotY": 285.0,
            "rotZ": -2.34125355E-06,
            "scaleX": 0.289847583,
            "scaleY": 5.000002,
            "scaleZ": 0.293647
          },
          "Nickname": "Strategy Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651098116524221684/D3AD8074E96A52074DA1F7E6903A960A10EAF860/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.199999869,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "7c0835",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -1.58176231,
        "posY": 1.05140138,
        "posZ": 15.9251671,
        "rotX": 1.81017754E-07,
        "rotY": 255.004684,
        "rotZ": 1.26494033E-08,
        "scaleX": 3.08655739,
        "scaleY": 0.182802975,
        "scaleZ": 3.10857916
      },
      "Nickname": "Guild Scheme Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "7f1939",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.008330977,
            "posY": -3.748735E-09,
            "posZ": 0.006279515,
            "rotX": -1.47295987E-06,
            "rotY": 285.0,
            "rotZ": 1.507474E-06,
            "scaleX": 0.29417026,
            "scaleY": 4.99999857,
            "scaleZ": 0.29598707
          },
          "Nickname": "Guild Scheme Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1009312139319049654/347864E6E396813D85BE39285C7DD9759399416A/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.2,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "898648",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -6.65169525,
        "posY": 1.05140162,
        "posZ": 15.9252129,
        "rotX": 9.31777961E-08,
        "rotY": 255.000031,
        "rotZ": 4.44482472E-11,
        "scaleX": 3.08278584,
        "scaleY": 0.182803273,
        "scaleZ": 3.112461
      },
      "Nickname": "Explorers Society Scheme Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "894b64",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0149342306,
            "posY": 9.59439E-09,
            "posZ": -0.0103291059,
            "rotX": -9.87011148E-08,
            "rotY": 285.0,
            "rotZ": -2.316783E-06,
            "scaleX": 0.293852925,
            "scaleY": 4.99999857,
            "scaleZ": 0.296301
          },
          "Nickname": "Explorers Society Scheme Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1009312139319048867/A940CA7B300FA83112C5849BAEB52E7838DEDE76/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.2,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "fe97e9",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -11.7217445,
        "posY": 1.05139661,
        "posZ": 15.9252129,
        "rotX": -1.86697928E-08,
        "rotY": 255.000366,
        "rotZ": -4.717558E-08,
        "scaleX": 3.07883453,
        "scaleY": 0.182793334,
        "scaleZ": 3.11228752
      },
      "Nickname": "Bayou Scheme Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "4b8e79",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0229724534,
            "posY": 1.56217368E-08,
            "posZ": 0.0193177778,
            "rotX": 2.33718242E-06,
            "rotY": 285.0,
            "rotZ": -3.76737512E-06,
            "scaleX": 0.2938773,
            "scaleY": 4.999993,
            "scaleZ": 0.2966406
          },
          "Nickname": "Bayou Scheme Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1009312139319047447/2B8FEF1423802F4FDF9C8DA6129084A653288B37/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.2,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "edf269",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -16.791687,
        "posY": 1.05139136,
        "posZ": 15.9252129,
        "rotX": 5.48133E-08,
        "rotY": 255.000031,
        "rotZ": -2.571281E-08,
        "scaleX": 3.07866025,
        "scaleY": 0.182782829,
        "scaleZ": 3.10823274
      },
      "Nickname": "Arcanist Scheme Markers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ChildObjects": [
        {
          "GUID": "95eddd",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.012621589,
            "posY": -9.783035E-09,
            "posZ": 0.0220806841,
            "rotX": -5.815083E-07,
            "rotY": 285.0,
            "rotZ": -2.67966448E-06,
            "scaleX": 0.294219,
            "scaleY": 4.999993,
            "scaleZ": 0.296664923
          },
          "Nickname": "Arcanist Scheme Marker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1009312139319045690/7395073DA4CD2DF1E58090204480851D68848244/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.2,
              "MergeDistancePixels": 15.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "b5a89f",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -26.133976,
        "posY": 0.965,
        "posZ": -14.3878651,
        "rotX": -1.17328145E-05,
        "rotY": 179.999329,
        "rotZ": 8.889776E-06,
        "scaleX": 0.0,
        "scaleY": 1.0,
        "scaleZ": 0.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": false,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": false
      },
      "LuaScript": "            local lastParent = nil\n            function onLoad() \n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\n            Wait.condition(\n            function() \n            (self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \n            end, \n            function() \n            return not(self.loading_custom) \n            end\n            ) \n            end \n            function onUpdate() \n            if (parent ~= nil) then \n            if (not parent.resting or lastParent ~= parent) then \n            lastParent = parent\n            self.setPosition(parent.getPosition())\n            self.setRotation(parent.getRotation()) \n            end \n            else \n            self.destruct() \n            end \n            end\n            ",
      "LuaScriptState": "",
      "XmlUI": "",
      "PhysicsMaterial": {
        "StaticFriction": 1.0,
        "DynamicFriction": 0.7,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 0.0,
        "Drag": 0.0,
        "AngularDrag": 0.1,
        "UseGravity": false
      }
    }
  ]
}