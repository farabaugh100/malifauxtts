{
  "SaveName": "Tokens",
  "EpochTime": 1745138803,
  "Date": "4/20/2025 4:46:43 AM",
  "VersionNumber": "v13.3",
  "GameMode": "Cards",
  "GameType": "Game",
  "GameComplexity": "Low Complexity",
  "PlayingTime": [
    0,
    0
  ],
  "PlayerCounts": [
    2,
    2
  ],
  "Tags": [
    "Role-playing Games",
    "Strategy Games",
    "Miniature Games",
    "Card Games",
    "Wargames",
    "Cards",
    "Components",
    "Figurines",
    "Rules",
    "Scripting",
    "English"
  ],
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Table": "Table_RPG",
  "Sky": "Sky_Forest",
  "SkyURL": "https://steamusercontent-a.akamaihd.net/ugc/1014943256936089848/FBFD82B237D4301A3C4701A0D50DF6D23D61D2E5/",
  "Note": "----------------   CREW RETRIEVER   --------------\nPASTE the text created by the crew app on the WHITE CARD \"description\" \nconextMenu - > click last text box option\nCTRL+A -> CTRL+V  -> close\nCLICK the button.\n\n------------------  CONDITIONS   -----------------\nCLICK AROUND the health bar\n (mostly invisible when off) \nCLICK and RIGHT CLICK to change Value\nHEALTH / AURA  behave the same\n\n----------------   MOVE MODEL   -----------------\nHOVER model and use 1-9 to start a 1-9Â¨ Move  use '0' for a Limitless Move\nCLICK to set waypoints\nDOUBLE CLICK to confirm\nRIGHT CLICK to remove waypoint or abort\n\n----------------   EXTRA MODELS   ---------------\nIf you need some extra reference card get it from the side boxes grouped by faction\nheavy image download expected",
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "MusicPlayer": {
    "RepeatSong": true,
    "PlaylistEntry": 1,
    "CurrentAudioTitle": "Beware the Forest Mushrooms - Yoko Shimomura",
    "CurrentAudioURL": "https://steamusercontent-a.akamaihd.net/ugc/779618751110679052/8BDB62372022408D9E5B5DD5B69E86BB43D46F49/",
    "AudioLibrary": []
  },
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0
  },
  "ComponentTags": {
    "labels": [
      {
        "displayed": "blue_discard",
        "normalized": "blue_discard"
      },
      {
        "displayed": "red_discard",
        "normalized": "red_discard"
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "DecalPallet": [],
  "LuaScript": "--[[ Lua code. See documentation: https://api.tabletopsimulator.com/ --]]\n\n--[[ The onLoad event is called after the game save finishes loading. --]]\nfunction onLoad()\n    --[[ print('onLoad!') --]]\nend\n\n--[[ The onUpdate event is called once per frame. --]]\nfunction onUpdate()\n    --[[ print('onUpdate loop!') --]]\nend",
  "LuaScriptState": "",
  "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->",
  "ObjectStates": [
    {
      "GUID": "3ea749",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "posX": -0.47148633,
        "posY": 1.00753045,
        "posZ": 9.561774,
        "rotX": -7.008997E-07,
        "rotY": 180.118774,
        "rotZ": 3.62796584E-07,
        "scaleX": 7.897566,
        "scaleY": 7.21041,
        "scaleZ": 7.72229671
      },
      "Nickname": "Special Tokens",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.9921611,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 0,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/938308817305239501/02DEE4008F9EDDB7690EF61C2A12676BCB7CB71A/",
        "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/938308817305239628/22B84A6BF1CECB13E70D1C931F12B6EDC6E8F875/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 0.8745098,
            "g": 0.8117647,
            "b": 0.745098054
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "Bag": {
        "Order": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b2a137",
      "Name": "Custom_Token",
      "Transform": {
        "posX": -26.41604,
        "posY": 1.00999987,
        "posZ": -14.4949017,
        "rotX": -4.06889626E-07,
        "rotY": 180.021118,
        "rotZ": 1.72022965E-06,
        "scaleX": 0.323614359,
        "scaleY": 1.0,
        "scaleZ": 0.323614359
      },
      "Nickname": "BaseToken",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424705526/42BDDA9DA6783B30F0A81D1A68149038A714DBC6/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 5.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
      "LuaScriptState": ""
    },
    {
      "GUID": "33c3b0",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -15.1107731,
        "posY": 4.81034231,
        "posZ": -20.1076221,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7719851,
        "scaleY": 9.174497,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d6b8b4",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.2150211,
        "posY": 4.81034231,
        "posZ": 10.17524,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 11.6554289,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "911341",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 30.2511711,
        "posY": 4.81034231,
        "posZ": 9.59069252,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 11.6554213,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Purple",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2a2001",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 15.4749184,
        "posY": 4.81034231,
        "posZ": 19.8365288,
        "rotX": 0.0,
        "rotY": 179.8,
        "rotZ": 0.0,
        "scaleX": 11.7719746,
        "scaleY": 9.174497,
        "scaleZ": 4.87124
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ab497d",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 15.1961212,
        "posY": 4.81034231,
        "posZ": -20.1400986,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7719707,
        "scaleY": 9.174499,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "White",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "367320",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -15.1927719,
        "posY": 4.81034231,
        "posZ": 19.787817,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 11.7719707,
        "scaleY": 9.174497,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "65ef1c",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 30.1035728,
        "posY": 4.81034231,
        "posZ": -8.449126,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 11.6554184,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.96,
        "g": 0.438999981,
        "b": 0.807,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Pink",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "0ac07f",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.247818,
        "posY": 4.81034231,
        "posZ": -8.822588,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 11.6554317,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Orange",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d84712",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.1864033,
        "posY": 1.03220642,
        "posZ": -11.4048147,
        "rotX": -9.994002E-08,
        "rotY": 180.019287,
        "rotZ": -2.13312589E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "BaseTokenBag",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 2,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ChildObjects": [
        {
          "GUID": "9d730a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00542924134,
            "posY": -7.30157357E-09,
            "posZ": 0.00434298953,
            "rotX": 4.52627341E-26,
            "rotY": 2.60551043E-11,
            "rotZ": -1.9906761E-13,
            "scaleX": 0.279260635,
            "scaleY": 10.00001,
            "scaleZ": 0.28807953
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424705526/42BDDA9DA6783B30F0A81D1A68149038A714DBC6/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Hasted\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554369193/9FC768C81E9EF00BB41E7FBAB40F58CE474A71A4/\", color=\"#FFffff\", stacks=false\r\n}\r\n\r\nfunction onCollisionEnter(col)\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\n",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "ab02d2",
      "Name": "Checker_white",
      "Transform": {
        "posX": 24.2393932,
        "posY": 1.21048343,
        "posZ": 15.9162722,
        "rotX": 2.592735E-07,
        "rotY": 0.00155851152,
        "rotZ": 180.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "The Libeary",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "local generalLibeary={\r\n    Adaptable={\r\n        name=\"Adaptable\";\r\n        rules=\"Before performing a duel, this model may remove this token to add a suit of its choice to its duel total.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424848996/D551096CA632BAAFB6463163006306B238B08E6C/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Adversary={\r\n        name=\"Adversary\";\r\n        rules=\"Friendly models receive a + to attack actions targeting this model. During the end phase, remove this token.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\";\r\n        color=\"#DF2020\";\r\n    },\r\n    AuraConcealment={\r\n        name=\"Aura(Concealment)\";\r\n        rules=\"The area within 2\\\" of this model is concealing terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424977137/1552D31690379EFEC945C0FF0CE85569BD74B3F2/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    AuraHazardous={\r\n        name=\"Aura(Hazardous)\";\r\n        rules=\"The area within 2\\\" of this model is hazardous terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424981231/12D4FE1B392367DAAFBB49533FE4E651CF035480/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Bolstered={\r\n        name=\"Bolstered\";\r\n        rules=\"This model receives +1 to its Df and Wp. During the end phase, remove this token. Canceled by Injured.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424992405/7D6A47E471482DC1AD39E943EEF1898FC5BA3B96/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Burning={\r\n        name=\"Burning\";\r\n        rules=\"At the end of the turn, deal 1 damage to this model and enemy models in base contact with it. Then remove this token\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554318009/A00031DC30FDC7D6EB7AEA3DFCF8AAD0754CD4CB/\";\r\n        color=\"#DB8E47\";\r\n    },\r\n    Craven={\r\n        name=\"Craven\";\r\n        rules=\"This model cannot declare the Interact action and is ignored for its crewâs strategies and schemes. At the end of this modelâs activation, remove this token.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424992470/3C9C3A7DADB2F3ADE3F65C78ABEC8C022A949FD7/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Distracted={\r\n        name=\"Distracted\";\r\n        rules=\"When this model targets an enemy model, it must remove this token and suffer a - to that actionâs duel. Canceled by Focused.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554407310/DA85F94D429B073CEB18B2AB4F24FC0041F1CF30/\";\r\n        color=\"#FF42CF\";\r\n    },\r\n    Entranced={\r\n        name=\"Entranced\";\r\n        rules=\"This modelâs actions that target an enemy model cannot be cheated. After this model resolves an action targeting an enemy model, remove this token.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424992526/979B1FDFA5C5E66D65B9430C894EF7D1037CACDF/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Fast={\r\n        name=\"Fast\";\r\n        rules=\"Increase this modelâs action limit by 1 (to a maximum of 3). When this model ends its activation, remove this token. Canceled by Slow.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554385209/698B13597E185E6ACA0AB19C13A118A3C1BEEB4D/\";\r\n        color=\"#E2D064\";\r\n    },\r\n    Focused={\r\n        name=\"Focused\";\r\n        rules=\"Before performing a duel, this model may remove this token to receive a + to the duel. Canceled by Distracted.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554725833/7B52C3AD5915BFC06B7E68025F5448C2862E0789/\";\r\n        color=\"#9A37D3\";\r\n    },\r\n    Hastened={\r\n        name=\"Hastened\";\r\n        rules=\"This model gains +2 Sp and cannot be moved by enemy models. When this model ends its activation, remove this token. Canceled by Staggered.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424992579/9FAE4134ABE23FC7BF825B9A0CD465848309C298/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Impact={\r\n        name=\"Impact\";\r\n        rules=\"When this model succeeds in an attack action that deals damage, it must remove this token to deal +1 damage.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424992619/F7CCDBFC67AC5A118A99785AAE8AD645ED9554DA/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Injured={\r\n        name=\"Injured\";\r\n        rules=\"This model suffers -1 to its Df and Wp. During the end phase, remove this token. Canceled by Bolstered.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554292969/5474B842DEC8F08CB249F3B24683FE95D58332FC/\";\r\n        color=\"#920606\";\r\n    },\r\n    Insight={\r\n        name=\"Insight\";\r\n        rules=\"Before performing a duel, this model may remove this token to look at the top card of its fate deck and may discard it.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424992665/4FC08ADC9E2EE47293FA7EFE23CB9F0E812803B3/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Poison={\r\n        name=\"Poison\";\r\n        rules=\"At the end of the turn, deal 1 irreducible damage to this model.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554095214/37B3943D3C71EE6BFD13027145BDE00D0D56ED3B/\";\r\n        color=\"#83CD4D\";\r\n    },\r\n    Shielded={\r\n        name=\"Shielded\";\r\n        rules=\"When this model is dealt damage, it must remove this token to reduce that damage by 1. This token may reduce damage to 0.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554495459/45E41E4CF603049EEF4B3EAB39DC0B3DC93DFE78/\";\r\n        color=\"#6AC3FF\";\r\n    },\r\n    Slow={\r\n        name=\"Slow\";\r\n        rules=\"Reduce this modelâs action limit by 1 (to a minimum of 1). When this model ends its activation, remove this token. Canceled by Fast.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554366701/F479B20690BB037348F53B802F99B9B68ACFCCEA/\";\r\n        color=\"#B8B8B8\";\r\n    },\r\n    Staggered={\r\n        name=\"Staggered\";\r\n        rules=\"This model suffers -2 Sp and cannot be moved by other enemy models. When this model ends its activation, remove this token. Canceled by Hastened.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554150868/60F4FB8B23A6586775CB50311E1F7DD6BC0C1620/\";\r\n        color=\"#138C01\";\r\n    },\r\n    Stunned={\r\n        name=\"Stunned\";\r\n        rules=\"This model cannot declare triggers and it counts all signature symbols on its card as blank. When this model ends its activation, remove this token.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554191671/98EB8191C3884783E74F6FF8066097D2D7296CBF/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Summon={\r\n        name=\"Summon\";\r\n        rules=\"This model may not declare the Interact action. This model does not infuse a soutstones for its crew when it is killed. This token cannot be removed.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381424992707/BBCA04665101CE5DB9CF17ECE595CEB748011936/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\nlocal specialTokenLibeary={\r\n    Flicker={\r\n        name=\"Flicker\";\r\n        master=\"Tara\";\r\n        rules=\"Kill this model at the end of the turn. This token cannot be removed.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381425485377/47981C7F783EC204A9C2810E8E523C12AF28BC0D/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n    Backtrack={\r\n        name=\"Backtrack\";\r\n        master=\"Tara\";\r\n        rules=\"When performing a duel, this model may remove this token before any player cheats fate. If it does so, all cards in the conflict are discarded without effect and the duel is performed again with the same modifiers. This token may not be used if there are any jokers in the conflict.\";\r\n        image=\"https://steamusercontent-a.akamaihd.net/ugc/55840381425485306/6A397A40AAC29F6B113F57EC1B0B7E5678601579/\";\r\n        color=\"#FFFFFF\";\r\n    },\r\n}\r\n\r\n\r\nfunction getGenearyLibeary()\r\n    return generalLibeary\r\nend\r\n\r\nfunction getSpecialLibeary()\r\n    return specialTokenLibeary\r\nend",
      "LuaScriptState": ""
    },
    {
      "GUID": "54e536",
      "Name": "Custom_Token",
      "Transform": {
        "posX": -20.562458,
        "posY": 3.67151546,
        "posZ": -19.869133,
        "rotX": 1.35593918E-08,
        "rotY": 179.995331,
        "rotZ": 1.352411E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Gen Tokens",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.454703748,
        "g": 0.438066572,
        "b": 0.438066572
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55835947070619352/6DCE9AE31487CDFE09BFEC3D14E57D0A385645CD/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "f_color = {0,0,0,95}\r\nlocal firstTokenPosition={ x=-17.905245,y= 1.01,z=-7.013737}\r\nlocal firstBagPosition= { x=4.954772, y=1.01, z=-16.97987 }\r\nlocal objectLib={\r\n    libeary=\"ab02d2\";\r\n    baseToken=\"b2a137\";\r\n    baseBag=\"d84712\";\r\n    specialTokenBag=\"3ea749\";\r\n}\r\nlocal tokenLib={}\r\nlocal bagLib={}\r\nlocal waitBase=1\r\nfunction onLoad(save_state)\r\n    self.createButton({\r\n        label=\"\",\r\n        click_function=\"genTokens\",\r\n        tooltip=\"Gen Tokens\",\r\n        function_owner=self,\r\n        position={0,0.11,0},\r\n        height=600,\r\n        width=1000,\r\n        alignment = 3,\r\n        scale={x=1.5, y=1.5, z=1.5},\r\n        font_size=300,\r\n        font_color=f_color,\r\n        color={0,0,0,0}\r\n        })\r\nend\r\n\r\nfunction genTokens(_obj, _color, alt_click)\r\n    --print(getObjectFromGUID(objectLib.baseToken).getPosition())\r\n    --return true\r\n    \r\n    local libeary=getObjectFromGUID(objectLib.libeary)\r\n    local generalTokens=libeary.call(\"getGenearyLibeary\")\r\n    local wait=waitBase\r\n    local slot=1\r\n    for key,token in pairs(generalTokens) do\r\n\r\n\r\n        Wait.frames(function() createToken(token,slot) end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() createBag(token,slot) slot=slot+1 end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() joinBag(token) end,wait)\r\n        wait=wait+waitBase\r\n        --return false\r\n\r\n    end\r\n    local specialTokesn=libeary.call(\"getSpecialLibeary\")\r\n    for key,token in pairs(specialTokesn) do\r\n\r\n\r\n        Wait.frames(function() createToken(token,slot) end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() createBag(token,slot) slot=slot+1 end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() joinBag(token) end,wait)\r\n        wait=wait+waitBase\r\n        Wait.frames(function() moveSpecialTokensToBag(token) end,wait+120)\r\n        wait=wait+waitBase\r\n        --return false\r\n\r\n    end\r\nend\r\n\r\nfunction createToken(token,slot)\r\n    local pos=getTokenSlotPosition(slot)\r\n    local newToken=getObjectFromGUID(objectLib.baseToken).clone({position=pos})\r\n    Wait.frames(function() newToken.call(\"setConfig\",token) end,1)\r\n    tokenLib[token.name]=newToken.getGUID()\r\nend\r\n\r\nfunction createBag(token,slot)\r\n    local pos=getTokenSlotPosition(slot)\r\n    local newBag=getObjectFromGUID(objectLib.baseBag).clone({position=pos})\r\n    Wait.frames(function() newBag.call(\"setConfig\",token) end,1)\r\n    bagLib[token.name]=newBag.getGUID()\r\nend\r\n\r\nfunction getTokenSlotPosition(slot)\r\n    local row = 0\r\n    local targetPos = slot\r\n    while targetPos >= 7.5 do\r\n        row = row + 1\r\n        targetPos = targetPos - 7\r\n    end\r\n    \r\n    return Vector( firstTokenPosition.x+ row * 2,firstTokenPosition.y  ,firstTokenPosition.z - ((targetPos) * ( 1.5)))\r\nend\r\n\r\n\r\nfunction getBagSlotPosition(slot)\r\n    local row = 0\r\n    local targetPos = slot\r\n    while targetPos >= 7.5 do\r\n        row = row + 1\r\n        targetPos = targetPos - 7\r\n    end\r\n    \r\n    return Vector( firstBagPosition.x+ row * 2,firstBagPosition.y  ,firstBagPosition.z - ((targetPos) * ( 2)))\r\nend\r\n\r\nfunction moveTokenToBag(token,bag)\r\n    token.setPosition(bag.getPosition())\r\nend\r\n\r\nfunction joinBag(token)\r\n    local bag=getObjectFromGUID(bagLib[token.name])\r\n    local newToken=getObjectFromGUID(tokenLib[token.name])\r\n    bag.setPosition(newToken.getPosition())\r\n    bag.destroyAttachments()\r\n    bag.addAttachment(newToken)\r\n    newToken.clone({position=bag.getPosition()})\r\n    --bag.setPosition(getObjectFromGUID(objectLib.specialTokenBag).getPosition():add(Vector(0,10,0)))\r\nend\r\n\r\nfunction moveSpecialTokensToBag(token)\r\n    local bag=getObjectFromGUID(bagLib[token.name])\r\n    getObjectFromGUID(objectLib.specialTokenBag).putObject(bag)\r\nend",
      "LuaScriptState": ""
    },
    {
      "GUID": "19b323",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 7.92575359,
        "posY": 1.05091584,
        "posZ": 14.7582722,
        "rotX": 6.033129E-08,
        "rotY": 180.0084,
        "rotZ": -1.30283382E-07,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Chi",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "21394b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 7.050466,
            "posY": 1.23316574,
            "posZ": 1.4186275,
            "rotX": -0.00318979844,
            "rotY": 104.9915,
            "rotZ": 179.997437,
            "scaleX": 0.1931986,
            "scaleY": 1.0,
            "scaleZ": 0.1931986
          },
          "Nickname": "Chi token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841258945/5380E0365541B8A6F21A62E815070EDA30A136B9/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": true
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841258945/5380E0365541B8A6F21A62E815070EDA30A136B9/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "63f6ef",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 11.5532951,
        "posY": 1.05091584,
        "posZ": 15.4771166,
        "rotX": 1.32205031E-07,
        "rotY": 180.008331,
        "rotZ": 4.58794062E-07,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Brilliance",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "439fe1",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 5.075126,
            "posY": 1.2338357,
            "posZ": -0.578830659,
            "rotX": -0.000346573332,
            "rotY": 224.991425,
            "rotZ": 0.000130273183,
            "scaleX": 0.145035,
            "scaleY": 1.0,
            "scaleZ": 0.145035
          },
          "Nickname": "Brilliance token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841157277/DE054CDD03A9F568BDE96D362D069EACDB289753/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841157277/DE054CDD03A9F568BDE96D362D069EACDB289753/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "481b4e",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 14.8430519,
        "posY": 1.05091584,
        "posZ": 16.0728264,
        "rotX": -3.23525029E-08,
        "rotY": 180.008377,
        "rotZ": 1.44257385E-07,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Blight",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "b934b0",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 6.43913555,
            "posY": 1.23382092,
            "posZ": 1.027151,
            "rotX": 6.871368E-05,
            "rotY": 29.9926376,
            "rotZ": 0.000130089466,
            "scaleX": 0.1931986,
            "scaleY": 1.0,
            "scaleZ": 0.1931986
          },
          "Nickname": "Blight token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841238145/558B8150590A5F23BC4DFD126F262B770CE4E5C1/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841238145/558B8150590A5F23BC4DFD126F262B770CE4E5C1/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "313afa",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 17.5325089,
        "posY": 1.05091584,
        "posZ": 16.3712788,
        "rotX": -2.46375436E-08,
        "rotY": 180.008392,
        "rotZ": -2.53327556E-07,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Glowy",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "c11640",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 7.488402,
            "posY": 1.23385668,
            "posZ": -0.283925325,
            "rotX": -9.574977E-06,
            "rotY": 224.992355,
            "rotZ": -0.000245853036,
            "scaleX": 0.1931986,
            "scaleY": 1.0,
            "scaleZ": 0.1931986
          },
          "Nickname": "Glowy token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841443577/18E82DD19FE6B05C5A02300324440A869D24EE4C/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": true
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841443577/18E82DD19FE6B05C5A02300324440A869D24EE4C/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "c14b66",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 20.9018021,
        "posY": 1.05091584,
        "posZ": 16.1283951,
        "rotX": 4.19165E-08,
        "rotY": 180.008392,
        "rotZ": 2.02089225E-07,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Power",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "8897fd",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 4.128093,
            "posY": 1.233805,
            "posZ": -1.15632117,
            "rotX": -0.0007936129,
            "rotY": 179.9951,
            "rotZ": -0.0007926331,
            "scaleX": 0.261525244,
            "scaleY": 1.0,
            "scaleZ": 0.261525244
          },
          "Nickname": "Power token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841461738/9CB37F8F5501A50956D415F7582E48BCBED0FF76/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": true
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841461738/9CB37F8F5501A50956D415F7582E48BCBED0FF76/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "7b1d6b",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 9.993198,
        "posY": 1.05091584,
        "posZ": 10.7754173,
        "rotX": 2.358071E-07,
        "rotY": 180.008347,
        "rotZ": 1.92503649E-08,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Explosive",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "6bb400",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 3.11644077,
            "posY": 1.23379862,
            "posZ": -0.641336858,
            "rotX": 0.00111936918,
            "rotY": 134.995026,
            "rotZ": -0.0029860728,
            "scaleX": 0.204067647,
            "scaleY": 1.0,
            "scaleZ": 0.204067647
          },
          "Nickname": "Explosive token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841397855/B311CDAB1CDDBB1FC8B169CE3EA6F280981217DC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": true
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841397855/B311CDAB1CDDBB1FC8B169CE3EA6F280981217DC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "f886e5",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 14.6353054,
        "posY": 1.05091584,
        "posZ": 11.7988186,
        "rotX": 2.5306818E-07,
        "rotY": 180.008347,
        "rotZ": 1.39741218E-07,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Adrenalin",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "ce46b8",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -7.099124,
            "posY": 1.23384261,
            "posZ": 3.37673163,
            "rotX": -0.00049806817,
            "rotY": 209.991943,
            "rotZ": 180.000275,
            "scaleX": 0.163082048,
            "scaleY": 1.0,
            "scaleZ": 0.163082048
          },
          "Nickname": "Adrenalin token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841222056/97A644778D0CA380B7DF6388CA98A0D70D1BA656/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841222056/97A644778D0CA380B7DF6388CA98A0D70D1BA656/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "a2b973",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 19.31158,
        "posY": 1.05091584,
        "posZ": 11.6845827,
        "rotX": -1.00543936E-07,
        "rotY": 180.008347,
        "rotZ": 3.15554267E-08,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Grow",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "72123b",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 2.4090693,
            "posY": 1.23385155,
            "posZ": -0.00432679057,
            "rotX": 7.879148E-05,
            "rotY": 344.998871,
            "rotZ": 180.0001,
            "scaleX": 0.434757948,
            "scaleY": 1.0,
            "scaleZ": 0.434757948
          },
          "Nickname": "Grow token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841451986/EF2192E87BF120EBE872646972ED334A703CA1FF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841451986/EF2192E87BF120EBE872646972ED334A703CA1FF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "ed0f9e",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 22.44532,
        "posY": 1.05091584,
        "posZ": 12.6162586,
        "rotX": 1.2437674E-07,
        "rotY": 180.008377,
        "rotZ": -3.364106E-08,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Fate",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "d38df5",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -5.76446629,
            "posY": 1.23384774,
            "posZ": -0.77417177,
            "rotX": 0.000107659951,
            "rotY": 194.992142,
            "rotZ": 179.9999,
            "scaleX": 0.434757948,
            "scaleY": 1.0,
            "scaleZ": 0.434757948
          },
          "Nickname": "Fate token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841419577/1C7F43C4A149354168EDA3A1629656F79C06AC12/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": true
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841419577/1C7F43C4A149354168EDA3A1629656F79C06AC12/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "7adf4e",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": 25.7466469,
        "posY": 1.05091584,
        "posZ": 12.1892548,
        "rotX": -1.33123933E-07,
        "rotY": 180.008347,
        "rotZ": -5.552879E-08,
        "scaleX": 2.404126,
        "scaleY": 0.181831911,
        "scaleZ": 2.41357017
      },
      "Nickname": "Base",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "3c4443",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -4.71663857,
            "posY": 1.23383033,
            "posZ": -0.0210533738,
            "rotX": 5.528232E-05,
            "rotY": 180.00737,
            "rotZ": 2.77150921E-05,
            "scaleX": 0.1931986,
            "scaleY": 1.0,
            "scaleZ": 0.1931986
          },
          "Nickname": "Flicker token",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841433162/E65B7D3932FBF5B9A5B691169E495E1037A047A9/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.154999688,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": true
            }
          },
          "LuaScript": "\r\n--[[\r\n    Created by Red Mushroom\r\n    http://steamcommunity.com/id/Red_Mush/\r\n    Version 1.0\r\n    MIT License\r\n]]\r\n\r\nlocal model = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5Uk9xZEhvb3BDMGc'\r\nlocal textures = {\r\n    Gold = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5X2VjMDBWYk1uTGs',\r\n    Silver = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5VDI3dE1KQzY0SU0',\r\n    Bronze = 'https://drive.google.com/uc?export=download&id=0By25Oeqlx8F5czhHYnZhenpCT2M'\r\n}\r\n\r\nlocal function getCurrentType(tbl)\r\n    for k,v in pairs(textures) do\r\n        if tbl.diffuse == v then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nlocal function getNextType(tbl)\r\n    local t = getCurrentType(tbl)\r\n    if t == 'Gold' then return 'Silver' end\r\n    if t == 'Silver' then return 'Bronze' end\r\n    if t == 'Bronze' then return 'Gold' end\r\n    return 'Gold'\r\nend\r\n\r\nfunction onObjectSpawn(obj)\r\n    local guid = obj.getDescription()\r\n    local parent = getObjectFromGUID(guid)\r\n    if parent then\r\n        obj.setDescription('')\r\n        parent.putObject(obj)\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, obj)\r\n    if container.getGUID() == self.getGUID() then\r\n        obj.setScale({x=1, y=1, z=1})\r\n\r\n        local customObj = obj.getCustomObject()\r\n        local nextType = getNextType(customObj)\r\n\r\n        -- spawn the next type\r\n        local child = spawnObject({\r\n            type = 'Custom_Model',\r\n            position = {x=0, y=-500, z=0},\r\n            rotation = {x=0, y=0, z=0},\r\n            scale = {x=0, y=0, z=0},\r\n            sound = false,\r\n        })\r\n        obj.setLuaScript(self.getLuaScript())\r\n        child.setLuaScript(self.getLuaScript())\r\n        child.setName(nextType .. ' Chest')\r\n        child.setDescription(obj.getGUID())\r\n\r\n        -- give it the next model\r\n        customObj.diffuse = textures[nextType]\r\n        child.setCustomObject(customObj)\r\n\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c74183",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -0.00259733223,
            "posY": 5.97845951E-09,
            "posZ": 6.47670628E-09,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 1.62095692E-13,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Base",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841433162/E65B7D3932FBF5B9A5B691169E495E1037A047A9/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    name=\"Adversary\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "24a2c0",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.5540333,
        "posY": 1.03220642,
        "posZ": 17.0970554,
        "rotX": -8.50702861E-07,
        "rotY": 180.0193,
        "rotZ": 1.81531959E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Adaptable",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "a9c29a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18119037,
            "posZ": -8.513737,
            "rotX": 0.000226226184,
            "rotY": 0.00182604429,
            "rotZ": -0.000398292177,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Adaptable",
          "Description": "Before performing a duel, this model may remove this token to add a suit of its choice to its duel total.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424848996/D551096CA632BAAFB6463163006306B238B08E6C/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "a9c29a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Adaptable",
          "Description": "Before performing a duel, this model may remove this token to add a suit of its choice to its duel total.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424848996/D551096CA632BAAFB6463163006306B238B08E6C/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "ab044a",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.5540085,
        "posY": 1.03220642,
        "posZ": 15.5970564,
        "rotX": 2.40870531E-06,
        "rotY": 180.0193,
        "rotZ": -2.1199666E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Adversary",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "4ecc00",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18118489,
            "posZ": -10.0137367,
            "rotX": 0.000119855184,
            "rotY": 0.00182467559,
            "rotZ": -0.000458778959,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Adversary",
          "Description": "Friendly models receive a + to attack actions targeting this model. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.8745098,
            "g": 0.1254901,
            "b": 0.1254901
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "4ecc00",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Adversary",
          "Description": "Friendly models receive a + to attack actions targeting this model. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.8745098,
            "g": 0.125490129,
            "b": 0.125490129
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "3f723d",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.5540161,
        "posY": 1.0322063,
        "posZ": 14.0970554,
        "rotX": 8.43037355E-07,
        "rotY": 180.019287,
        "rotZ": 1.43086777E-06,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Aura(Concealment)",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "6bf25e",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18118989,
            "posZ": -11.5137367,
            "rotX": 0.000193805361,
            "rotY": 0.00182608829,
            "rotZ": -0.000107410538,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Aura(Concealment)",
          "Description": "The area within 2\" of this model is concealing terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424977137/1552D31690379EFEC945C0FF0CE85569BD74B3F2/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "6bf25e",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Aura(Concealment)",
          "Description": "The area within 2\" of this model is concealing terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424977137/1552D31690379EFEC945C0FF0CE85569BD74B3F2/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "4d8f1f",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.5540276,
        "posY": 1.0322063,
        "posZ": 12.5970535,
        "rotX": -2.23116217E-06,
        "rotY": 180.0193,
        "rotZ": 4.588922E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Aura(Hazardous)",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "429949",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18118632,
            "posZ": -13.0137367,
            "rotX": -2.50021585E-05,
            "rotY": 0.0018254231,
            "rotZ": -0.000410481531,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Aura(Hazardous)",
          "Description": "The area within 2\" of this model is hazardous terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424981231/12D4FE1B392367DAAFBB49533FE4E651CF035480/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "429949",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Aura(Hazardous)",
          "Description": "The area within 2\" of this model is hazardous terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424981231/12D4FE1B392367DAAFBB49533FE4E651CF035480/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "e296d9",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.5539818,
        "posY": 1.03220642,
        "posZ": 11.0970011,
        "rotX": 1.04560809E-06,
        "rotY": 180.019272,
        "rotZ": -1.25416057E-06,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Bolstered",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "0dbd0a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18118465,
            "posZ": -14.5137367,
            "rotX": 0.000217178691,
            "rotY": 0.00182458328,
            "rotZ": -0.000513127947,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Bolstered",
          "Description": "This model receives +1 to its Df and Wp. During the end phase, remove this token. Canceled by Injured.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992405/7D6A47E471482DC1AD39E943EEF1898FC5BA3B96/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "0dbd0a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Bolstered",
          "Description": "This model receives +1 to its Df and Wp. During the end phase, remove this token. Canceled by Injured.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992405/7D6A47E471482DC1AD39E943EEF1898FC5BA3B96/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "8fddba",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.5540333,
        "posY": 1.03220642,
        "posZ": 9.597053,
        "rotX": 7.809728E-07,
        "rotY": 180.019287,
        "rotZ": -8.752077E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Burning",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "812869",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.1811893,
            "posZ": -16.0137367,
            "rotX": 0.000425714126,
            "rotY": 0.00182522659,
            "rotZ": -0.000410029315,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Burning",
          "Description": "At the end of the turn, deal 1 damage to this model and enemy models in base contact with it. Then remove this token",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.858823538,
            "g": 0.5568628,
            "b": 0.2784313
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554318009/A00031DC30FDC7D6EB7AEA3DFCF8AAD0754CD4CB/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "812869",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Burning",
          "Description": "At the end of the turn, deal 1 damage to this model and enemy models in base contact with it. Then remove this token",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.858823538,
            "g": 0.5568628,
            "b": 0.278431326
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554318009/A00031DC30FDC7D6EB7AEA3DFCF8AAD0754CD4CB/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "456c94",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -26.5539932,
        "posY": 1.03220642,
        "posZ": 8.097059,
        "rotX": 2.20773131E-06,
        "rotY": 180.019287,
        "rotZ": 2.66158622E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Craven",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "d728b6",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18118811,
            "posZ": -17.5137367,
            "rotX": 0.000108142769,
            "rotY": 0.00182534615,
            "rotZ": -0.00027035622,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Craven",
          "Description": "This model cannot declare the Interact action and is ignored for its crewâs strategies and schemes. At the end of this modelâs activation, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992470/3C9C3A7DADB2F3ADE3F65C78ABEC8C022A949FD7/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "d728b6",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Craven",
          "Description": "This model cannot declare the Interact action and is ignored for its crewâs strategies and schemes. At the end of this modelâs activation, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992470/3C9C3A7DADB2F3ADE3F65C78ABEC8C022A949FD7/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "d210d1",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.5540123,
        "posY": 1.03220642,
        "posZ": 17.09706,
        "rotX": -2.25802933E-06,
        "rotY": 180.0193,
        "rotZ": -3.88708941E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Distracted",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "31abd0",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18118179,
            "posZ": -8.513737,
            "rotX": 0.0009420772,
            "rotY": 0.00182265858,
            "rotZ": -0.000390416739,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Distracted",
          "Description": "When this model targets an enemy model, it must remove this token and suffer a - to that actionâs duel. Canceled by Focused.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 0.258823454,
            "b": 0.8117647
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554407310/DA85F94D429B073CEB18B2AB4F24FC0041F1CF30/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "31abd0",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Distracted",
          "Description": "When this model targets an enemy model, it must remove this token and suffer a - to that actionâs duel. Canceled by Focused.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 0.258823484,
            "b": 0.8117647
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554407310/DA85F94D429B073CEB18B2AB4F24FC0041F1CF30/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "5b96e6",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.5539932,
        "posY": 1.03220642,
        "posZ": 15.59706,
        "rotX": 2.369444E-06,
        "rotY": 180.019272,
        "rotZ": -6.884716E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Entranced",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "fbe4cf",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.181191,
            "posZ": -10.0137367,
            "rotX": -1.882024E-08,
            "rotY": 0.001826332,
            "rotZ": -0.000459245231,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Entranced",
          "Description": "This modelâs actions that target an enemy model cannot be cheated. After this model resolves an action targeting an enemy model, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992526/979B1FDFA5C5E66D65B9430C894EF7D1037CACDF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "fbe4cf",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Entranced",
          "Description": "This modelâs actions that target an enemy model cannot be cheated. After this model resolves an action targeting an enemy model, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992526/979B1FDFA5C5E66D65B9430C894EF7D1037CACDF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "27ae19",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.5539932,
        "posY": 1.03220642,
        "posZ": 14.0970592,
        "rotX": -1.14964848E-06,
        "rotY": 180.0193,
        "rotZ": -8.084485E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Fast",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "0d88ad",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18118417,
            "posZ": -11.5137367,
            "rotX": -0.000386514,
            "rotY": 0.00182196172,
            "rotZ": -0.000149565763,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Fast",
          "Description": "Increase this modelâs action limit by 1 (to a maximum of 3). When this model ends its activation, remove this token. Canceled by Slow.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.8862745,
            "g": 0.8156863,
            "b": 0.39215678
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554385209/698B13597E185E6ACA0AB19C13A118A3C1BEEB4D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "0d88ad",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Fast",
          "Description": "Increase this modelâs action limit by 1 (to a maximum of 3). When this model ends its activation, remove this token. Canceled by Slow.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.8862745,
            "g": 0.8156863,
            "b": 0.3921568
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554385209/698B13597E185E6ACA0AB19C13A118A3C1BEEB4D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "ad9c1a",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.5539818,
        "posY": 1.03220642,
        "posZ": 12.5970011,
        "rotX": 2.11425868E-06,
        "rotY": 180.019257,
        "rotZ": 1.6602992E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Focused",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "c0af3c",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18118584,
            "posZ": -13.0137367,
            "rotX": -0.000265982962,
            "rotY": 0.00182504556,
            "rotZ": -0.0004642832,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Focused",
          "Description": "Before performing a duel, this model may remove this token to receive a + to the duel. Canceled by Distracted.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6039216,
            "g": 0.215686142,
            "b": 0.827451
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554725833/7B52C3AD5915BFC06B7E68025F5448C2862E0789/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c0af3c",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Focused",
          "Description": "Before performing a duel, this model may remove this token to receive a + to the duel. Canceled by Distracted.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6039216,
            "g": 0.215686172,
            "b": 0.827451
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554725833/7B52C3AD5915BFC06B7E68025F5448C2862E0789/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "38ca7d",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.5540123,
        "posY": 1.03220642,
        "posZ": 11.0970564,
        "rotX": -1.34318032E-06,
        "rotY": 180.0193,
        "rotZ": -1.142596E-06,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Hastened",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "f12212",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18118489,
            "posZ": -14.5137367,
            "rotX": 0.000222152361,
            "rotY": 0.00182463019,
            "rotZ": -0.000452640728,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Hastened",
          "Description": "This model gains +2 Sp and cannot be moved by enemy models. When this model ends its activation, remove this token. Canceled by Staggered.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992579/9FAE4134ABE23FC7BF825B9A0CD465848309C298/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "f12212",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Hastened",
          "Description": "This model gains +2 Sp and cannot be moved by enemy models. When this model ends its activation, remove this token. Canceled by Staggered.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992579/9FAE4134ABE23FC7BF825B9A0CD465848309C298/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "6d8a6a",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.5539932,
        "posY": 1.03220642,
        "posZ": 9.597059,
        "rotX": -9.626615E-07,
        "rotY": 180.019287,
        "rotZ": -1.3806864E-06,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Impact",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "d0958d",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.1811868,
            "posZ": -16.0137367,
            "rotX": 0.000220472561,
            "rotY": 0.00182505208,
            "rotZ": -0.000384009531,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Impact",
          "Description": "When this model succeeds in an attack action that deals damage, it must remove this token to deal +1 damage.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992619/F7CCDBFC67AC5A118A99785AAE8AD645ED9554DA/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "d0958d",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Impact",
          "Description": "When this model succeeds in an attack action that deals damage, it must remove this token to deal +1 damage.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992619/F7CCDBFC67AC5A118A99785AAE8AD645ED9554DA/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "a9a0b3",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -24.5539818,
        "posY": 1.03220642,
        "posZ": 8.097001,
        "rotX": -9.600715E-07,
        "rotY": 180.019287,
        "rotZ": 3.760379E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Injured",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "749067",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18118286,
            "posZ": -17.5137367,
            "rotX": 0.0007057666,
            "rotY": 0.00182174949,
            "rotZ": -0.0005501416,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Injured",
          "Description": "This model suffers -1 to its Df and Wp. During the end phase, remove this token. Canceled by Bolstered.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.572549045,
            "g": 0.0235294122,
            "b": 0.0235294122
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554292969/5474B842DEC8F08CB249F3B24683FE95D58332FC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "749067",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Injured",
          "Description": "This model suffers -1 to its Df and Wp. During the end phase, remove this token. Canceled by Bolstered.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.572549045,
            "g": 0.0235294122,
            "b": 0.0235294122
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554292969/5474B842DEC8F08CB249F3B24683FE95D58332FC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "f2a2a5",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.5539932,
        "posY": 1.03220642,
        "posZ": 17.0970631,
        "rotX": -1.453044E-06,
        "rotY": 180.0193,
        "rotZ": -7.06733431E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Insight",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "93a44c",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18118632,
            "posZ": -8.513737,
            "rotX": -0.000236713546,
            "rotY": 0.001825002,
            "rotZ": -0.000393185,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Insight",
          "Description": "Before performing a duel, this model may remove this token to look at the top card of its fate deck and may discard it.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992665/4FC08ADC9E2EE47293FA7EFE23CB9F0E812803B3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "93a44c",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Insight",
          "Description": "Before performing a duel, this model may remove this token to look at the top card of its fate deck and may discard it.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992665/4FC08ADC9E2EE47293FA7EFE23CB9F0E812803B3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "d41510",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.5540123,
        "posY": 1.03220642,
        "posZ": 15.5970564,
        "rotX": -1.89837669E-06,
        "rotY": 180.0193,
        "rotZ": -8.05528259E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Poison",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "948108",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18117809,
            "posZ": -10.0137367,
            "rotX": 0.0009038441,
            "rotY": 0.0018217644,
            "rotZ": -0.000441835524,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Poison",
          "Description": "At the end of the turn, deal 1 irreducible damage to this model.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.5137253,
            "g": 0.8039216,
            "b": 0.3019607
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554095214/37B3943D3C71EE6BFD13027145BDE00D0D56ED3B/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "948108",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Poison",
          "Description": "At the end of the turn, deal 1 irreducible damage to this model.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.51372534,
            "g": 0.8039216,
            "b": 0.301960737
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554095214/37B3943D3C71EE6BFD13027145BDE00D0D56ED3B/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "9c50e4",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.5540333,
        "posY": 1.03220642,
        "posZ": 14.0970526,
        "rotX": -1.69095119E-06,
        "rotY": 180.019287,
        "rotZ": -2.161522E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Shielded",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "4af206",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18118823,
            "posZ": -11.5137367,
            "rotX": -0.000311529933,
            "rotY": 0.00182523322,
            "rotZ": -7.198224E-05,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Shielded",
          "Description": "When this model is dealt damage, it must remove this token to reduce that damage by 1. This token may reduce damage to 0.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.4156862,
            "g": 0.7647059,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554495459/45E41E4CF603049EEF4B3EAB39DC0B3DC93DFE78/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "4af206",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Shielded",
          "Description": "When this model is dealt damage, it must remove this token to reduce that damage by 1. This token may reduce damage to 0.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.41568622,
            "g": 0.7647059,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554495459/45E41E4CF603049EEF4B3EAB39DC0B3DC93DFE78/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "d97402",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.5539646,
        "posY": 1.0322063,
        "posZ": 12.5970621,
        "rotX": -1.02928936E-06,
        "rotY": 180.019272,
        "rotZ": -6.030471E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Slow",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "154bef",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18118322,
            "posZ": -13.0137367,
            "rotX": 0.000431617023,
            "rotY": 0.00182301481,
            "rotZ": -0.0005787473,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Slow",
          "Description": "Reduce this modelâs action limit by 1 (to a minimum of 1). When this model ends its activation, remove this token. Canceled by Fast.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.721568644,
            "g": 0.721568644,
            "b": 0.721568644
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554366701/F479B20690BB037348F53B802F99B9B68ACFCCEA/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "154bef",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Slow",
          "Description": "Reduce this modelâs action limit by 1 (to a minimum of 1). When this model ends its activation, remove this token. Canceled by Fast.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.721568644,
            "g": 0.721568644,
            "b": 0.721568644
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554366701/F479B20690BB037348F53B802F99B9B68ACFCCEA/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "9e0987",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.5539646,
        "posY": 1.0322063,
        "posZ": 11.0970621,
        "rotX": -1.21359642E-06,
        "rotY": 180.0192,
        "rotZ": 6.26953238E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Staggered",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "123166",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18118525,
            "posZ": -14.5137367,
            "rotX": 0.000188254256,
            "rotY": 0.00182442239,
            "rotZ": -0.000153162691,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Staggered",
          "Description": "This model suffers -2 Sp and cannot be moved by other enemy models. When this model ends its activation, remove this token. Canceled by Hastened.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.07450976,
            "g": 0.5490196,
            "b": 0.003921569
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554150868/60F4FB8B23A6586775CB50311E1F7DD6BC0C1620/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "123166",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Staggered",
          "Description": "This model suffers -2 Sp and cannot be moved by other enemy models. When this model ends its activation, remove this token. Canceled by Hastened.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.07450978,
            "g": 0.5490196,
            "b": 0.003921569
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554150868/60F4FB8B23A6586775CB50311E1F7DD6BC0C1620/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "af448f",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.5540333,
        "posY": 1.03220642,
        "posZ": 9.597053,
        "rotX": -1.82973929E-06,
        "rotY": 180.019287,
        "rotZ": -4.21496537E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Stunned",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "a60600",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18119073,
            "posZ": -16.0137367,
            "rotX": 8.09356E-05,
            "rotY": 0.00182593812,
            "rotZ": -0.000318068342,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Stunned",
          "Description": "This model cannot declare triggers and it counts all signature symbols on its card as blank. When this model ends its activation, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554191671/98EB8191C3884783E74F6FF8066097D2D7296CBF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "a60600",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Stunned",
          "Description": "This model cannot declare triggers and it counts all signature symbols on its card as blank. When this model ends its activation, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554191671/98EB8191C3884783E74F6FF8066097D2D7296CBF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "f44acd",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -22.5540333,
        "posY": 1.03220642,
        "posZ": 8.097053,
        "rotX": 2.50540438E-07,
        "rotY": 180.019257,
        "rotZ": 1.19747369E-06,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Summon",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "1ff1a1",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18118548,
            "posZ": -17.5137367,
            "rotX": 0.000486235978,
            "rotY": 0.001824744,
            "rotZ": -0.0004924832,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Summon",
          "Description": "This model may not declare the Interact action. This model does not infuse a soutstones for its crew when it is killed. This token cannot be removed.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992707/BBCA04665101CE5DB9CF17ECE595CEB748011936/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "1ff1a1",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Summon",
          "Description": "This model may not declare the Interact action. This model does not infuse a soutstones for its crew when it is killed. This token cannot be removed.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381424992707/BBCA04665101CE5DB9CF17ECE595CEB748011936/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "6162c2",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -20.5540123,
        "posY": 1.03220642,
        "posZ": 17.09706,
        "rotX": 2.30534442E-06,
        "rotY": 180.0193,
        "rotZ": -1.970136E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Flicker",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "83e246",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -11.9052448,
            "posY": 1.18118751,
            "posZ": -8.513737,
            "rotX": 6.251715E-05,
            "rotY": 0.00182525953,
            "rotZ": -0.0005565866,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Flicker",
          "Description": "Kill this model at the end of the turn. This token cannot be removed.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381425485377/47981C7F783EC204A9C2810E8E523C12AF28BC0D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "83e246",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Flicker",
          "Description": "Kill this model at the end of the turn. This token cannot be removed.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381425485377/47981C7F783EC204A9C2810E8E523C12AF28BC0D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "e8b412",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -20.5540333,
        "posY": 1.03220642,
        "posZ": 15.5970526,
        "rotX": 1.02609283E-06,
        "rotY": 180.019287,
        "rotZ": 1.07405448E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Backtrack",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "GUID": "83e62a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -11.9052448,
            "posY": 1.18118978,
            "posZ": -10.0137367,
            "rotX": 0.000221661539,
            "rotY": 0.00182588608,
            "rotZ": -0.000320517225,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Backtrack",
          "Description": "When performing a duel, this model may remove this token before any player cheats fate. If it does so, all cards in the conflict are discarded without effect and the duel is performed again with the same modifiers. This token may not be used if there are any jokers in the conflict.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381425485306/6A397A40AAC29F6B113F57EC1B0B7E5678601579/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "83e62a",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -3.06956423E-07,
            "rotY": 0.00183049077,
            "rotZ": 1.93354549E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Backtrack",
          "Description": "When performing a duel, this model may remove this token before any player cheats fate. If it does so, all cards in the conflict are discarded without effect and the duel is performed again with the same modifiers. This token may not be used if there are any jokers in the conflict.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381425485306/6A397A40AAC29F6B113F57EC1B0B7E5678601579/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    }
  ]
}