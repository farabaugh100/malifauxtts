{
  "SaveName": "ModelAndStatCardPrototype",
  "EpochTime": 1745681620,
  "Date": "4/26/2025 11:33:40 AM",
  "VersionNumber": "v13.3",
  "GameMode": "Cards",
  "GameType": "Game",
  "GameComplexity": "Low Complexity",
  "PlayingTime": [
    0,
    0
  ],
  "PlayerCounts": [
    2,
    2
  ],
  "Tags": [
    "Role-playing Games",
    "Strategy Games",
    "Miniature Games",
    "Card Games",
    "Wargames",
    "Cards",
    "Components",
    "Figurines",
    "Rules",
    "Scripting",
    "English"
  ],
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Table": "Table_RPG",
  "Sky": "Sky_Forest",
  "SkyURL": "https://steamusercontent-a.akamaihd.net/ugc/1014943256936089848/FBFD82B237D4301A3C4701A0D50DF6D23D61D2E5/",
  "Note": "----------------   CREW RETRIEVER   --------------\nPASTE the text created by the crew app on the WHITE CARD \"description\" \nconextMenu - > click last text box option\nCTRL+A -> CTRL+V  -> close\nCLICK the button.\n\n------------------  CONDITIONS   -----------------\nCLICK AROUND the health bar\n (mostly invisible when off) \nCLICK and RIGHT CLICK to change Value\nHEALTH / AURA  behave the same\n\n----------------   MOVE MODEL   -----------------\nHOVER model and use 1-9 to start a 1-9Â¨ Move  use '0' for a Limitless Move\nCLICK to set waypoints\nDOUBLE CLICK to confirm\nRIGHT CLICK to remove waypoint or abort\n\n----------------   EXTRA MODELS   ---------------\nIf you need some extra reference card get it from the side boxes grouped by faction\nheavy image download expected",
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "MusicPlayer": {
    "RepeatSong": true,
    "PlaylistEntry": 1,
    "CurrentAudioTitle": "Beware the Forest Mushrooms - Yoko Shimomura",
    "CurrentAudioURL": "https://steamusercontent-a.akamaihd.net/ugc/779618751110679052/8BDB62372022408D9E5B5DD5B69E86BB43D46F49/",
    "AudioLibrary": []
  },
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0
  },
  "ComponentTags": {
    "labels": [
      {
        "displayed": "blue_discard",
        "normalized": "blue_discard"
      },
      {
        "displayed": "red_discard",
        "normalized": "red_discard"
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "DecalPallet": [],
  "LuaScript": "--[[ Lua code. See documentation: https://api.tabletopsimulator.com/ --]]\n\n--[[ The onLoad event is called after the game save finishes loading. --]]\nfunction onLoad()\n    --[[ print('onLoad!') --]]\nend\n\n--[[ The onUpdate event is called once per frame. --]]\nfunction onUpdate()\n    --[[ print('onUpdate loop!') --]]\nend",
  "LuaScriptState": "",
  "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->",
  "ObjectStates": [
    {
      "GUID": "33c3b0",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -15.1107731,
        "posY": 4.81034231,
        "posZ": -20.1076221,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7719851,
        "scaleY": 9.174497,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d6b8b4",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.2150211,
        "posY": 4.81034231,
        "posZ": 10.17524,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 11.6554289,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "911341",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 30.2511711,
        "posY": 4.81034231,
        "posZ": 9.59069252,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 11.6554213,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Purple",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2a2001",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 15.4749184,
        "posY": 4.81034231,
        "posZ": 19.8365288,
        "rotX": 0.0,
        "rotY": 179.8,
        "rotZ": 0.0,
        "scaleX": 11.7719746,
        "scaleY": 9.174497,
        "scaleZ": 4.87124
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ab497d",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 15.1961212,
        "posY": 4.81034231,
        "posZ": -20.1400986,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7719707,
        "scaleY": 9.174499,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "White",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "367320",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -15.1927719,
        "posY": 4.81034231,
        "posZ": 19.787817,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 11.7719707,
        "scaleY": 9.174497,
        "scaleZ": 4.871238
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "65ef1c",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 30.1035728,
        "posY": 4.81034231,
        "posZ": -8.449126,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 11.6554184,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.96,
        "g": 0.438999981,
        "b": 0.807,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Pink",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "0ac07f",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.247818,
        "posY": 4.81034231,
        "posZ": -8.822588,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 11.6554317,
        "scaleY": 9.174497,
        "scaleZ": 4.91995144
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Orange",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "a25214",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -15.4609365,
        "posY": 1.03220618,
        "posZ": -8.191027,
        "rotX": 2.999244E-07,
        "rotY": 180.019287,
        "rotZ": -3.097423E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Adaptable",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "50be7f",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18118763,
            "posZ": -8.513737,
            "rotX": 0.000194220833,
            "rotY": 0.00182577746,
            "rotZ": -0.0004371551,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Adaptable",
          "Description": "Before performing a duel, this model may remove this token to add a suit of its choice to its duel total.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418391028626/826E0ECCF3752137A1989CE47F8A7E1DF6FE4CCD/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418391028626/826E0ECCF3752137A1989CE47F8A7E1DF6FE4CCD/\",\"name\":\"Adaptable\",\"rules\":\"Before performing a duel, this model may remove this token to add a suit of its choice to its duel total.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "50be7f",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Adaptable",
          "Description": "Before performing a duel, this model may remove this token to add a suit of its choice to its duel total.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418391028626/826E0ECCF3752137A1989CE47F8A7E1DF6FE4CCD/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418391028626/826E0ECCF3752137A1989CE47F8A7E1DF6FE4CCD/\",\"name\":\"Adaptable\",\"rules\":\"Before performing a duel, this model may remove this token to add a suit of its choice to its duel total.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "7bce6a",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -15.4609365,
        "posY": 1.0322063,
        "posZ": -9.691027,
        "rotX": -8.66344E-08,
        "rotY": 180.019287,
        "rotZ": 7.032169E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Adversary",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "115522",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18118942,
            "posZ": -10.0137367,
            "rotX": 0.000282260269,
            "rotY": 0.00182626082,
            "rotZ": -0.000415392133,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Adversary",
          "Description": "Friendly models receive a + to attack actions targeting this model. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.8745098,
            "g": 0.1254901,
            "b": 0.1254901
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#DF2020\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\",\"name\":\"Adversary\",\"rules\":\"Friendly models receive a + to attack actions targeting this model. During the end phase, remove this token.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "115522",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Adversary",
          "Description": "Friendly models receive a + to attack actions targeting this model. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.8745098,
            "g": 0.125490129,
            "b": 0.125490129
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#DF2020\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\",\"name\":\"Adversary\",\"rules\":\"Friendly models receive a + to attack actions targeting this model. During the end phase, remove this token.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "94b01e",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -15.4609365,
        "posY": 1.03220618,
        "posZ": -11.1910267,
        "rotX": 2.7950216E-07,
        "rotY": 180.019287,
        "rotZ": -3.32449332E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Aura(Concealment)",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "c72e0e",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.181197,
            "posZ": -11.5137367,
            "rotX": -6.3368745E-05,
            "rotY": 0.00182832649,
            "rotZ": -0.0003764662,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Aura(Concealment)",
          "Description": "The area within 2\" of this model is concealing terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016162692558/0B7B096736227AADEC0CBC8081E95057A375C6E3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016162692558/0B7B096736227AADEC0CBC8081E95057A375C6E3/\",\"name\":\"Aura(Concealment)\",\"rules\":\"The area within 2\\\" of this model is concealing terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c72e0e",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Aura(Concealment)",
          "Description": "The area within 2\" of this model is concealing terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016162692558/0B7B096736227AADEC0CBC8081E95057A375C6E3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016162692558/0B7B096736227AADEC0CBC8081E95057A375C6E3/\",\"name\":\"Aura(Concealment)\",\"rules\":\"The area within 2\\\" of this model is concealing terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "bc7c0c",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -13.4609365,
        "posY": 1.0322063,
        "posZ": -8.191027,
        "rotX": -1.65094676E-07,
        "rotY": 180.019287,
        "rotZ": -1.82161244E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Distracted",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "7e12a5",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18118227,
            "posZ": -8.513737,
            "rotX": 0.0004495517,
            "rotY": 0.00182360527,
            "rotZ": -4.05013925E-05,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Distracted",
          "Description": "When this model targets an enemy model, it must remove this token and suffer a - to that actionâs duel. Canceled by Focused.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 0.258823454,
            "b": 0.8117647
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554407310/DA85F94D429B073CEB18B2AB4F24FC0041F1CF30/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FF42CF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554407310/DA85F94D429B073CEB18B2AB4F24FC0041F1CF30/\",\"name\":\"Distracted\",\"rules\":\"When this model targets an enemy model, it must remove this token and suffer a - to that action\\u003fs duel. Canceled by Focused.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "7e12a5",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Distracted",
          "Description": "When this model targets an enemy model, it must remove this token and suffer a - to that actionâs duel. Canceled by Focused.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 0.258823484,
            "b": 0.8117647
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554407310/DA85F94D429B073CEB18B2AB4F24FC0041F1CF30/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FF42CF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554407310/DA85F94D429B073CEB18B2AB4F24FC0041F1CF30/\",\"name\":\"Distracted\",\"rules\":\"When this model targets an enemy model, it must remove this token and suffer a - to that action\\u003fs duel. Canceled by Focused.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "22b704",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -13.4609365,
        "posY": 1.0322063,
        "posZ": -9.691027,
        "rotX": 1.70671356E-07,
        "rotY": 180.019287,
        "rotZ": -4.295289E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Entranced",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "11ff65",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18119562,
            "posZ": -10.0137367,
            "rotX": 7.86530654E-05,
            "rotY": 0.00182813953,
            "rotZ": -6.728703E-05,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Entranced",
          "Description": "This modelâs actions that target an enemy model cannot be cheated. After this model resolves an action targeting an enemy model, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.627451062,
            "g": 0.1254901,
            "b": 0.9411765
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300201/69E94F23A27A360B496D5AC6F814AE0D29C03D17/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#A020F0\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300201/69E94F23A27A360B496D5AC6F814AE0D29C03D17/\",\"name\":\"Entranced\",\"rules\":\"This model\\u003fs actions that target an enemy model cannot be cheated. After this model resolves an action targeting an enemy model, remove this token.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "11ff65",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Entranced",
          "Description": "This modelâs actions that target an enemy model cannot be cheated. After this model resolves an action targeting an enemy model, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.627451062,
            "g": 0.125490129,
            "b": 0.9411765
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300201/69E94F23A27A360B496D5AC6F814AE0D29C03D17/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#A020F0\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300201/69E94F23A27A360B496D5AC6F814AE0D29C03D17/\",\"name\":\"Entranced\",\"rules\":\"This model\\u003fs actions that target an enemy model cannot be cheated. After this model resolves an action targeting an enemy model, remove this token.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "3114c5",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -13.4609365,
        "posY": 1.03220642,
        "posZ": -11.1910267,
        "rotX": 1.811182E-08,
        "rotY": 180.0193,
        "rotZ": -2.70282129E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Fast",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "4d24d8",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.181182,
            "posZ": -11.5137367,
            "rotX": -0.000149438289,
            "rotY": 0.00182274822,
            "rotZ": -0.00104434579,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Fast",
          "Description": "Increase this modelâs action limit by 1 (to a maximum of 3). When this model ends its activation, remove this token. Canceled by Slow.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.8862745,
            "g": 0.8156863,
            "b": 0.39215678
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554385209/698B13597E185E6ACA0AB19C13A118A3C1BEEB4D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#E2D064\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554385209/698B13597E185E6ACA0AB19C13A118A3C1BEEB4D/\",\"name\":\"Fast\",\"rules\":\"Increase this model\\u003fs action limit by 1 (to a maximum of 3). When this model ends its activation, remove this token. Canceled by Slow.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "4d24d8",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Fast",
          "Description": "Increase this modelâs action limit by 1 (to a maximum of 3). When this model ends its activation, remove this token. Canceled by Slow.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.8862745,
            "g": 0.8156863,
            "b": 0.3921568
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554385209/698B13597E185E6ACA0AB19C13A118A3C1BEEB4D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#E2D064\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554385209/698B13597E185E6ACA0AB19C13A118A3C1BEEB4D/\",\"name\":\"Fast\",\"rules\":\"Increase this model\\u003fs action limit by 1 (to a maximum of 3). When this model ends its activation, remove this token. Canceled by Slow.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "18e6a4",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -15.4609365,
        "posY": 1.03220618,
        "posZ": -12.6910267,
        "rotX": 2.42856629E-07,
        "rotY": 180.019287,
        "rotZ": -3.8037993E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Aura(Hazardous)",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "28a8c8",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.181185,
            "posZ": -13.0137367,
            "rotX": 0.000362669147,
            "rotY": 0.00182657118,
            "rotZ": -0.0002514143,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Aura(Hazardous)",
          "Description": "The area within 2\" of this model is hazardous terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016162692694/F49028E0DA3FB690A11582D1774A2370C955E86E/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016162692694/F49028E0DA3FB690A11582D1774A2370C955E86E/\",\"name\":\"Aura(Hazardous)\",\"rules\":\"The area within 2\\\" of this model is hazardous terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "28a8c8",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Aura(Hazardous)",
          "Description": "The area within 2\" of this model is hazardous terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016162692694/F49028E0DA3FB690A11582D1774A2370C955E86E/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016162692694/F49028E0DA3FB690A11582D1774A2370C955E86E/\",\"name\":\"Aura(Hazardous)\",\"rules\":\"The area within 2\\\" of this model is hazardous terrain. Friendly models may choose to be unaffected by this terrain. During the end phase, remove this token.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "85d099",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -13.4609365,
        "posY": 1.03220642,
        "posZ": -12.6910267,
        "rotX": -2.06691851E-07,
        "rotY": 180.0193,
        "rotZ": 3.398078E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Focused",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "1e34ee",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18118739,
            "posZ": -13.0137367,
            "rotX": 0.0007147117,
            "rotY": 0.00182743941,
            "rotZ": -0.0004895721,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Focused",
          "Description": "Before performing a duel, this model may remove this token to receive a + to the duel. Canceled by Distracted.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6039216,
            "g": 0.215686142,
            "b": 0.827451
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554725833/7B52C3AD5915BFC06B7E68025F5448C2862E0789/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#9A37D3\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554725833/7B52C3AD5915BFC06B7E68025F5448C2862E0789/\",\"name\":\"Focused\",\"rules\":\"Before performing a duel, this model may remove this token to receive a + to the duel. Canceled by Distracted.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "1e34ee",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Focused",
          "Description": "Before performing a duel, this model may remove this token to receive a + to the duel. Canceled by Distracted.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6039216,
            "g": 0.215686172,
            "b": 0.827451
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554725833/7B52C3AD5915BFC06B7E68025F5448C2862E0789/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#9A37D3\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554725833/7B52C3AD5915BFC06B7E68025F5448C2862E0789/\",\"name\":\"Focused\",\"rules\":\"Before performing a duel, this model may remove this token to receive a + to the duel. Canceled by Distracted.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "179150",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -15.4609365,
        "posY": 1.03220642,
        "posZ": -14.1910267,
        "rotX": -1.94693243E-07,
        "rotY": 180.019287,
        "rotZ": -2.53430585E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Bolstered",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "992ce1",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18120444,
            "posZ": -14.5137367,
            "rotX": -0.000105741528,
            "rotY": 0.00183354912,
            "rotZ": -0.000154232432,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Bolstered",
          "Description": "This model receives +1 to its Df and Wp. During the end phase, remove this token. Canceled by Injured.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.960784256,
            "g": 0.203921467,
            "b": 0.1372548
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300000/32313584E40B0E1BCF00631370C61EBAF785F3C4/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#F53423\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300000/32313584E40B0E1BCF00631370C61EBAF785F3C4/\",\"name\":\"Bolstered\",\"rules\":\"This model receives +1 to its Df and Wp. During the end phase, remove this token. Canceled by Injured.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "992ce1",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Bolstered",
          "Description": "This model receives +1 to its Df and Wp. During the end phase, remove this token. Canceled by Injured.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.960784256,
            "g": 0.2039215,
            "b": 0.137254834
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300000/32313584E40B0E1BCF00631370C61EBAF785F3C4/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#F53423\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300000/32313584E40B0E1BCF00631370C61EBAF785F3C4/\",\"name\":\"Bolstered\",\"rules\":\"This model receives +1 to its Df and Wp. During the end phase, remove this token. Canceled by Injured.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "4bdf12",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -13.4609365,
        "posY": 1.03220642,
        "posZ": -14.1910267,
        "rotX": 3.48264848E-08,
        "rotY": 180.0193,
        "rotZ": -2.92043524E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Hastened",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "a78cf5",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.181187,
            "posZ": -14.5137367,
            "rotX": -0.0007185837,
            "rotY": 0.00182696269,
            "rotZ": 0.000196919282,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Hastened",
          "Description": "This model gains +2 Sp and cannot be moved by enemy models. When this model ends its activation, remove this token. Canceled by Staggered.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.996078432,
            "g": 0.905882359,
            "b": 0.0666666
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300292/CFDFBE1D760E16AA10E6E854866DA25F2D67CCF9/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FEE711\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300292/CFDFBE1D760E16AA10E6E854866DA25F2D67CCF9/\",\"name\":\"Hastened\",\"rules\":\"This model gains +2 Sp and cannot be moved by enemy models. When this model ends its activation, remove this token. Canceled by Staggered.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "a78cf5",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Hastened",
          "Description": "This model gains +2 Sp and cannot be moved by enemy models. When this model ends its activation, remove this token. Canceled by Staggered.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.996078432,
            "g": 0.905882359,
            "b": 0.0666666254
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300292/CFDFBE1D760E16AA10E6E854866DA25F2D67CCF9/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FEE711\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300292/CFDFBE1D760E16AA10E6E854866DA25F2D67CCF9/\",\"name\":\"Hastened\",\"rules\":\"This model gains +2 Sp and cannot be moved by enemy models. When this model ends its activation, remove this token. Canceled by Staggered.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "09a779",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -11.4609365,
        "posY": 1.0322063,
        "posZ": -8.191027,
        "rotX": -3.32638237E-08,
        "rotY": 180.019287,
        "rotZ": 1.20936339E-09,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Insight",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "0b7dd7",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18119645,
            "posZ": -8.513737,
            "rotX": 0.000298515253,
            "rotY": 0.00182817457,
            "rotZ": 4.565526E-06,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Insight",
          "Description": "Before performing a duel, this model may remove this token to look at the top card of its fate deck and may discard it.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.7176471,
            "g": 1.0,
            "b": 0.8745098
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300435/EED601E8B8F12D7360DFEA2B57A2B8AEBEE2174C/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#B7FFDF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300435/EED601E8B8F12D7360DFEA2B57A2B8AEBEE2174C/\",\"name\":\"Insight\",\"rules\":\"Before performing a duel, this model may remove this token to look at the top card of its fate deck and may discard it.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "0b7dd7",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Insight",
          "Description": "Before performing a duel, this model may remove this token to look at the top card of its fate deck and may discard it.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.7176471,
            "g": 1.0,
            "b": 0.8745098
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300435/EED601E8B8F12D7360DFEA2B57A2B8AEBEE2174C/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#B7FFDF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300435/EED601E8B8F12D7360DFEA2B57A2B8AEBEE2174C/\",\"name\":\"Insight\",\"rules\":\"Before performing a duel, this model may remove this token to look at the top card of its fate deck and may discard it.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "c4722c",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -11.4609365,
        "posY": 1.0322063,
        "posZ": -9.691027,
        "rotX": -1.36464919E-07,
        "rotY": 180.019287,
        "rotZ": -2.730762E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Poison",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "abb098",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.181194,
            "posZ": -10.0137367,
            "rotX": 4.04612147E-05,
            "rotY": 0.00182701892,
            "rotZ": 0.00014269042,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Poison",
          "Description": "At the end of the turn, deal 1 irreducible damage to this model.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.5137253,
            "g": 0.8039216,
            "b": 0.3019607
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554095214/37B3943D3C71EE6BFD13027145BDE00D0D56ED3B/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#83CD4D\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554095214/37B3943D3C71EE6BFD13027145BDE00D0D56ED3B/\",\"name\":\"Poison\",\"rules\":\"At the end of the turn, deal 1 irreducible damage to this model.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "abb098",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Poison",
          "Description": "At the end of the turn, deal 1 irreducible damage to this model.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.51372534,
            "g": 0.8039216,
            "b": 0.301960737
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554095214/37B3943D3C71EE6BFD13027145BDE00D0D56ED3B/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#83CD4D\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554095214/37B3943D3C71EE6BFD13027145BDE00D0D56ED3B/\",\"name\":\"Poison\",\"rules\":\"At the end of the turn, deal 1 irreducible damage to this model.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "aea3e0",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -11.4609365,
        "posY": 1.0322063,
        "posZ": -11.1910267,
        "rotX": 9.311912E-08,
        "rotY": 180.019287,
        "rotZ": 1.09679164E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Shielded",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "843b26",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.181193,
            "posZ": -11.5137367,
            "rotX": -1.05208187E-06,
            "rotY": 0.00182697561,
            "rotZ": -7.678704E-06,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Shielded",
          "Description": "When this model is dealt damage, it must remove this token to reduce that damage by 1. This token may reduce damage to 0.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.4156862,
            "g": 0.7647059,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554495459/45E41E4CF603049EEF4B3EAB39DC0B3DC93DFE78/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#6AC3FF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554495459/45E41E4CF603049EEF4B3EAB39DC0B3DC93DFE78/\",\"name\":\"Shielded\",\"rules\":\"When this model is dealt damage, it must remove this token to reduce that damage by 1. This token may reduce damage to 0.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "843b26",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Shielded",
          "Description": "When this model is dealt damage, it must remove this token to reduce that damage by 1. This token may reduce damage to 0.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.41568622,
            "g": 0.7647059,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554495459/45E41E4CF603049EEF4B3EAB39DC0B3DC93DFE78/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#6AC3FF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554495459/45E41E4CF603049EEF4B3EAB39DC0B3DC93DFE78/\",\"name\":\"Shielded\",\"rules\":\"When this model is dealt damage, it must remove this token to reduce that damage by 1. This token may reduce damage to 0.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "2350a9",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -11.4609365,
        "posY": 1.0322063,
        "posZ": -12.6910267,
        "rotX": 9.22817449E-08,
        "rotY": 180.019287,
        "rotZ": -3.489002E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Slow",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "f0c202",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.181192,
            "posZ": -13.0137367,
            "rotX": 0.000550858851,
            "rotY": 0.00182685885,
            "rotZ": -0.0003385772,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Slow",
          "Description": "Reduce this modelâs action limit by 1 (to a minimum of 1). When this model ends its activation, remove this token. Canceled by Fast.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.721568644,
            "g": 0.721568644,
            "b": 0.721568644
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554366701/F479B20690BB037348F53B802F99B9B68ACFCCEA/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#B8B8B8\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554366701/F479B20690BB037348F53B802F99B9B68ACFCCEA/\",\"name\":\"Slow\",\"rules\":\"Reduce this model\\u003fs action limit by 1 (to a minimum of 1). When this model ends its activation, remove this token. Canceled by Fast.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "f0c202",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Slow",
          "Description": "Reduce this modelâs action limit by 1 (to a minimum of 1). When this model ends its activation, remove this token. Canceled by Fast.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.721568644,
            "g": 0.721568644,
            "b": 0.721568644
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554366701/F479B20690BB037348F53B802F99B9B68ACFCCEA/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#B8B8B8\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554366701/F479B20690BB037348F53B802F99B9B68ACFCCEA/\",\"name\":\"Slow\",\"rules\":\"Reduce this model\\u003fs action limit by 1 (to a minimum of 1). When this model ends its activation, remove this token. Canceled by Fast.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "e5cc04",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -11.4609365,
        "posY": 1.03220618,
        "posZ": -14.1910267,
        "rotX": -2.23023321E-07,
        "rotY": 180.019257,
        "rotZ": -1.3503513E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Staggered",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "29f465",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.1811837,
            "posZ": -14.5137367,
            "rotX": 0.000331182266,
            "rotY": 0.00182400679,
            "rotZ": -0.00019315815,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Staggered",
          "Description": "This model suffers -2 Sp and cannot be moved by other enemy models. When this model ends its activation, remove this token. Canceled by Hastened.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.07450976,
            "g": 0.5490196,
            "b": 0.003921569
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554150868/60F4FB8B23A6586775CB50311E1F7DD6BC0C1620/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#138C01\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554150868/60F4FB8B23A6586775CB50311E1F7DD6BC0C1620/\",\"name\":\"Staggered\",\"rules\":\"This model suffers -2 Sp and cannot be moved by other enemy models. When this model ends its activation, remove this token. Canceled by Hastened.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "29f465",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Staggered",
          "Description": "This model suffers -2 Sp and cannot be moved by other enemy models. When this model ends its activation, remove this token. Canceled by Hastened.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.07450978,
            "g": 0.5490196,
            "b": 0.003921569
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554150868/60F4FB8B23A6586775CB50311E1F7DD6BC0C1620/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#138C01\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554150868/60F4FB8B23A6586775CB50311E1F7DD6BC0C1620/\",\"name\":\"Staggered\",\"rules\":\"This model suffers -2 Sp and cannot be moved by other enemy models. When this model ends its activation, remove this token. Canceled by Hastened.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "6b283e",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -15.4609365,
        "posY": 1.0322063,
        "posZ": -15.6910267,
        "rotX": 6.57169E-08,
        "rotY": 180.019287,
        "rotZ": -1.55466438E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Burning",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "ac5fe7",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18118131,
            "posZ": -16.0137367,
            "rotX": 0.0004910846,
            "rotY": 0.00182353321,
            "rotZ": -0.0005134392,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Burning",
          "Description": "At the end of the turn, deal 1 damage to this model and enemy models in base contact with it. Then remove this token",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.858823538,
            "g": 0.5568628,
            "b": 0.2784313
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554318009/A00031DC30FDC7D6EB7AEA3DFCF8AAD0754CD4CB/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#DB8E47\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554318009/A00031DC30FDC7D6EB7AEA3DFCF8AAD0754CD4CB/\",\"name\":\"Burning\",\"rules\":\"At the end of the turn, deal 1 damage to this model and enemy models in base contact with it. Then remove this token\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "ac5fe7",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Burning",
          "Description": "At the end of the turn, deal 1 damage to this model and enemy models in base contact with it. Then remove this token",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.858823538,
            "g": 0.5568628,
            "b": 0.278431326
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554318009/A00031DC30FDC7D6EB7AEA3DFCF8AAD0754CD4CB/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#DB8E47\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554318009/A00031DC30FDC7D6EB7AEA3DFCF8AAD0754CD4CB/\",\"name\":\"Burning\",\"rules\":\"At the end of the turn, deal 1 damage to this model and enemy models in base contact with it. Then remove this token\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "e3b8c8",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -13.4609365,
        "posY": 1.03220642,
        "posZ": -15.6910267,
        "rotX": -1.61690579E-07,
        "rotY": 180.0193,
        "rotZ": -7.9661487E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Impact",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "c7eaff",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18118668,
            "posZ": -16.0137367,
            "rotX": -7.17079229E-06,
            "rotY": 0.00182561483,
            "rotZ": -0.00061834784,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Impact",
          "Description": "When this model succeeds in an attack action that deals damage, it must remove this token to deal +1 damage.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.9137255,
            "g": 0.694117665,
            "b": 0.458823323
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418391028913/081086FABAFA8AFAAFF52C72C72EDAA32F55AFD0/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#E9B175\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418391028913/081086FABAFA8AFAAFF52C72C72EDAA32F55AFD0/\",\"name\":\"Impact\",\"rules\":\"When this model succeeds in an attack action that deals damage, it must remove this token to deal +1 damage.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "c7eaff",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Impact",
          "Description": "When this model succeeds in an attack action that deals damage, it must remove this token to deal +1 damage.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.9137255,
            "g": 0.694117665,
            "b": 0.458823383
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418391028913/081086FABAFA8AFAAFF52C72C72EDAA32F55AFD0/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#E9B175\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418391028913/081086FABAFA8AFAAFF52C72C72EDAA32F55AFD0/\",\"name\":\"Impact\",\"rules\":\"When this model succeeds in an attack action that deals damage, it must remove this token to deal +1 damage.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "c7dca8",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -11.4609365,
        "posY": 1.0322063,
        "posZ": -15.6910267,
        "rotX": 1.103803E-07,
        "rotY": 180.019287,
        "rotZ": -1.34925273E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Stunned",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "9c721f",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18116283,
            "posZ": -16.0137367,
            "rotX": -0.00039358926,
            "rotY": 0.00182123366,
            "rotZ": -0.00367133552,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Stunned",
          "Description": "This model cannot declare triggers and it counts all signature symbols on its card as blank. When this model ends its activation, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554191671/98EB8191C3884783E74F6FF8066097D2D7296CBF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554191671/98EB8191C3884783E74F6FF8066097D2D7296CBF/\",\"name\":\"Stunned\",\"rules\":\"This model cannot declare triggers and it counts all signature symbols on its card as blank. When this model ends its activation, remove this token.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "9c721f",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Stunned",
          "Description": "This model cannot declare triggers and it counts all signature symbols on its card as blank. When this model ends its activation, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554191671/98EB8191C3884783E74F6FF8066097D2D7296CBF/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554191671/98EB8191C3884783E74F6FF8066097D2D7296CBF/\",\"name\":\"Stunned\",\"rules\":\"This model cannot declare triggers and it counts all signature symbols on its card as blank. When this model ends its activation, remove this token.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "83ff49",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -15.4609365,
        "posY": 1.03220642,
        "posZ": -17.1910267,
        "rotX": 1.89530226E-07,
        "rotY": 180.019287,
        "rotZ": -1.514758E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Craven",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "6e6f81",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -17.9052448,
            "posY": 1.18117785,
            "posZ": -17.5137367,
            "rotX": -0.000445537531,
            "rotY": 0.00182314834,
            "rotZ": 6.08692571E-05,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Craven",
          "Description": "This model cannot declare the Interact action and is ignored for its crewâs strategies and schemes. At the end of this modelâs activation, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 0.5294118,
            "b": 0.8627451
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418391028798/3AB3D764F98CEE306B56A7E6FE17AFFEFDBC2687/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FF87DC\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418391028798/3AB3D764F98CEE306B56A7E6FE17AFFEFDBC2687/\",\"name\":\"Craven\",\"rules\":\"This model cannot declare the Interact action and is ignored for its crew\\u003fs strategies and schemes. At the end of this model\\u003fs activation, remove this token.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "6e6f81",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Craven",
          "Description": "This model cannot declare the Interact action and is ignored for its crewâs strategies and schemes. At the end of this modelâs activation, remove this token.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 0.5294118,
            "b": 0.8627451
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/28819418391028798/3AB3D764F98CEE306B56A7E6FE17AFFEFDBC2687/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FF87DC\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/28819418391028798/3AB3D764F98CEE306B56A7E6FE17AFFEFDBC2687/\",\"name\":\"Craven\",\"rules\":\"This model cannot declare the Interact action and is ignored for its crew\\u003fs strategies and schemes. At the end of this model\\u003fs activation, remove this token.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "16dd22",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -13.4609365,
        "posY": 1.0322063,
        "posZ": -17.1910267,
        "rotX": 1.98144591E-07,
        "rotY": 180.0193,
        "rotZ": -3.45211362E-08,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Injured",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "ccba45",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -15.9052448,
            "posY": 1.18118346,
            "posZ": -17.5137367,
            "rotX": 0.000323401939,
            "rotY": 0.00182613847,
            "rotZ": -0.0005938065,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Injured",
          "Description": "This model suffers -1 to its Df and Wp. During the end phase, remove this token. Canceled by Bolstered.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.572549045,
            "g": 0.0235294122,
            "b": 0.0235294122
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554292969/5474B842DEC8F08CB249F3B24683FE95D58332FC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#920606\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554292969/5474B842DEC8F08CB249F3B24683FE95D58332FC/\",\"name\":\"Injured\",\"rules\":\"This model suffers -1 to its Df and Wp. During the end phase, remove this token. Canceled by Bolstered.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "ccba45",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Injured",
          "Description": "This model suffers -1 to its Df and Wp. During the end phase, remove this token. Canceled by Bolstered.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.572549045,
            "g": 0.0235294122,
            "b": 0.0235294122
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554292969/5474B842DEC8F08CB249F3B24683FE95D58332FC/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#920606\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554292969/5474B842DEC8F08CB249F3B24683FE95D58332FC/\",\"name\":\"Injured\",\"rules\":\"This model suffers -1 to its Df and Wp. During the end phase, remove this token. Canceled by Bolstered.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "c35cf6",
      "Name": "Custom_Model_Infinite_Bag",
      "Transform": {
        "posX": -11.4609365,
        "posY": 1.03220642,
        "posZ": -17.1910267,
        "rotX": 2.78351024E-07,
        "rotY": 180.019287,
        "rotZ": -1.43145783E-07,
        "scaleX": 1.53646016,
        "scaleY": 0.144412935,
        "scaleZ": 1.48942518
      },
      "Nickname": "Summon",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 7,
        "CastShadows": true
      },
      "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "6e315c",
          "Name": "Custom_Token",
          "Transform": {
            "posX": -13.9052448,
            "posY": 1.18118739,
            "posZ": -17.5137367,
            "rotX": 9.482966E-05,
            "rotY": 0.00182567118,
            "rotZ": -0.0004677442,
            "scaleX": 0.323614359,
            "scaleY": 1.0,
            "scaleZ": 0.323614359
          },
          "Nickname": "Summon",
          "Description": "This model may not declare the Interact action. This model does not infuse a soutstones for its crew when it is killed. This token cannot be removed.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016162692762/7B070A76AD85B4DED02C679C0FC2D3DFC8CA3CBA/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016162692762/7B070A76AD85B4DED02C679C0FC2D3DFC8CA3CBA/\",\"name\":\"Summon\",\"rules\":\"This model may not declare the Interact action. This model does not infuse a soutstones for its crew when it is killed. This token cannot be removed.\"}}",
          "XmlUI": ""
        }
      ],
      "ChildObjects": [
        {
          "GUID": "6e315c",
          "Name": "Custom_Token",
          "Transform": {
            "posX": 0.0,
            "posY": 0.0,
            "posZ": 0.0,
            "rotX": -6.322463E-06,
            "rotY": 0.00183049077,
            "rotZ": -5.98543647E-06,
            "scaleX": 0.210623324,
            "scaleY": 6.92458773,
            "scaleZ": 0.217274666
          },
          "Nickname": "Summon",
          "Description": "This model may not declare the Interact action. This model does not infuse a soutstones for its crew when it is killed. This token cannot be removed.",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016162692762/7B070A76AD85B4DED02C679C0FC2D3DFC8CA3CBA/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomToken": {
              "Thickness": 0.1,
              "MergeDistancePixels": 5.0,
              "StandUp": false,
              "Stackable": false
            }
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
          "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016162692762/7B070A76AD85B4DED02C679C0FC2D3DFC8CA3CBA/\",\"name\":\"Summon\",\"rules\":\"This model may not declare the Interact action. This model does not infuse a soutstones for its crew when it is killed. This token cannot be removed.\"}}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "3ea749",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "posX": -2.17292786,
        "posY": 1.00753093,
        "posZ": 12.6873436,
        "rotX": -2.86902576E-07,
        "rotY": 359.993927,
        "rotZ": -8.9190074E-08,
        "scaleX": 7.897566,
        "scaleY": 7.21041,
        "scaleZ": 7.72229671
      },
      "Nickname": "Special Tokens",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.9921611,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/938308817305239501/02DEE4008F9EDDB7690EF61C2A12676BCB7CB71A/",
        "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/938308817305239628/22B84A6BF1CECB13E70D1C931F12B6EDC6E8F875/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 0.8745098,
            "g": 0.8117647,
            "b": 0.745098054
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "Bag": {
        "Order": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "67de92",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -9.905245,
            "posY": 1.03220642,
            "posZ": -8.513737,
            "rotX": 1.56047327E-06,
            "rotY": 180.019287,
            "rotZ": -6.37887752E-07,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Flicker",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "31f4d5",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -9.905245,
                "posY": 1.18118978,
                "posZ": -8.513737,
                "rotX": 6.11197756E-05,
                "rotY": 0.00182571,
                "rotZ": 7.2525263E-06,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Flicker",
              "Description": "Kill this model at the end of the turn. This token cannot be removed.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841433162/E65B7D3932FBF5B9A5B691169E495E1037A047A9/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1651097965841433162/E65B7D3932FBF5B9A5B691169E495E1037A047A9/\",\"name\":\"Flicker\",\"rules\":\"Kill this model at the end of the turn. This token cannot be removed.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "31f4d5",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Flicker",
              "Description": "Kill this model at the end of the turn. This token cannot be removed.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841433162/E65B7D3932FBF5B9A5B691169E495E1037A047A9/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1651097965841433162/E65B7D3932FBF5B9A5B691169E495E1037A047A9/\",\"name\":\"Flicker\",\"rules\":\"Kill this model at the end of the turn. This token cannot be removed.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "022d74",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -9.905245,
            "posY": 1.03220642,
            "posZ": -10.0137367,
            "rotX": 1.87574951E-08,
            "rotY": 180.019287,
            "rotZ": -1.7128167E-07,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Backtrack",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "c5f292",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -9.905245,
                "posY": 1.18118787,
                "posZ": -10.0137367,
                "rotX": 4.498527E-05,
                "rotY": 0.00182553462,
                "rotZ": -0.000449773943,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Backtrack",
              "Description": "When performing a duel, this model may remove this token before any player cheats fate. If it does so, all cards in the conflict are discarded without effect and the duel is performed again with the same modifiers. This token may not be used if there are any jokers in the conflict.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381425485306/6A397A40AAC29F6B113F57EC1B0B7E5678601579/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55840381425485306/6A397A40AAC29F6B113F57EC1B0B7E5678601579/\",\"name\":\"Backtrack\",\"rules\":\"When performing a duel, this model may remove this token before any player cheats fate. If it does so, all cards in the conflict are discarded without effect and the duel is performed again with the same modifiers. This token may not be used if there are any jokers in the conflict.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "c5f292",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Backtrack",
              "Description": "When performing a duel, this model may remove this token before any player cheats fate. If it does so, all cards in the conflict are discarded without effect and the duel is performed again with the same modifiers. This token may not be used if there are any jokers in the conflict.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381425485306/6A397A40AAC29F6B113F57EC1B0B7E5678601579/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55840381425485306/6A397A40AAC29F6B113F57EC1B0B7E5678601579/\",\"name\":\"Backtrack\",\"rules\":\"When performing a duel, this model may remove this token before any player cheats fate. If it does so, all cards in the conflict are discarded without effect and the duel is performed again with the same modifiers. This token may not be used if there are any jokers in the conflict.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "6d5842",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -9.905245,
            "posY": 1.03220642,
            "posZ": -11.5137367,
            "rotX": -1.9376796E-07,
            "rotY": 180.019287,
            "rotZ": 3.16273372E-08,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Aura (Negligent)",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "b18895",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -9.905245,
                "posY": 1.18118548,
                "posZ": -11.5137367,
                "rotX": 0.000130223183,
                "rotY": 0.00182486407,
                "rotZ": -0.000442475546,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Aura (Negligent)",
              "Description": "Enemy models within 2\" of this model that declare a non-Walk action must pass a TN 10 Wp duel or the action fails. During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456306/292CF88EBCB3583FF967498D4E28898C814C053F/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456306/292CF88EBCB3583FF967498D4E28898C814C053F/\",\"name\":\"Aura (Negligent)\",\"rules\":\"Enemy models within 2\\\" of this model that declare a non-Walk action must pass a TN 10 Wp duel or the action fails. During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "b18895",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Aura (Negligent)",
              "Description": "Enemy models within 2\" of this model that declare a non-Walk action must pass a TN 10 Wp duel or the action fails. During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456306/292CF88EBCB3583FF967498D4E28898C814C053F/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456306/292CF88EBCB3583FF967498D4E28898C814C053F/\",\"name\":\"Aura (Negligent)\",\"rules\":\"Enemy models within 2\\\" of this model that declare a non-Walk action must pass a TN 10 Wp duel or the action fails. During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "9afd5a",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -9.905245,
            "posY": 1.03220642,
            "posZ": -13.0137367,
            "rotX": -8.99798636E-08,
            "rotY": 180.019287,
            "rotZ": -6.261335E-09,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Aura (Binding)",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "81aef6",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -9.905245,
                "posY": 1.18118787,
                "posZ": -13.0137367,
                "rotX": -0.000197859757,
                "rotY": 0.00182581227,
                "rotZ": -0.0003759249,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Aura (Binding)",
              "Description": "Enemy models within 6\" may not empower duels. During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456201/634B72BEA2CB396DAC145374C45D2105A79951FE/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456201/634B72BEA2CB396DAC145374C45D2105A79951FE/\",\"name\":\"Aura (Binding)\",\"rules\":\"Enemy models within 6\\\" may not empower duels. During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "81aef6",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Aura (Binding)",
              "Description": "Enemy models within 6\" may not empower duels. During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456201/634B72BEA2CB396DAC145374C45D2105A79951FE/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456201/634B72BEA2CB396DAC145374C45D2105A79951FE/\",\"name\":\"Aura (Binding)\",\"rules\":\"Enemy models within 6\\\" may not empower duels. During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "f0b464",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -9.905827,
            "posY": 1.03220642,
            "posZ": -14.5135145,
            "rotX": 2.14332616E-07,
            "rotY": 180.1561,
            "rotZ": -3.67642542E-07,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Analyzed",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "c0ef9d",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -9.905245,
                "posY": 1.181189,
                "posZ": -14.5137367,
                "rotX": 4.30937871E-05,
                "rotY": 359.865021,
                "rotZ": -0.000456238777,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Analyzed",
              "Description": "This model may not reduce damage with its abilities. Remove this token during the end phase.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456166/BEFCA92121986B939C3F1E160B7EF5CE20136482/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456166/BEFCA92121986B939C3F1E160B7EF5CE20136482/\",\"name\":\"Analyzed\",\"rules\":\"This model may not reduce damage with its abilities. Remove this token during the end phase.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "c0ef9d",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Analyzed",
              "Description": "This model may not reduce damage with its abilities. Remove this token during the end phase.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456166/BEFCA92121986B939C3F1E160B7EF5CE20136482/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456166/BEFCA92121986B939C3F1E160B7EF5CE20136482/\",\"name\":\"Analyzed\",\"rules\":\"This model may not reduce damage with its abilities. Remove this token during the end phase.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "c621db",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -9.902525,
            "posY": 1.03220546,
            "posZ": -16.014513,
            "rotX": -0.004192297,
            "rotY": 180.412582,
            "rotZ": 0.000823039,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Aura (Fire)",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "623431",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -9.905247,
                "posY": 1.181159,
                "posZ": -16.0137348,
                "rotX": 0.0017122766,
                "rotY": 359.628052,
                "rotZ": 0.0008940937,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Aura (Fire)",
              "Description": "Enemies treat the area within 2\" of this model as hazardous (Burning). During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456222/8B27ED7E011B2D449D234C6C87C60277A48DA5FA/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456222/8B27ED7E011B2D449D234C6C87C60277A48DA5FA/\",\"name\":\"Aura (Fire)\",\"rules\":\"Enemies treat the area within 2\\\" of this model as hazardous (Burning). During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "623431",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Aura (Fire)",
              "Description": "Enemies treat the area within 2\" of this model as hazardous (Burning). During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456222/8B27ED7E011B2D449D234C6C87C60277A48DA5FA/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456222/8B27ED7E011B2D449D234C6C87C60277A48DA5FA/\",\"name\":\"Aura (Fire)\",\"rules\":\"Enemies treat the area within 2\\\" of this model as hazardous (Burning). During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "e53749",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -9.904894,
            "posY": 1.03220749,
            "posZ": -17.5114822,
            "rotX": 0.00420248928,
            "rotY": 179.776016,
            "rotZ": -0.0008211324,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Greedy",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "bb2e84",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -9.905244,
                "posY": 1.18120062,
                "posZ": -17.5137386,
                "rotX": -0.0019009721,
                "rotY": 0.2291779,
                "rotZ": -0.00117207423,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Greedy",
              "Description": "When this model would discard an upgrade, it may instead discard this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456506/E720CC4AD1426B61C22FD61112D0174DCB72D6C8/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456506/E720CC4AD1426B61C22FD61112D0174DCB72D6C8/\",\"name\":\"Greedy\",\"rules\":\"When this model would discard an upgrade, it may instead discard this token.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "bb2e84",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Greedy",
              "Description": "When this model would discard an upgrade, it may instead discard this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456506/E720CC4AD1426B61C22FD61112D0174DCB72D6C8/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456506/E720CC4AD1426B61C22FD61112D0174DCB72D6C8/\",\"name\":\"Greedy\",\"rules\":\"When this model would discard an upgrade, it may instead discard this token.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "fdb703",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -7.905245,
            "posY": 1.03220642,
            "posZ": -8.513737,
            "rotX": -4.47747E-07,
            "rotY": 180.019287,
            "rotZ": 3.68613115E-07,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Aura (Fumes)",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "d6f4b2",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -7.905245,
                "posY": 1.18118668,
                "posZ": -8.513737,
                "rotX": 5.892623E-05,
                "rotY": 0.00182345,
                "rotZ": -0.000614195131,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Aura (Fumes)",
              "Description": "Enemy models within 3\" receive a - to attack actions that target friendly models. During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456261/42592B6BC1AA982F77124167FF9BC4082EC3FF4D/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456261/42592B6BC1AA982F77124167FF9BC4082EC3FF4D/\",\"name\":\"Aura (Fumes)\",\"rules\":\"Enemy models within 3\\\" receive a - to attack actions that target friendly models. During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "d6f4b2",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Aura (Fumes)",
              "Description": "Enemy models within 3\" receive a - to attack actions that target friendly models. During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456261/42592B6BC1AA982F77124167FF9BC4082EC3FF4D/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456261/42592B6BC1AA982F77124167FF9BC4082EC3FF4D/\",\"name\":\"Aura (Fumes)\",\"rules\":\"Enemy models within 3\\\" receive a - to attack actions that target friendly models. During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "25dae9",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -7.9058466,
            "posY": 1.03220642,
            "posZ": -10.0135107,
            "rotX": 1.39873021E-06,
            "rotY": 180.152939,
            "rotZ": 3.48243759E-07,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Engorged",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "78c6a1",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -7.905245,
                "posY": 1.18118811,
                "posZ": -10.0137367,
                "rotX": 0.000173928973,
                "rotY": 359.868164,
                "rotZ": -0.0003295471,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Engorged",
              "Description": "This model may remove this token at the end of its activation to heal 1.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456437/1328658410AD37A001AD8966AFD102D266A0E723/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456437/1328658410AD37A001AD8966AFD102D266A0E723/\",\"name\":\"Engorged\",\"rules\":\"This model may remove this token at the end of its activation to heal 1.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "78c6a1",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Engorged",
              "Description": "This model may remove this token at the end of its activation to heal 1.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456437/1328658410AD37A001AD8966AFD102D266A0E723/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456437/1328658410AD37A001AD8966AFD102D266A0E723/\",\"name\":\"Engorged\",\"rules\":\"This model may remove this token at the end of its activation to heal 1.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "d943fb",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -7.902344,
            "posY": 1.032209,
            "posZ": -11.5147943,
            "rotX": -0.005456243,
            "rotY": 180.4037,
            "rotZ": 0.00132069585,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Broodling",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "82e05f",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -7.90524673,
                "posY": 1.18116486,
                "posZ": -11.5137339,
                "rotX": 0.00173607992,
                "rotY": 359.6249,
                "rotZ": 0.0009558308,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Broodling",
              "Description": "When this model dies, summon a friendly Terror Tot into base contact.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456352/FF1549BB6CE756250E67CA62E1DDDD4096EA3DE6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456352/FF1549BB6CE756250E67CA62E1DDDD4096EA3DE6/\",\"name\":\"Broodling\",\"rules\":\"When this model dies, summon a friendly Terror Tot into base contact.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "82e05f",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Broodling",
              "Description": "When this model dies, summon a friendly Terror Tot into base contact.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456352/FF1549BB6CE756250E67CA62E1DDDD4096EA3DE6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456352/FF1549BB6CE756250E67CA62E1DDDD4096EA3DE6/\",\"name\":\"Broodling\",\"rules\":\"When this model dies, summon a friendly Terror Tot into base contact.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "e43c1d",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -7.905136,
            "posY": 1.03220618,
            "posZ": -13.0113182,
            "rotX": 0.000215582753,
            "rotY": 179.779984,
            "rotZ": -6.393169E-05,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Suppresed",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "7cb147",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -7.905244,
                "posY": 1.18119872,
                "posZ": -13.01374,
                "rotX": -0.001435401,
                "rotY": 0.234974757,
                "rotZ": -0.001145925,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Suppresed",
              "Description": "When this model declares a Signature action, it must drain a soulstone or the action fails. Remove this token at the end of this modelâs activation.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456583/35A9925D9A310DCDCCF75D82E07AB7A6A23DC01C/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456583/35A9925D9A310DCDCCF75D82E07AB7A6A23DC01C/\",\"name\":\"Suppresed\",\"rules\":\"When this model declares a Signature action, it must drain a soulstone or the action fails. Remove this token at the end of this model\\u003fs activation.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "7cb147",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Suppresed",
              "Description": "When this model declares a Signature action, it must drain a soulstone or the action fails. Remove this token at the end of this modelâs activation.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456583/35A9925D9A310DCDCCF75D82E07AB7A6A23DC01C/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456583/35A9925D9A310DCDCCF75D82E07AB7A6A23DC01C/\",\"name\":\"Suppresed\",\"rules\":\"When this model declares a Signature action, it must drain a soulstone or the action fails. Remove this token at the end of this model\\u003fs activation.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "704b02",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -7.907992,
            "posY": 1.03220618,
            "posZ": -14.515584,
            "rotX": -0.004679023,
            "rotY": 179.6088,
            "rotZ": 5.746719E-05,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Fright",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "392ffa",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -7.905245,
                "posY": 1.18119109,
                "posZ": -14.5137339,
                "rotX": 0.0013023892,
                "rotY": 0.414959341,
                "rotZ": -0.000557965133,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Fright",
              "Description": "Enemy models that successfully target this model with a Signature action attack gain one raise on that attack. Discard this token after this model is successfully attacked by an enemy Signature action action.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456475/F804F7BE7A4344CEAD0A38ECDDE21D668BCB555D/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456475/F804F7BE7A4344CEAD0A38ECDDE21D668BCB555D/\",\"name\":\"Fright\",\"rules\":\"Enemy models that successfully target this model with a Signature action attack gain one raise on that attack. Discard this token after this model is successfully attacked by an enemy Signature action action.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "392ffa",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Fright",
              "Description": "Enemy models that successfully target this model with a Signature action attack gain one raise on that attack. Discard this token after this model is successfully attacked by an enemy Signature action action.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456475/F804F7BE7A4344CEAD0A38ECDDE21D668BCB555D/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456475/F804F7BE7A4344CEAD0A38ECDDE21D668BCB555D/\",\"name\":\"Fright\",\"rules\":\"Enemy models that successfully target this model with a Signature action attack gain one raise on that attack. Discard this token after this model is successfully attacked by an enemy Signature action action.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "9ec4ad",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -7.905163,
            "posY": 1.03220642,
            "posZ": -16.011816,
            "rotX": 0.000190742387,
            "rotY": 180.198456,
            "rotZ": -2.81823532E-07,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Challenged",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "f447f5",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -7.9052453,
                "posY": 1.18117857,
                "posZ": -16.01374,
                "rotX": -0.00184875494,
                "rotY": 359.820038,
                "rotZ": -8.11222E-05,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Challenged",
              "Description": "This model must discard a card to target any model other than the one that applied this token. During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456365/6569ADB0BF5A6FBB50789C808AA7DED98D1123CD/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456365/6569ADB0BF5A6FBB50789C808AA7DED98D1123CD/\",\"name\":\"Challenged\",\"rules\":\"This model must discard a card to target any model other than the one that applied this token. During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "f447f5",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Challenged",
              "Description": "This model must discard a card to target any model other than the one that applied this token. During the end phase, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456365/6569ADB0BF5A6FBB50789C808AA7DED98D1123CD/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456365/6569ADB0BF5A6FBB50789C808AA7DED98D1123CD/\",\"name\":\"Challenged\",\"rules\":\"This model must discard a card to target any model other than the one that applied this token. During the end phase, remove this token.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "db73c1",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -7.902023,
            "posY": 1.03220642,
            "posZ": -17.5155888,
            "rotX": -2.26275283E-08,
            "rotY": 180.431717,
            "rotZ": 3.09873123E-08,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Power",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "083d17",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -7.905245,
                "posY": 1.18119156,
                "posZ": -17.5137367,
                "rotX": -0.0006898473,
                "rotY": 359.5894,
                "rotZ": 0.0003029694,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Power",
              "Description": "This token has no innate effect",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841461738/9CB37F8F5501A50956D415F7582E48BCBED0FF76/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1651097965841461738/9CB37F8F5501A50956D415F7582E48BCBED0FF76/\",\"name\":\"Power\",\"rules\":\"This token has no innate effect\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "083d17",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Power",
              "Description": "This token has no innate effect",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841461738/9CB37F8F5501A50956D415F7582E48BCBED0FF76/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1651097965841461738/9CB37F8F5501A50956D415F7582E48BCBED0FF76/\",\"name\":\"Power\",\"rules\":\"This token has no innate effect\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "db289c",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -5.905245,
            "posY": 1.03220642,
            "posZ": -8.513737,
            "rotX": 1.42498993E-06,
            "rotY": 180.019287,
            "rotZ": -3.9206418E-07,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Perforated",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "07a661",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -5.905245,
                "posY": 1.1811868,
                "posZ": -8.513737,
                "rotX": 0.00010318595,
                "rotY": 0.00182644988,
                "rotZ": -0.0005190256,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Perforated",
              "Description": "After this model resolves the Walk or Charge action, deal 1 damage to it per inch it moved (to a maximum of 3). Other models may target this model with the Interact action to remove this token",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456548/371C65435BB9A70C1B907FCAB6E61F242948FF80/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456548/371C65435BB9A70C1B907FCAB6E61F242948FF80/\",\"name\":\"Perforated\",\"rules\":\"After this model resolves the Walk or Charge action, deal 1 damage to it per inch it moved (to a maximum of 3). Other models may target this model with the Interact action to remove this token\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "07a661",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Perforated",
              "Description": "After this model resolves the Walk or Charge action, deal 1 damage to it per inch it moved (to a maximum of 3). Other models may target this model with the Interact action to remove this token",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456548/371C65435BB9A70C1B907FCAB6E61F242948FF80/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456548/371C65435BB9A70C1B907FCAB6E61F242948FF80/\",\"name\":\"Perforated\",\"rules\":\"After this model resolves the Walk or Charge action, deal 1 damage to it per inch it moved (to a maximum of 3). Other models may target this model with the Interact action to remove this token\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "5a8247",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -5.905306,
            "posY": 1.03220642,
            "posZ": -10.0125732,
            "rotX": 5.76283554E-08,
            "rotY": 180.018326,
            "rotZ": -2.032776E-06,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Brilliance",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "afcdc6",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -5.905245,
                "posY": 1.18118453,
                "posZ": -10.0137367,
                "rotX": 0.000134868067,
                "rotY": 0.00278792065,
                "rotZ": -0.000403441052,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Brilliance",
              "Description": "When this model cheats fate, it is dealt 1 damage. Friendly Honeypot models may instead heal 1. Then, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841157277/DE054CDD03A9F568BDE96D362D069EACDB289753/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1651097965841157277/DE054CDD03A9F568BDE96D362D069EACDB289753/\",\"name\":\"Brilliance\",\"rules\":\"When this model cheats fate, it is dealt 1 damage. Friendly Honeypot models may instead heal 1. Then, remove this token.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "afcdc6",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Brilliance",
              "Description": "When this model cheats fate, it is dealt 1 damage. Friendly Honeypot models may instead heal 1. Then, remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651097965841157277/DE054CDD03A9F568BDE96D362D069EACDB289753/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/1651097965841157277/DE054CDD03A9F568BDE96D362D069EACDB289753/\",\"name\":\"Brilliance\",\"rules\":\"When this model cheats fate, it is dealt 1 damage. Friendly Honeypot models may instead heal 1. Then, remove this token.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "985fa9",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -5.90557766,
            "posY": 1.0322063,
            "posZ": -11.51485,
            "rotX": 1.38223288E-06,
            "rotY": 180.097061,
            "rotZ": -2.38723987E-06,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Parasite",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "1d8fd5",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -5.905245,
                "posY": 1.18118429,
                "posZ": -11.5137367,
                "rotX": 9.389079E-05,
                "rotY": 359.924042,
                "rotZ": -0.000462617172,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Parasite",
              "Description": "When this model is killed, the crew that applied this token infuses a soulstone.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456524/26B14B379F9053FBBD2860E992CA00175191D258/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456524/26B14B379F9053FBBD2860E992CA00175191D258/\",\"name\":\"Parasite\",\"rules\":\"When this model is killed, the crew that applied this token infuses a soulstone.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "1d8fd5",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Parasite",
              "Description": "When this model is killed, the crew that applied this token infuses a soulstone.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456524/26B14B379F9053FBBD2860E992CA00175191D258/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456524/26B14B379F9053FBBD2860E992CA00175191D258/\",\"name\":\"Parasite\",\"rules\":\"When this model is killed, the crew that applied this token infuses a soulstone.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "8aa027",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -5.90213346,
            "posY": 1.03220642,
            "posZ": -13.0148726,
            "rotX": -4.98603331E-05,
            "rotY": 180.365738,
            "rotZ": 4.233415E-05,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Shame",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "10a768",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -5.905245,
                "posY": 1.18118656,
                "posZ": -13.0137367,
                "rotX": 0.0002394839,
                "rotY": 359.655365,
                "rotZ": -0.00038023552,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Shame",
              "Description": "This model cannot be targeted by the actions of other friendly models. At the end of this modelâs activation, it may choose to suffer 1 damage to remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456579/BC21F1A3B84E56BD47150F27E37F28562479A3AE/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456579/BC21F1A3B84E56BD47150F27E37F28562479A3AE/\",\"name\":\"Shame\",\"rules\":\"This model cannot be targeted by the actions of other friendly models. At the end of this model\\u003fs activation, it may choose to suffer 1 damage to remove this token.\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "10a768",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Shame",
              "Description": "This model cannot be targeted by the actions of other friendly models. At the end of this modelâs activation, it may choose to suffer 1 damage to remove this token.",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016153456579/BC21F1A3B84E56BD47150F27E37F28562479A3AE/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016153456579/BC21F1A3B84E56BD47150F27E37F28562479A3AE/\",\"name\":\"Shame\",\"rules\":\"This model cannot be targeted by the actions of other friendly models. At the end of this model\\u003fs activation, it may choose to suffer 1 damage to remove this token.\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "8effcb",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": 0.00215426041,
            "posY": 6.86294031,
            "posZ": 8.554913,
            "rotX": 0.00284390338,
            "rotY": 180.019287,
            "rotZ": 359.9918,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Aura (Staggered)",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "2a7db8",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.836787045,
                "posY": 1.16882038,
                "posZ": 5.133542,
                "rotX": 359.9912,
                "rotY": 0.001783356,
                "rotZ": 0.008052867,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Aura (Staggered)",
              "Description": "Enemy models that start their activation within 2\" of this marker must discard a card or gain a Staggered token",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016160949338/B3F0363A59D30C60F8001CD218BBF2D8D8F89699/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"count\":1,\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016160949338/B3F0363A59D30C60F8001CD218BBF2D8D8F89699/\",\"name\":\"Aura (Staggered)\",\"rules\":\"Enemy models that start their activation within 2\\\" of this marker must discard a card or gain a Staggered token\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "2a7db8",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Aura (Staggered)",
              "Description": "Enemy models that start their activation within 2\" of this marker must discard a card or gain a Staggered token",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016160949338/B3F0363A59D30C60F8001CD218BBF2D8D8F89699/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016160949338/B3F0363A59D30C60F8001CD218BBF2D8D8F89699/\",\"name\":\"Aura (Staggered)\",\"rules\":\"Enemy models that start their activation within 2\\\" of this marker must discard a card or gain a Staggered token\"}}",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "de00af",
          "Name": "Custom_Model_Infinite_Bag",
          "Transform": {
            "posX": -1.12597847,
            "posY": 6.86677933,
            "posZ": 9.097818,
            "rotX": 3.907726E-06,
            "rotY": 180.019272,
            "rotZ": -1.26851519E-05,
            "scaleX": 1.53646016,
            "scaleY": 0.144412935,
            "scaleZ": 1.48942518
          },
          "Nickname": "Spiritual Chains",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1666858152071991282/5C391C2599AE5F6972D6EFA7BFC04B41D6E821E3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 7,
            "CastShadows": true
          },
          "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setName(newConfig.name)\r\n    --local child=self.getChildren()[1]\r\n    --log(child.getGUID())\r\n    --child.setCustomObject({\r\n    --    image = newConfig.image\r\n    --});\r\n    --Converst bbcode to tts frendly floats\r\n    --local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    --local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    --local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    --child.setColorTint({r,g,b})\r\n    --child.reload()\r\n    --self.reload()\r\nend",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "66aedd",
              "Name": "Custom_Token",
              "Transform": {
                "posX": -2.190965,
                "posY": 1.16860592,
                "posZ": 4.819731,
                "rotX": 0.00629013823,
                "rotY": 0.02533391,
                "rotZ": -0.004573089,
                "scaleX": 0.323614359,
                "scaleY": 1.0,
                "scaleZ": 0.323614359
              },
              "Nickname": "Spiritual Chains",
              "Description": "When this model flips, plays, or discards teh Black Jopker it is dealt 2 damage and then this token is removed",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016160949397/966923E0E85E57CA3F2A6D77D9B3394948A287E1/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"count\":1,\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016160949397/966923E0E85E57CA3F2A6D77D9B3394948A287E1/\",\"name\":\"Spiritual Chains\",\"rules\":\"When this model flips, plays, or discards teh Black Jopker it is dealt 2 damage and then this token is removed\"}}",
              "XmlUI": ""
            }
          ],
          "ChildObjects": [
            {
              "GUID": "66aedd",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 0.0,
                "posY": 0.0,
                "posZ": 0.0,
                "rotX": -8.951854E-06,
                "rotY": 0.00183049077,
                "rotZ": 1.050871E-05,
                "scaleX": 0.210623324,
                "scaleY": 6.92458773,
                "scaleZ": 0.217274666
              },
              "Nickname": "Spiritual Chains",
              "Description": "When this model flips, plays, or discards teh Black Jopker it is dealt 2 damage and then this token is removed",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55841016160949397/966923E0E85E57CA3F2A6D77D9B3394948A287E1/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "TRH_Class = \"token\"\r\n\r\nlocal config = {\r\n    --name: must be unique to your mod.\r\n    --url: url of the asset used on the marker. Consider the design of the image and use this one as an example (white with a black outline seems to work best for contrast's sake)\r\n    --color: valid hex color of the marker\r\n    --stacks: true or false - can the mini receive this marker more than once.\r\n    --name=\"Base\", url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false\r\n}\r\n--used to determin if the token already collided with a mini.  If the token is traveling fast enought it can colide multiple times before the self.destruct call is called\r\nlocal colided=false\r\n\r\n--I kinda hate how this is set up right now.  I should make it that each token calls a globle script so when i make changes it updates each token automaticall\r\n--THis is probably what should happen on all generated assets with scripts.\r\n--i wonder if lua has a extends functionallity.   Could create a sript that has this kind of function that every token inhearets.  I'll look into that later\r\nfunction onCollisionEnter(col)\r\n    if colided then\r\n        return 0\r\n    end\r\n    config.count = math.max(1, self.getQuantity())\r\n    if ((col.collision_object.getVar(\"TRH_Class\") or \"\") == \"mini\") then\r\n        colided=true\r\n        if (col.collision_object.call(\"addMarker\", config)) then self.destruct() end\r\n    end\r\nend\r\nfunction setConfig(newConfig)\r\n    config=newConfig\r\n    self.setCustomObject({\r\n        image = newConfig.image\r\n    });\r\n    self.setName(newConfig.name)\r\n    --Converst bbcode to tts frendly floats\r\n    local r=tonumber(string.sub(newConfig.color,2,3),16)/255\r\n    local g=tonumber(string.sub(newConfig.color,4,5),16)/255\r\n    local b=tonumber(string.sub(newConfig.color,6,7),16)/255\r\n    self.setDescription(newConfig.rules)\r\n    self.setColorTint({r,g,b})\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        config=config\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    --self.script_state=onSave()\r\n    local data = JSON.decode(save)\r\n    if data ~=nil then\r\n        config=data[\"config\"]\r\n    end\r\nend",
              "LuaScriptState": "{\"config\":{\"color\":\"#FFFFFF\",\"image\":\"https://steamusercontent-a.akamaihd.net/ugc/55841016160949397/966923E0E85E57CA3F2A6D77D9B3394948A287E1/\",\"name\":\"Spiritual Chains\",\"rules\":\"When this model flips, plays, or discards teh Black Jopker it is dealt 2 damage and then this token is removed\"}}",
              "XmlUI": ""
            }
          ]
        }
      ]
    },
    {
      "GUID": "3ce58e",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 0.338516,
        "posY": 0.9600001,
        "posZ": -8.126635,
        "rotX": 1.245009E-07,
        "rotY": 180.004425,
        "rotZ": 1.56181823E-08,
        "scaleX": 2.5,
        "scaleY": 1.0,
        "scaleZ": 2.5
      },
      "Nickname": "Statcard Prototype",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381411952615/515D18586581B76FB5377A922F6F8FA2A157B9F6/",
        "ImageSecondaryURL": "https://steamusercontent-a.akamaihd.net/ugc/55840381411952615/515D18586581B76FB5377A922F6F8FA2A157B9F6/",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 3,
          "Thickness": 0.1,
          "Stackable": true,
          "Stretch": true
        }
      },
      "LuaScript": "\r\n\r\nlocal mini = nil\r\nlocal faction;\r\nlocal baseScale;\r\nlocal cardFrontImage;\r\nlocal cardBackImage;\r\nlocal health;\r\nlocal imageScale;\r\nlocal modelImage;\r\nlocal name;\r\nlocal characteristics;\r\nlocal crewCard;\r\nlocal playerColor='green';\r\nlocal factionColor= Color(.70,0.19,.17);\r\nlocal cloneTo ={ 11.388285, 0.96, -12.243199 }\r\n\r\nlocal prototypes = {\r\n    base = '000000',\r\n}\r\nfunction destruct()\r\n    if mini ~= nil then\r\nmini.destruct()    \r\n    end\r\nend\r\nfunction getCharacteristics()\r\n    return characteristics\r\nend\r\nfunction getCrewCard()\r\n    return crewCard\r\nend\r\nfunction rt_createModel(params)\r\n    local faction = params.faction;\r\n    local color = Color(params.r,params.g,params.b);\r\n    local isReference = params.isReference;\r\n    factionColor = color;\r\n    if isReference ~= true then\r\n        createModel(self.getPosition(),color);\r\n    end\r\nend\r\n\r\nfunction ui_createModel()\r\n    createModel(self.getPosition())\r\nend\r\n\r\nfunction hello_world()\r\n    log(\"Hello World\")\r\nend\r\nfunction createStatCard(params)\r\n    health = params[\"health\"]\r\n    imageScale = params[\"imageScale\"]\r\n    modelImage = params[\"modelImage\"]\r\n    name = params[\"name\"]\r\n    playerColor =params[\"playerColor\"]\r\n    faction = params[\"faction\"]\r\n    cardFrontImage = params[\"cardFrontImage\"]\r\n    cardBackImage = params[\"cardBackImage\"]\r\n    baseScale = params[\"baseScale\"]\r\n    characteristics=params[\"characteristics\"]\r\n    crewCard=params[\"crewCard\"]\r\n    factionColor=factionColorLookup(faction)\r\n    --createModel(self.getPosition());\r\n    rebuildUI()\r\n    self.setName(name)\r\n    self.script_state=onSave()\r\n    self.reload()\r\nend\r\nfunction createCrewCard(params)\r\n    name = params[\"name\"]\r\n    playerColor =params[\"playerColor\"]\r\n    faction = params[\"faction\"]\r\n    cardFrontImage = params[\"cardFrontImage\"]\r\n    cardBackImage = params[\"cardBackImage\"]\r\n    factionColor=factionColorLookup(faction)\r\n    rebuildUI()\r\n    self.setName(name)\r\n    self.onSave()\r\n    self.reload()\r\nend\r\nfunction factionColorLookup(faction)\r\n    if faction==\"Guild\" then\r\n        return Color(.70,0.19,.17)\r\n    elseif faction==\"Outcast\" then\r\n        return Color(.70,0.55,.04)\r\n    else\r\n        return Color(.70,0.19,.17)\r\n    end\r\nend \r\nfunction createModel(position)\r\n    local pos = position:add(Vector(0,2,0))\r\n\r\n    objectData =  self.getData()\r\n\r\n    modelPrototype = getObjectFromGUID(prototypes.base)\r\n    local rot = self.getRotation()\r\n    model = modelPrototype.clone({position=pos,rotation=rot})\r\n\r\n    model.setScale({x=baseScale, y=1, z=baseScale})\r\n    attachments = model.getAttachments()\r\n    for key,value in pairs(attachments) do\r\n        modelElement = model.removeAttachment(0)\r\n        modelElement.setCustomObject({\r\n            image = modelImage,\r\n            image_secondary = modelImage,\r\n            image_scalar = imageScale\r\n        })\r\n        modelElement.setScale(Vector(0.40 * baseScale, 0.40 * baseScale, 0.2 ));\r\n        model.addAttachment(modelElement)\r\n    end\r\n    model.setDescription(objectData.Description)\r\n    model.setName(name)\r\n    model.script_state = \"{\\\"originalData\\\":{\\\"refCardGuid\\\":\\\"\"..self.getGUID()..\"\\\",\\\"base\\\":{\\\"color\\\":{\\\"a\\\":1,\\\"b\\\":\".. factionColor.b ..\",\\\"g\\\":\".. factionColor.g ..\",\\\"r\\\":\".. factionColor.r ..\"},\\\"size\\\":\".. baseScale * 25 ..\"},\\\"health\\\":{\\\"current\\\":\" ..health ..\",\\\"max\\\":\" ..health ..\"},\\\"imageScale\\\":\" .. imageScale  ..\"}}\";\r\n\r\n\r\n\r\n    mini = model\r\n    -- end\r\nend\r\n\r\nfunction ui_pingmini(player)\r\n    if (mini ~= nil) then\r\n        if (player.pingTable ~= nil) then\r\n            player.pingTable(mini.getPosition())\r\n        end\r\n    end\r\nend\r\n\r\nfunction rebuildAssets()\r\n    local root = 'https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/';\r\n    local assets = {\r\n        {name='ui_power', url=root..'power.png'},\r\n        {name='ui_gear', url=root..'gear.png'},\r\n        {name='ui_close', url=root..'close.png'},\r\n        {name='ui_plus', url=root..'plus.png'},\r\n        {name='ui_minus', url=root..'minus.png'},\r\n        {name='ui_reload', url=root..'reload.png'},\r\n        {name='ui_location', url=root..'location.png'},\r\n        {name='ui_bars_new', url=root..'bars_new.png'},\r\n        {name='ui_arrow_u', url=root..'arrow_u.png'},\r\n        {name='ui_arrow_d', url=root..'arrow_d.png'},\r\n        {name='ui_arrow_l', url=root..'arrow_l.png'},\r\n        {name='ui_arrow_r', url=root..'arrow_r.png'},\r\n    }\r\n\r\n    assetBuffer = {}\r\n    local bufLen = 0\r\n    for idx,guid in pairs(mapI2G) do\r\n        local mini = getObjectFromGUID(guid)\r\n        if (mini ~= nil) then\r\n            for i,marker in pairs(mini.call('getMarkers', {})) do\r\n                if (assetBuffer[marker.url] == nil) then\r\n                    bufLen = bufLen + 1\r\n                    assetBuffer[marker.url] = self.guid..'_mk_'..bufLen\r\n                    table.insert(assets, {name=self.guid..'_mk_'..bufLen, url=marker.url})\r\n                end\r\n            end\r\n        end\r\n    end\r\n    self.UI.setCustomAssets(assets)\r\nend\r\n\r\nfunction rebuildUI()\r\n    self.setCustomObject({\r\n        image = cardFrontImage,\r\n        image_secondary = cardBackImage,\r\n    });\r\n\r\n    local ui = {\r\n        {tag='Defaults', children={\r\n            {tag='Text', attributes={color='#cccccc', fontSize='18', alignment='MiddleLeft'}},\r\n            {tag='InputField', attributes={fontSize='24', preferredHeight='40'}},\r\n            {tag='ToggleButton', attributes={fontSize='18', preferredHeight='40', colors='#ffcc33|#ffffff|#808080|#606060', selectedBackgroundColor='#dddddd', deselectedBackgroundColor='#999999'}},\r\n            {tag='Button', attributes={fontSize='12',textColor='#111111', preferredHeight='40', colors='#dddddd|#ffffff|#808080|#f6f6f6'}},\r\n            {tag='Toggle', attributes={textColor='#cccccc'}},\r\n        }},\r\n        \r\n        {tag='button', attributes={onClick='ui_pingmini', image='ui_location',  colors='#ccccccff|#ffffffff|#404040ff|#808080ff', width='20', height='20', position='-40 -110 -5', rotation='0 0 180' }},\r\n        {tag='button', attributes={onClick='ui_createModel',text='Spawn Model',  colors='#ccccccff|#ffffffff|#404040ff|#808080ff', width='120', height='20', position='0 110 -5', rotation='0 0 180' }} \r\n    }\r\n    \r\n    self.UI.setXmlTable(ui)\r\n    \r\nend\r\n\r\nfunction onSave()\r\n    miniguid = ''\r\n    if mini ~= nil then\r\n        miniguid = mini.getGUID()\r\n    end\r\n    local save = {\r\n        mini = miniguid,\r\n        baseScale = baseScale,\r\n        health = health,\r\n        imageScale = imageScale,\r\n        modelImage = modelImage,\r\n        name = name,\r\n        playerColor = playerColor, \r\n        faction = faction,\r\n        cardFrontImage = cardFrontImage,\r\n        cardBackImage = cardBackImage,\r\n        characteristics=characteristics,\r\n        crewCard=crewCard,\r\n    }\r\n    return JSON.encode(save)\r\nend\r\n\r\n\r\nfunction onLoad(save)\r\n    local data = JSON.decode(save)\r\n    mini = getObjectFromGUID(data.mini)\r\n    baseScale = data.baseScale;\r\n    health = data.health;\r\n    imageScale = data.imageScale;\r\n    modelImage = data.modelImage;\r\n    characteristics=data.characteristics;\r\n    crewCard=crewCard;\r\n    --cardFrontImage = data.cardFrontImage;\r\n    --cardBackImage =data.cardBackImage;\r\n    name = data.name;\r\n    faction = data.faction or 'Arcanist';\r\n    playerColor = data.playerColor or 'Blue';\r\n\r\n    rebuildUI()\r\nend",
      "LuaScriptState": "{\"baseScale\":\"1.2\",\"faction\":\"Arcanist\",\"health\":\"12\",\"imageScale\":\"2.3\",\"mini\":\"\",\"modelImage\":\"https://steamusercontent-a.akamaihd.net/ugc/1651098116529271567/0FB525A7BC2C0286C88C894C3EE7CFEDB822F6F7/\",\"name\":\"Lady Justice\",\"playerColor\":\"Blue\"}",
      "XmlUI": "",
      "CustomUIAssets": [
        {
          "Type": 0,
          "Name": "ui_location",
          "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/location.png"
        }
      ]
    },
    {
      "GUID": "000000",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -4.38088465,
        "posY": 0.9599997,
        "posZ": -8.9013,
        "rotX": -2.319685E-06,
        "rotY": 209.997818,
        "rotZ": -2.38104076E-06,
        "scaleX": 1.2,
        "scaleY": 1.0,
        "scaleZ": 1.2
      },
      "Nickname": "Model Prototype",
      "Description": "RSS_Model",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.5,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": true,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/922542758751649800/E140136A8F24712A0CE7E63CF05809EE5140A8B7/",
        "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1616187808495853030/D324EFA2B5648EACA4A376C87A01808EB63CC18F/",
        "NormalURL": "",
        "ColliderURL": "https://steamusercontent-a.akamaihd.net/ugc/922542758751649800/E140136A8F24712A0CE7E63CF05809EE5140A8B7/",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "RSS_Class = 'Model';\r\nTRH_Class =\"mini\"\r\n------ CLASS VARIABLES ----------------------\r\n\r\n\tlocal ChildObjs = {\r\n\t\taura_obj = nil\r\n\t};\r\n\tlocal Conditions = {}\r\n\tlocal originalData = nil;\r\n\tlocal state = {\r\n\t\tconditions={Adaptable = 0,Adversary = 0,Bolstered = 0,Burning = 0,Craven = 0,Distracted = 0,Entranced = 0,Fast = 0,Focused = 0,Hastened = 0,Impact = 0,Injured = 0,Insight = 0,Poison = 0,Shielded = 0,Slow = 0,Staggered = 0,Stunned = 0,AuraHazardous = 0, AuraConcealment = 0,Summon=0},\r\n\t\textras={Aura = 0,Activated = 0,Mode = 0},\r\n\t\ttokens={},\r\n\t\thealth={current=-1,max= 9},\r\n\t\tbase={size=30,color=Color(1,0.5,1)},\r\n\t\timageScale=1.5,\r\n\t\t\r\n\t\tmoveHistory={},\r\n\t\t\r\n\r\n\t\treferenceCard = { GUID = '', obj = nil},\r\n\t\r\n\t};\r\n\r\n\tlocal UIStatus = {\r\n\t\tBlue = {rotation = -2},\r\n\t\tRed = {rotation = -2},\r\n\t\tBlack = {rotation = -2},\r\n\t\tGrey = {rotation = -2},\r\n\t};\r\n\r\n\t\r\n\r\n------ LIFE CICLE EVENTS --------------------\r\n\r\n\tfunction onDestroy()\r\n\t\tif (ChildObjs.aura_obj ~= nil) then ChildObjs.aura_obj.destruct() end\r\n\tend\r\n\r\n\tfunction onLoad(save)\r\n\t\t--self.script_state=onSave()\r\n\t\tsave = JSON.decode(save) or {}\r\n\t\tself.setDescription(\"RSS_Model\");\r\n\t\trecoverState(save)\r\n\r\n\t\trebuildAssets()\r\n\t\tself.UI.setXml(ui())\r\n\t\tRefreshModelShape()\r\n\t\tshowAura()\r\n\tend\r\n\t\r\n\tfunction onSave()\r\n\t\tlocal data={}\r\n\t\tdata.state = state;\r\n\t\tdata.originalData = originalData ~= nil and originalData or state;\r\n\t\t\r\n\t\treturn JSON.encode(data)\r\n\tend\r\n\r\n\r\n\tfunction onUpdate()\r\n\t\tfor _, player in ipairs(Player.getPlayers()) do\r\n\t\t\tif IsPlayerSuscribed(player.color) then\r\n\t\t\t\tHUDLookAtPlayer(player);\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\r\n\tfunction recoverState(save)\r\n        if save.state ~= nil then\r\n            local defaults = state.conditions          -- your zero-defaults from the literal table\r\n\t\t\tlocal defaults2 = state.extras\r\n            --state = save.state\r\n            -- re-apply any missing condition keys back to zero\r\n            for name,_ in pairs(defaults) do\r\n              state.conditions[name] = state.conditions[name] or 0\r\n            end\r\n\r\n\t\t\tfor name,_ in pairs(defaults2) do\r\n\t\t\t\tstate.extras[name] = state.extras[name] or 0\r\n\t\t\tend\r\n            -- ensure Mode is still defined\r\n            state.extras.Mode = state.extras.Mode or 0\r\n        else \r\n            \r\n            originalData = save.originalData;\r\n            state.health = originalData.health;\r\n            state.base = originalData.base;\r\n            state.imageScale = originalData.imageScale;\r\n            state.base.color = Color(state.base.color); \r\n        end\r\n\t\t\r\n\r\n\t\t-- TODO Modify State With original Data\r\n\tend\r\n\r\n------ STATE ACTIONS ------------------------\r\n\r\n\tfunction SetInitialState(newState) --Tobe called from the reference card\r\n\t\tstate.state = newState.state;\r\n\t\tstate.health = newState.health;\r\n\t\tstate.base = newState.base;\r\n\t\tstate.imageScale = newState.imageScale;\r\n\t\tstate.referenceCard = newState.referenceCard;\r\n\t\t--state.name = state.name;\r\n\tend\r\n\r\n\tfunction ModifyHealth(params)\r\n\t\tstate.health.current =math.max(0, math.min(state.health.max, state.health.current + params.amount));\t\r\n\t\tSyncHealth()\r\n\tend\r\n\r\n\tfunction ModifyAura(params)\r\n\t\tstate.extras.Aura = math.max(0,state.extras.Aura + params.amount);\r\n\t\tlocal newScale = 0;\r\n\t\tif state.extras.Aura > 0 then\r\n\t\t\tnewScale = state.extras.Aura+(state.base.size/50);\r\n\t\tend\r\n\r\n\t\tChildObjs.aura_obj.setScale(Vector(newScale,1,newScale));\r\n\t\tSyncExtra(\"Aura\")\r\n\tend\r\n\r\n\tfunction ModifyCondition(params)\r\n        log(params)\r\n\t\tlocal extrasKeys = { Mode = true, Aura = true, Activated = true }\r\n\r\n\t\tlocal previousValue = 0;\r\n\r\n\t\tif extrasKeys[params.name] then \r\n\t\t\tlocal previousValue = state.extras[params.name]\r\n\t\t\tif params.amount == 0 then -- toggle\r\n\t\t\t\tstate.extras[params.name] = math.max(0, 1 - state.extras[params.name])\t\r\n\t\t\telse\r\n\t\t\t\tif Conditions[params.name].loop ~= nil then\r\n\t\t\t\t\tstate.extras[params.name] = math.max(0, (state.extras[params.name] + params.amount + Conditions[params.name].loop) % Conditions[params.name].loop)\r\n\t\t\t\telse\r\n\t\t\t\t\tstate.extras[params.name] = math.max(0, state.extras[params.name] + params.amount)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\telse \r\n\t\t\tlocal previousValue = state.conditions[params.name]\r\n\t\t\tif params.amount == 0 then -- toggle\r\n                \r\n\t\t\t\tstate.conditions[params.name] = math.max(0, 1 - state.conditions[params.name])\r\n\t\t\telse\r\n\t\t\t\tif Conditions[params.name].loop ~= nil then\r\n\t\t\t\t\tstate.conditions[params.name] = math.max(0, (state.conditions[params.name] + params.amount + Conditions[params.name].loop) % Conditions[params.name].loop)\r\n\t\t\t\telse\r\n\t\t\t\t\tstate.conditions[params.name] = math.max(0, state.conditions[params.name] + params.amount)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\tlocal states  = self.getData();\r\n\r\n\t\tSync()\r\n\t\r\n\t\tif extrasKeys[params.name] then\r\n\t\t\tprint(self.getData().Nickname .. [[: ']] .. params.name .. [[' ]] .. previousValue .. [[->]] .. state.extras[params.name])\r\n\t\t\tSyncExtra(params.name)\r\n\t\telse\r\n            \r\n\t\t\tprint(self.getData().Nickname .. [[: ']] .. params.name .. [[' ]] .. previousValue .. [[->]] .. state.conditions[params.name])\r\n\t\t\tSyncCondition(params.name)\r\n\t\tend\r\n\r\n\r\n\tend\r\n\r\n\tfunction ModifyMoveRange(params)\r\n\t\tstate.move.moveRange = math.max(0, state.move.moveRange + params.amount);\r\n\tend\r\n\r\n------ MODEL MANIPULATION -------------------\r\n\t\r\n\tfunction AuraFollowObject(params)\r\n\t\tif ChildObjs.aura_obj ~= nil then\r\n\t\t\tChildObjs.aura_obj.setVar('parent',params.obj);\r\n\t\tend\r\n\tend\r\n\r\n\tfunction AuraResetFollow()\r\n\t\tif ChildObjs.aura_obj ~= nil then\r\n\t\t\tChildObjs.aura_obj.setVar('parent',self);\r\n\t\tend\r\n\tend\r\n\r\n\tfunction RefreshModelShape()\r\n\t\tlocal attachments = self.getAttachments()\r\n\t\tfor key,value in pairs(attachments) do\r\n\t\t\tmodelElement = self.removeAttachment(0)\r\n\t\t\tmodelElement.setCustomObject({\r\n\t\t\t\timage_scalar = tonumber(state.imageScale * 1.2)\r\n\t\t\t});\r\n\t\t\t-- modelElement.getComponent('MeshCollider').set('enabled',false)\r\n\t\t\tself.addAttachment(modelElement)\r\n\t\tend \r\n\t\tlocal baseScale = state.base.size / 25;\r\n\t\tself.setScale(Vector(baseScale,1,baseScale))\r\n\t\tRefreshBaseColor()\r\n\tend\r\n\t\r\n\tfunction RefreshBaseColor()\r\n\t\tif state.extras.Activated == 0 then\r\n\t\t\tself.setColorTint(state.base.color)\r\n\t\telse\r\n\t\t\tself.setColorTint( Color(state.base.color):lerp(Color.white, 0.45) )\r\n\t\tend\r\n\tend\r\n------ UI GENERATION ------------------------\r\n\tfunction calculatePlayerRotation()\r\n\t\tfor _, player in ipairs(Player.getPlayers()) do\r\n\t\t\tUIStatus[player.color].rotation = player.getPointerRotation() - self.getRotation().y + 180;\r\n\t\tend\r\n\tend\r\n\tfunction Sync()\r\n        resetPlayerRotation()\r\n\t\tself.UI.setXml(ui())\r\n\t\t--propagateToReferenceCard()\r\n\tend\r\n\t\r\n\tfunction SyncCondition(name)\r\n\t\tlocal secondary = Conditions[name].secondary;\r\n\t\tlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n\t\r\n\t\tfor k,color in pairs({'Red', 'Blue','Grey','Black'}) do\r\n\t\t\tself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n\t\t\t\tcolor= Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or '22'),\r\n\t\t\t\timage= imageName,\r\n\t\t\t});\r\n\t\t\tself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n\t\t\t\tactive= (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false'),\r\n\t\t\t\ttext= state.conditions[name] \r\n\t\t\t});\r\n\t\tend\r\n\tend\t\r\n\r\n\tfunction SyncExtra(name)\r\n\t\tlocal secondary = Conditions[name].secondary;\r\n\t\tlocal imageName = (secondary == nil and name or (state.extras[name] > 1 and name or secondary));\r\n\t\r\n\t\tfor k,color in pairs({'Red', 'Blue','Grey','Black'}) do\r\n\t\t\tself.UI.setAttributes(color..\"_ConditionImage_\".. name, {\r\n\t\t\t\tcolor= Conditions[imageName].color .. (state.extras[name] > 0  and 'ff' or '22'),\r\n\t\t\t\timage= imageName,\r\n\t\t\t});\r\n\t\t\tself.UI.setAttributes(color..\"_ConditionText_\".. name, {\r\n\t\t\t\tactive= (Conditions[name].stacks and state.extras[name] > 0 and 'true' or 'false'),\r\n\t\t\t\ttext= state.extras[name] \r\n\t\t\t});\r\n\t\tend\r\n\r\n\t\tif name == \"Activated\" then\r\n\t\t\tRefreshBaseColor()\r\n\t\tend\r\n\tend\t\r\n\t\r\n\tfunction SyncHealth()\r\n\t\tfor k,color in pairs({'Red', 'Blue','Grey','Black'}) do\r\n\t\t\tself.UI.setAttributes( color .. \"_HealthBar_Text\", {\r\n\t\t\t\ttext = state.health.current.. [[/]] .. state.health.max\r\n\t\t\t});\r\n\t\t\tself.UI.setAttributes(color .. \"_HealthBar\", {\r\n\t\t\t\tpercentage= (state.health.current / state.health.max * 100)\r\n\t\t\t});\r\n\t\tend\r\n\tend\t\r\n\r\n\tfunction IsPlayerSuscribed(color)\r\n\t\t-- print(color .. \" -> \" ..  ((UIStatus[color] ~= nil) and 'true' or 'false') )\r\n\t\treturn UIStatus[color] ~= nil;\r\n\tend\r\n\tfunction resetPlayerRotation()\r\n\t\tfor index,player in pairs(UIStatus) do\r\n\t\t\tUIStatus[index].rotation=-2\r\n\t\tend\r\n\tend\r\n\tfunction HUDLookAtPlayer(player)\r\n        --if true then\r\n        --    return false\r\n        --end\r\n\t\tlocal playerRotation  = player.getPointerRotation();\r\n        --log(\"playerRotation\"..playerRotation)\r\n\t\tif playerRotation == nil then playerRotation = 0 end;\r\n\t\tlocal pointerRotation = playerRotation - self.getRotation().y +180;\r\n\t\tpointerRotation = math.floor((pointerRotation+15) / 30)\r\n\t\tif pointerRotation ~= UIStatus[player.color].rotation then\r\n\t\t\tself.UI.setAttribute(player.color .. '_PlayerHUDPivot','rotation','0 0 '.. -30 * pointerRotation  )\r\n\t\t\tUIStatus[player.color].rotation = pointerRotation;\r\n\t\tend\r\n\tend\r\n\r\n\tfunction ui() \r\n\t\treturn [[\r\n\t\t\t<Panel color=\"#FFFFFFff\" height=\"0\" width=\"0\" rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"true\" >]]..\r\n\t\t\tPlayerHUDPivot('Blue')..\r\n\t\t\tPlayerHUDPivot('Red')..\r\n\t\t\tPlayerHUDPivot('Grey')..\r\n\t\t\tPlayerHUDPivot('Black')..\r\n\t\t\t[[</Panel>\r\n\t\t]];\r\n\tend\r\n\r\n\tfunction rebuildAssets()\r\n\t\tlocal assets = {};\r\n\t\tfor conditionName, value in pairs(Conditions) do\r\n\t\t\tassets[#assets+1]={name=conditionName , url = value.url};\r\n\t\tend\r\n\r\n\t\tself.UI.setCustomAssets(assets)\r\n\tend\r\n\r\n\tfunction PlayerHUDPivot(color)\r\n\t\treturn [[\r\n\t\t\t<Panel id=']]..color..[[_PlayerHUDPivot' visibility=']]..color..[[' height=\"160\" width=\"100\" position='0 0 -240' rotation='0 0 ]] .. - UIStatus[color].rotation .. [[' rectAlignment=\"MiddleCenter\" childForceExpandWidth=\"false\">\r\n\t\t\r\n\t\t\t]]..(state.extras.Mode == 0 and PlayerHUDContainer(color) or Compact_PlayerHUD(color))..[[\r\n\t\t</Panel>\r\n\t\t]]\r\n\tend\r\n\r\n\t\r\n\tfunction Compact_PlayerHUD(color)\r\n\t\treturn [[\r\n\t\t\t<Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"60\" rectAlignment=\"MiddleCenter\"  rotation='-35 0 0' position='0 0 0' childForceExpandWidth=\"false\">]]..\r\n\t\t\tCompact_HUDConditions(color) ..\r\n\t\t\t\t[[<ProgressBar width=\"100%\" height=\"20\" id=\"]] .. color .. [[_HealthBar\" color='#00000080' fillImageColor=\"#44AA22FF\" percentage=\"]] ..(state.health.current / state.health.max * 100) .. [[\" textColor=\"#00000000\"/>  ]] ..\r\n\t\t\t\t[[<Text id=']] .. color .. [[_HealthBar_Text' fontSize='18' height=\"20\" onClick='UI_ModifyHealth' text=']] .. state.health.current.. [[/]] .. state.health.max.. [[' color='#ffffff' fontStyle='Bold' outline='#000000' outlineSize='1 1' />]] ..\r\n\t\t\t[[</Panel>\r\n\t\t]]\r\n\tend\r\n\r\n\r\n\tfunction PlayerHUDContainer(color)\r\n\t\treturn [[\r\n\t\t\t<Panel id='PlayerHUD_Container' active='true' height=\"80\" width=\"128\" rectAlignment=\"MiddleCenter\"  rotation='-35 0 0' position='0 50 0' childForceExpandWidth=\"false\">]]..\r\n\t\t\t\tHUDConditions(color) ..\r\n\t\t\t\t[[<ProgressBar width=\"100%\" height=\"30\" id=\"]] .. color .. [[_HealthBar\" color='#00000080' fillImageColor=\"#44AA22FF\" percentage=\"]] ..(state.health.current / state.health.max * 100) .. [[\" textColor=\"#00000000\"/>  ]] ..\r\n\t\t\t\t[[<Text id=']] .. color .. [[_HealthBar_Text' fontSize='25' height=\"30\" onClick='UI_ModifyHealth' text=']] .. state.health.current.. [[/]] .. state.health.max.. [[' color='#ffffff' fontStyle='Bold' outline='#000000' outlineSize='1 1' />]] ..\r\n\t\t\t[[</Panel>\r\n\t\t]]\r\n\tend\r\n\r\n\tfunction Compact_HUDConditions(color)\r\n\t\tlocal size = 18\r\n\t\tlocal size2 = 10\r\n\t\tlocal row1 = 0\r\n\t\tlocal row2 = 0\r\n\t\tlocal output = [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' > ]]\r\n\t\r\n\t\tfor key, value in pairs(state.conditions) do\r\n\t\t\tif value ~= 0 then\r\n\t\t\t\tif row1 < 6 then\r\n\t\t\t\t\toutput = output .. HUDSingleCondition(color, key, 0.5 + row1, 1.5, size2)\r\n\t\t\t\t\trow1 = row1 + 1\r\n\t\t\t\telse\r\n\t\t\t\t\toutput = output .. HUDSingleCondition(color, key, 0.5 + row2, 2.5, size2)\r\n\t\t\t\t\trow2 = row2 + 1\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\t\r\n\t\toutput = output .. HUDSingleCondition(color, \"Aura\", 1.5, -1, size)\r\n\t\toutput = output .. HUDSingleCondition(color, \"Activated\", 0.5, -1, size)\r\n\t\toutput = output .. HUDSingleCondition(color, \"Mode\", 2.5, -1, size)\r\n\t\toutput = output .. [[</Panel>]]\r\n\t\r\n\t\treturn output\r\n\tend\r\n\r\n\tfunction HUDConditions(color)\r\n\t\tlocal size = 30;\r\n\t\tlocal row1 = 0;\r\n\t\tlocal row2 = 0;\r\n\t\tlocal output =  [[<Panel width=\"100%\" rectAlignment=\"MiddleLeft\" position='0 0 0' > ]]\r\n\r\n\t\tfor key, value in pairs(state.conditions) do\r\n\t\t\tif value ~= 0 then\r\n\t\t\t\tif row1 < 4 then\r\n\t\t\t\t\toutput = output .. HUDSingleCondition(color, key, row1, 1, size)\r\n\t\t\t\t\trow1 = row1 + 1\r\n\t\t\t\telse\r\n\t\t\t\t\toutput = output .. HUDSingleCondition(color, key, row2, -1, size)\r\n\t\t\t\t\trow2 = row2 + 1\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\r\n\t\toutput = output .. HUDSingleCondition(color,\"Aura\", 4 ,1,size) \r\n\t\toutput = output .. HUDSingleCondition(color,\"Activated\", 4 ,0,size) \r\n\t\toutput = output .. HUDSingleCondition(color,\"Mode\", 4 ,-1,size) \r\n\t\toutput = output .. [[</Panel>]]\r\n\r\n\t\treturn output\r\n\tend\r\n\r\n\r\n\tfunction UI_ModifyCondition(alt,name) if alt ~= '-3' then ModifyCondition({name=name,amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\n\tfunction UI_ModifyAura(p,alt) if alt ~= '-3' then ModifyAura({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\n\tfunction UI_ModifyHealth(p,alt) if alt ~= '-3' then ModifyHealth({amount= (alt == '-1' and 1 or (alt == '-2' and -1) or 0 ) }) end end\r\n\t\r\n\tfunction UI_ModifyBurning(p,alt) UI_ModifyCondition(\"0\",\"Burning\") end\r\n\tfunction UI_ModifyPoison(p,alt) UI_ModifyCondition(\"0\",\"Poison\") end\r\n\tfunction UI_ModifyInjured(p,alt) UI_ModifyCondition(\"0\",\"Injured\") end\r\n\tfunction UI_ModifyBolstered(p,alt) UI_ModifyCondition(\"0\",\"Bolstered\") end\r\n\tfunction UI_ModifyDistracted(p,alt) UI_ModifyCondition(\"0\",\"Distracted\") end\r\n\tfunction UI_ModifyImpact(p,alt) UI_ModifyCondition(\"0\",\"Impact\") end\r\n\tfunction UI_ModifyEntranced(p,alt) UI_ModifyCondition(\"0\",\"Entranced\") end\r\n\tfunction UI_ModifyFast(p,alt) UI_ModifyCondition(\"0\",\"Fast\") end\r\n\tfunction UI_ModifyStunned(p,alt) UI_ModifyCondition(\"0\",\"Stunned\") end\r\n\tfunction UI_ModifyStaggered(p,alt) UI_ModifyCondition(\"0\",\"Staggered\") end\r\n\tfunction UI_ModifyHastened(p,alt) UI_ModifyCondition(\"0\",\"Hastened\") end\r\n\tfunction UI_ModifyAdversary(p,alt) UI_ModifyCondition(\"0\",\"Adversary\") end\r\n\tfunction UI_ModifyActivated(p,alt) UI_ModifyCondition(\"0\",\"Activated\") end\r\n\tfunction UI_ModifyMode(p,alt)  UI_ModifyCondition(\"0\",\"Mode\") end\r\n\tfunction UI_ModifyInsight(p,alt) UI_ModifyCondition(\"0\",\"Insight\") end\r\n\tfunction UI_ModifyFocused(p,alt) UI_ModifyCondition(\"0\",\"Focused\") end\r\n\tfunction UI_ModifyShielded(p,alt) UI_ModifyCondition(\"0\",\"Shielded\") end\r\n    function UI_ModifyCraven(p,alt) UI_ModifyCondition(\"0\",\"Craven\") end\r\n\tfunction UI_ModifyAdaptable(p,alt) UI_ModifyCondition(\"0\",\"Adaptable\") end\r\n    function UI_ModifySummon(p,alt) UI_ModifyCondition(\"0\",\"Summon\") end\r\n    function UI_ModifyAuraHazardous(p,alt) UI_ModifyCondition(\"0\",\"AuraHazardous\") end\r\n    function UI_ModifyAuraConcealment(p,alt) UI_ModifyCondition(\"0\",\"AuraConcealment\") end\r\n\r\n\tfunction HUDSingleCondition(color,name,x,y,size)\r\n\t\r\n\t\tlocal id = \"ConditionFrame_\" .. name ;\r\n\r\n\t\treturn [[<Panel id=\"]] .. id ..[[\" width=\"]] ..size..[[\" height=\"]] ..size..[[\" alignment='LowerLeft' position=']] ..((x* (size +2)) - (1.5*size + 2)).. [[ ]] .. y*( (size +2)) .. [[ 0' ]] .. \r\n\t\t[[onClick='UI_Modify]] .. name ..[[()'>]] ..\r\n\t\t\tHUDSingleConditionBody(color,name,size)..\r\n\t\t[[</Panel>]];\r\n\tend\r\n\r\n\tfunction HUDSingleConditionBody(color,name,size)\r\n\t\tlocal extrasKeys = { Mode = true, Aura = true, Activated = true }\r\n\t\tlocal secondary = Conditions[name].secondary;\r\n\r\n\t\tif extrasKeys[name] then\r\n\t\t\tlocal imageName = (secondary == nil and name or (state.extras[name] > 1 and name or secondary));\r\n\t\t\tlocal colorBlock = Conditions[imageName].color .. (state.extras[name] > 0  and 'ff' or '22'); --.. [[|]] .. Conditions[imageName].color .. [[ff|#00000000|#00000000]];\r\n\t\t\treturn [[\r\n\t\t\t\t<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. colorBlock .. [[\" rectAlignment='LowerLeft' width=']] ..size..[[' height=']] ..size..[['/>\r\n\t\t\t\t<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.extras[name] > 0 and 'true' or 'false')  ..[['  fontSize=']] ..math.floor(size*0.85)..[[' text=']] .. state.extras[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n\t\t\t]]\r\n\t\tend\r\n\r\n\t\tlocal imageName = (secondary == nil and name or (state.conditions[name] > 1 and name or secondary));\r\n\t\tlocal colorBlock = Conditions[imageName].color .. (state.conditions[name] > 0  and 'ff' or '22'); --.. [[|]] .. Conditions[imageName].color .. [[ff|#00000000|#00000000]];\r\n\t\treturn [[\r\n\t\t\t<Image id=\"]]..color ..[[_ConditionImage_]]..name ..[[\" image=\"]] .. imageName .. [[\" color=\"]] .. colorBlock .. [[\" rectAlignment='LowerLeft' width=']] ..size..[[' height=']] ..size..[['/>\r\n\t\t\t<Text  id=\"]]..color ..[[_ConditionText_]]..name ..[[\" active=']] .. (Conditions[name].stacks and state.conditions[name] > 0 and 'true' or 'false')  ..[['  fontSize=']] ..math.floor(size*0.85)..[[' text=']] .. state.conditions[name] .. [[' color='#ffffff' fontStyle='Bold'  rectAlignment='LowerLeft' outline='#000000' outlineSize='1 1' />\r\n\t\t]]\r\n\t\r\n\tend\r\n\r\n\r\n\tConditions = {\r\n\t\tFast = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554385209/698B13597E185E6ACA0AB19C13A118A3C1BEEB4D/\", color=\"#E2D064\", stacks=false },\r\n\t\tSlow = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554366701/F479B20690BB037348F53B802F99B9B68ACFCCEA/\", color=\"#B8B8B8\", stacks=false },\r\n\t\tAdversary = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/\", color=\"#DF2020\", stacks=false },\r\n\t\tPoison = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554095214/37B3943D3C71EE6BFD13027145BDE00D0D56ED3B/\", color=\"#83CD4D\", stacks=false },\r\n\t\tBurning = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554318009/A00031DC30FDC7D6EB7AEA3DFCF8AAD0754CD4CB/\", color=\"#DB8E47\", stacks=false },\r\n\t\tFocused = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554725833/7B52C3AD5915BFC06B7E68025F5448C2862E0789/\", color=\"#9A37D3\", stacks=false },\r\n\t\tDistracted = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554407310/DA85F94D429B073CEB18B2AB4F24FC0041F1CF30/\", color=\"#FF42CF\", stacks=false },\r\n\t\tInjured = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554292969/5474B842DEC8F08CB249F3B24683FE95D58332FC/\", color=\"#920606\", stacks=false },\r\n\t\tStaggered = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554150868/60F4FB8B23A6586775CB50311E1F7DD6BC0C1620/\", color=\"#138C01\", stacks=false },\r\n\t\tStunned = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554191671/98EB8191C3884783E74F6FF8066097D2D7296CBF/\", color=\"#FFFFFF\", stacks=false },\r\n\t\tShielded = { url=\"https://steamusercontent-a.akamaihd.net/ugc/1019447087554495459/45E41E4CF603049EEF4B3EAB39DC0B3DC93DFE78/\", color=\"#6AC3FF\", stacks=false },\r\n        Craven = { url=\"https://steamusercontent-a.akamaihd.net/ugc/28819418391028798/3AB3D764F98CEE306B56A7E6FE17AFFEFDBC2687/\", color=\"#FF87DC\", stacks=false },\r\n\t\tImpact = { url=\"https://steamusercontent-a.akamaihd.net/ugc/28819418391028913/081086FABAFA8AFAAFF52C72C72EDAA32F55AFD0/\", color=\"#E9B175\", stacks=false },\r\n\t\tAdaptable = { url=\"https://steamusercontent-a.akamaihd.net/ugc/28819418391028626/826E0ECCF3752137A1989CE47F8A7E1DF6FE4CCD/\", color=\"#FFFFFF\", stacks=false },\r\n\t\tInsight = { url=\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300435/EED601E8B8F12D7360DFEA2B57A2B8AEBEE2174C/\", color=\"#B7FFDF\", stacks=false},\r\n\t\tHastened = { url=\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300292/CFDFBE1D760E16AA10E6E854866DA25F2D67CCF9/\", color=\"#FEE711\", stacks=false},\r\n\t\tEntranced = { url=\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300201/69E94F23A27A360B496D5AC6F814AE0D29C03D17/\", color=\"#A020F0\", stacks=false},\r\n\t\tBolstered = { url=\"https://steamusercontent-a.akamaihd.net/ugc/28819418390300000/32313584E40B0E1BCF00631370C61EBAF785F3C4/\", color=\"#F53423\", stacks=false},\r\n        Summon={ url=\"https://steamusercontent-a.akamaihd.net/ugc/55841016162692762/7B070A76AD85B4DED02C679C0FC2D3DFC8CA3CBA/\", color=\"#FFFFFF\", stacks=false},\r\n        AuraHazardous={ url=\"https://steamusercontent-a.akamaihd.net/ugc/55841016162692694/F49028E0DA3FB690A11582D1774A2370C955E86E/\", color=\"#FFFFFF\", stacks=false},\r\n        AuraConcealment={ url=\"https://steamusercontent-a.akamaihd.net/ugc/55841016162692558/0B7B096736227AADEC0CBC8081E95057A375C6E3/\", color=\"#FFFFFF\", stacks=false},\r\n\t\tAura = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png\", color=\"#99aa22\", stacks=true },\r\n\t\tActivated  = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/flag.png\", color=\"#bbbb22\", stacks=false },\r\n\t\tMode  = { url=\"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/gear.png\", color=\"#bbffbb\", stacks=false, loop = 2 }\r\n\t\t\r\n\t}\r\n\r\n------ Object SPAWMERS ----------------------\r\n\r\n\tfunction showAura()\r\n\r\n\t\tlocal a=(state.extras.Aura > 0) and (state.extras.Aura+(state.base.size/50)) or 0; --based on model base size\r\n\t\r\n\t\tlocal me = self\r\n\t\tlocal clr = self.getColorTint()\r\n\t\t\tChildObjs.aura_obj=spawnObject({\r\n\t\t\ttype='custom_model',\r\n\t\t\tposition=self.getPosition(),\r\n\t\t\trotation=self.getRotation(),\r\n\t\t\tscale={a,1,a},\r\n\t\t\tmass=0,\r\n\t\t\tuse_gravity=false,\r\n\t\t\tsound=false,\r\n\t\t\tsnap_to_grid=false,\r\n\t\t\tcallback_function=function(b)\r\n\t\t\t\tb.setColorTint(clr)\r\n\t\t\t\tb.setVar('parent',self)\r\n\t\t\t\tb.setLuaScript([[\r\n\t\t\t\t\tlocal lastParent = nil\r\n\t\t\t\t\tlocal clock = 2\r\n\t\t\t\t\tfunction onLoad() \r\n\t\t\t\t\t\t(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\r\n\t\t\t\t\t\tWait.condition(\r\n\t\t\t\t\t\t\tfunction() \r\n\t\t\t\t\t\t\t\t(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \r\n\t\t\t\t\t\t\tend, \r\n\t\t\t\t\t\t\tfunction() \r\n\t\t\t\t\t\t\t\treturn not(self.loading_custom) \r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t) \r\n\t\t\t\t\tend \r\n\t\t\t\t\tfunction onUpdate() \r\n\t\t\t\t\t\tif (parent ~= nil) then \r\n\t\t\t\t\t\t\tif clock < 0 then\r\n\t\t\t\t\t\t\t\tclock = 2;\r\n\t\t\t\t\t\t\t\tif self.getPosition():distance(parent.getPosition()) > 0.01 then\r\n\t\t\t\t\t\t\t\t\tself.setPosition(parent.getPosition())\r\n\t\t\t\t\t\t\t\t\tself.setRotation(parent.getRotation()) \r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tclock = clock - 1\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\tself.destruct() \r\n\t\t\t\t\t\tend \r\n\t\t\t\t\tend\r\n\t\t\t\t]])\r\n\t\t\t\tb.getComponent('MeshRenderer').set('receiveShadows',false)\r\n\t\t\t\tb.mass=0\r\n\t\t\t\tb.bounciness=0\r\n\t\t\t\tb.drag=0\r\n\t\t\t\tb.use_snap_points=false\r\n\t\t\t\tb.use_grid=false\r\n\t\t\t\tb.use_gravity=false\r\n\t\t\t\tb.auto_raise=false\r\n\t\t\t\tb.auto_raise=false\r\n\t\t\t\tb.sticky=false\r\n\t\t\t\tb.interactable=false\r\n\t\t\tend\r\n\t\t})\r\n\t\tChildObjs.aura_obj.setCustomObject({\r\n\t\t\tmesh='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj',\r\n\t\t\tcollider='https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj',\r\n\t\t\tmaterial=3,\r\n\t\t\tspecularIntensity=0,\r\n\t\t\tcast_shadows=false\r\n\t\t})\r\n\tend\r\n------ Wip ----------------------------------\r\n\tfunction addMarker(config)\r\n\t\t\r\n        local name=config.name:gsub(\"%(\",\"\"):gsub(\"%)\",\"\")\r\n\t\tif Conditions[name] then\r\n\t\t\tif name==\"Fast\" then\r\n\t\t\t\tif state.conditions[\"Fast\"]==1 then\r\n\t\t\t\t\tModifyCondition({name=\"Fast\",amount= 2 })\r\n\t\t\t\telse\r\n\t\t\t\t\tstate.conditions[\"Fast\"]=0\r\n\t\t\t\t\tModifyCondition({name=\"Fast\",amount= 2 })    \r\n\t\t\t\tend\r\n\t\t\telseif name==\"Slow\" then\r\n\t\t\t\tif state.conditions[\"Fast\"]==2 then\r\n\t\t\t\t\tModifyCondition({name=\"Fast\",amount= 1 })\r\n\t\t\t\telse\r\n\t\t\t\t\tstate.conditions[\"Fast\"]=0\r\n\t\t\t\t\tModifyCondition({name=\"Fast\",amount= 1 })    \r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\t\r\n\t\t\t\tif state.conditions[name]==0 then\r\n\t\t\t\t\tModifyCondition({name=name,amount= 1 })\r\n\t\t\t\telse\r\n\t\t\t\t\tModifyCondition({name=name,amount= -1 })\r\n\t\t\t\tend        \r\n\t\t\tend\r\n\t\t\t\r\n\t\t\treturn true\r\n\r\n\t\telse\r\n\t\t\treturn false\r\n\t\tend\r\n\tend\r\n\r\n\tfunction end_round() \r\n\t\tModifyCondition({name=\"Activated\",amount= -1 })\r\n\t\tif state.conditions[\"Poison\"]>0 then\r\n\t\t\tModifyCondition({name=\"Poison\",amount= -1 })\r\n\t\t\tModifyHealth({amount=-1})\r\n\t\t\textra_damage = math.floor(state.conditions[\"Poison\"]/3)\r\n\t\t\tModifyHealth({amount=extra_damage*-1})\r\n\t\tend\r\n\t\tif state.conditions[\"Burning\"]>0 then\r\n\t\t\tModifyHealth({amount=-1})\r\n\t\t\textra_damage = math.floor(state.condition[\"Burning\"]/3)\r\n\t\t\tModifyHealth({amount=extra_damage*-1})\r\n\t\tend\r\n\t\tModifyCondition({name=\"Injured\",amount= -1 })\r\n\t\tModifyCondition({name=\"Adversary\",amount= -1 })\r\n\tend\r\n------ END ----------------------------------",
      "LuaScriptState": "{\"originalData\":{\"base\":{\"color\":{\"a\":1,\"b\":1,\"g\":0.5,\"r\":1},\"size\":30},\"conditions\":{\"Adaptable\":0,\"Adversary\":0,\"AuraConcealment\":0,\"AuraHazardous\":0,\"Bolstered\":0,\"Burning\":0,\"Craven\":0,\"Distracted\":0,\"Entranced\":0,\"Fast\":0,\"Focused\":0,\"Hastened\":0,\"Impact\":0,\"Injured\":0,\"Insight\":0,\"Poison\":0,\"Shielded\":0,\"Slow\":0,\"Staggered\":0,\"Stunned\":0,\"Summon\":0},\"extras\":{\"Activated\":0,\"Aura\":0,\"Mode\":0},\"health\":{\"current\":-1,\"max\":9},\"imageScale\":1.5,\"moveHistory\":[],\"referenceCard\":{\"GUID\":\"\"},\"tokens\":[]},\"state\":{\"base\":{\"color\":{\"a\":1,\"b\":1,\"g\":0.5,\"r\":1},\"size\":30},\"conditions\":{\"Adaptable\":0,\"Adversary\":0,\"AuraConcealment\":0,\"AuraHazardous\":0,\"Bolstered\":0,\"Burning\":0,\"Craven\":0,\"Distracted\":0,\"Entranced\":0,\"Fast\":0,\"Focused\":0,\"Hastened\":0,\"Impact\":0,\"Injured\":0,\"Insight\":0,\"Poison\":0,\"Shielded\":0,\"Slow\":0,\"Staggered\":0,\"Stunned\":0,\"Summon\":0},\"extras\":{\"Activated\":0,\"Aura\":0,\"Mode\":0},\"health\":{\"current\":-1,\"max\":9},\"imageScale\":1.5,\"moveHistory\":[],\"referenceCard\":{\"GUID\":\"\"},\"tokens\":[]}}",
      "XmlUI": "",
      "CustomUIAssets": [
        {
          "Type": 0,
          "Name": "Fast",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554385209/698B13597E185E6ACA0AB19C13A118A3C1BEEB4D/"
        },
        {
          "Type": 0,
          "Name": "Slow",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554366701/F479B20690BB037348F53B802F99B9B68ACFCCEA/"
        },
        {
          "Type": 0,
          "Name": "Adversary",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554346517/81BCB3804E00F22B1E40D6A84C85C26F04F3C5CC/"
        },
        {
          "Type": 0,
          "Name": "Poison",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554095214/37B3943D3C71EE6BFD13027145BDE00D0D56ED3B/"
        },
        {
          "Type": 0,
          "Name": "Burning",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554318009/A00031DC30FDC7D6EB7AEA3DFCF8AAD0754CD4CB/"
        },
        {
          "Type": 0,
          "Name": "Focused",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554725833/7B52C3AD5915BFC06B7E68025F5448C2862E0789/"
        },
        {
          "Type": 0,
          "Name": "Distracted",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554407310/DA85F94D429B073CEB18B2AB4F24FC0041F1CF30/"
        },
        {
          "Type": 0,
          "Name": "Injured",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554292969/5474B842DEC8F08CB249F3B24683FE95D58332FC/"
        },
        {
          "Type": 0,
          "Name": "Staggered",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554150868/60F4FB8B23A6586775CB50311E1F7DD6BC0C1620/"
        },
        {
          "Type": 0,
          "Name": "Stunned",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554191671/98EB8191C3884783E74F6FF8066097D2D7296CBF/"
        },
        {
          "Type": 0,
          "Name": "Shielded",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/1019447087554495459/45E41E4CF603049EEF4B3EAB39DC0B3DC93DFE78/"
        },
        {
          "Type": 0,
          "Name": "Craven",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/28819418391028798/3AB3D764F98CEE306B56A7E6FE17AFFEFDBC2687/"
        },
        {
          "Type": 0,
          "Name": "Impact",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/28819418391028913/081086FABAFA8AFAAFF52C72C72EDAA32F55AFD0/"
        },
        {
          "Type": 0,
          "Name": "Adaptable",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/28819418391028626/826E0ECCF3752137A1989CE47F8A7E1DF6FE4CCD/"
        },
        {
          "Type": 0,
          "Name": "Insight",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300435/EED601E8B8F12D7360DFEA2B57A2B8AEBEE2174C/"
        },
        {
          "Type": 0,
          "Name": "Hastened",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300292/CFDFBE1D760E16AA10E6E854866DA25F2D67CCF9/"
        },
        {
          "Type": 0,
          "Name": "Entranced",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300201/69E94F23A27A360B496D5AC6F814AE0D29C03D17/"
        },
        {
          "Type": 0,
          "Name": "Bolstered",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/28819418390300000/32313584E40B0E1BCF00631370C61EBAF785F3C4/"
        },
        {
          "Type": 0,
          "Name": "Summon",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/55841016162692762/7B070A76AD85B4DED02C679C0FC2D3DFC8CA3CBA/"
        },
        {
          "Type": 0,
          "Name": "AuraHazardous",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/55841016162692694/F49028E0DA3FB690A11582D1774A2370C955E86E/"
        },
        {
          "Type": 0,
          "Name": "AuraConcealment",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/55841016162692558/0B7B096736227AADEC0CBC8081E95057A375C6E3/"
        },
        {
          "Type": 0,
          "Name": "Aura",
          "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/movenode.png"
        },
        {
          "Type": 0,
          "Name": "Activated",
          "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/flag.png"
        },
        {
          "Type": 0,
          "Name": "Mode",
          "URL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/ui/gear.png"
        }
      ],
      "ChildObjects": [
        {
          "GUID": "cc101e",
          "Name": "Figurine_Custom",
          "Transform": {
            "posX": -6.060516E-06,
            "posY": 0.119999528,
            "posZ": 7.525266E-06,
            "rotX": -0.000244925381,
            "rotY": -0.000901584164,
            "rotZ": -0.000410259643,
            "scaleX": 0.297255069,
            "scaleY": 0.59449774,
            "scaleZ": 0.297256827
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": false,
          "Autoraise": false,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1651098259767337334/6B65D573344345A835361FABFC06A5A851DFE203/",
            "ImageSecondaryURL": "https://steamusercontent-a.akamaihd.net/ugc/1651098259767337334/6B65D573344345A835361FABFC06A5A851DFE203/",
            "ImageScalar": 1.8,
            "WidthScale": 0.0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "PhysicsMaterial": {
            "StaticFriction": 1.0,
            "DynamicFriction": 0.7,
            "Bounciness": 0.0,
            "FrictionCombine": 0,
            "BounceCombine": 0
          },
          "Rigidbody": {
            "Mass": 10.0,
            "Drag": 0.0,
            "AngularDrag": 0.0,
            "UseGravity": true
          }
        }
      ]
    },
    {
      "GUID": "5977b9",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -4.38088465,
        "posY": 0.962946534,
        "posZ": -8.9013,
        "rotX": -4.211201E-05,
        "rotY": 209.997818,
        "rotZ": -9.116347E-05,
        "scaleX": 0.0,
        "scaleY": 1.0,
        "scaleZ": 0.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.5,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": false,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/components/arcs/round0.obj",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/utility/null_COL.obj",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": false
      },
      "LuaScript": "\t\t\t\t\tlocal lastParent = nil\n\t\t\t\t\tlocal clock = 2\n\t\t\t\t\tfunction onLoad() \n\t\t\t\t\t\t(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false)\n\t\t\t\t\t\tWait.condition(\n\t\t\t\t\t\t\tfunction() \n\t\t\t\t\t\t\t\t(self.getComponent('BoxCollider') or self.getComponent('MeshCollider')).set('enabled',false) \n\t\t\t\t\t\t\tend, \n\t\t\t\t\t\t\tfunction() \n\t\t\t\t\t\t\t\treturn not(self.loading_custom) \n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t) \n\t\t\t\t\tend \n\t\t\t\t\tfunction onUpdate() \n\t\t\t\t\t\tif (parent ~= nil) then \n\t\t\t\t\t\t\tif clock < 0 then\n\t\t\t\t\t\t\t\tclock = 2;\n\t\t\t\t\t\t\t\tif self.getPosition():distance(parent.getPosition()) > 0.01 then\n\t\t\t\t\t\t\t\t\tself.setPosition(parent.getPosition())\n\t\t\t\t\t\t\t\t\tself.setRotation(parent.getRotation()) \n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tclock = clock - 1\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tself.destruct() \n\t\t\t\t\t\tend \n\t\t\t\t\tend\n\t\t\t\t",
      "LuaScriptState": "",
      "XmlUI": "",
      "PhysicsMaterial": {
        "StaticFriction": 1.0,
        "DynamicFriction": 0.7,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 0.0,
        "Drag": 0.0,
        "AngularDrag": 0.1,
        "UseGravity": false
      }
    }
  ]
}